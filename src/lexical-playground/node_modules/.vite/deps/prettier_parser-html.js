import {
  __commonJS
} from "./chunk-LQ2VYIYD.js";

// ../../node_modules/prettier/parser-html.js
var require_parser_html = __commonJS({
  "../../node_modules/prettier/parser-html.js"(exports, module) {
    (function(e) {
      if (typeof exports == "object" && typeof module == "object")
        module.exports = e();
      else if (typeof define == "function" && define.amd)
        define(e);
      else {
        var i = typeof globalThis < "u" ? globalThis : typeof global < "u" ? global : typeof self < "u" ? self : this || {};
        i.prettierPlugins = i.prettierPlugins || {}, i.prettierPlugins.html = e();
      }
    })(function() {
      "use strict";
      var y = (e, r) => () => (r || e((r = { exports: {} }).exports, r), r.exports);
      var G = y((cl, zr) => {
        var we = function(e) {
          return e && e.Math == Math && e;
        };
        zr.exports = we(typeof globalThis == "object" && globalThis) || we(typeof window == "object" && window) || we(typeof self == "object" && self) || we(typeof global == "object" && global) || /* @__PURE__ */ function() {
          return this;
        }() || Function("return this")();
      });
      var se = y((Dl, Wr) => {
        Wr.exports = function(e) {
          try {
            return !!e();
          } catch {
            return true;
          }
        };
      });
      var oe = y((ll, Yr) => {
        var bs = se();
        Yr.exports = !bs(function() {
          return Object.defineProperty({}, 1, { get: function() {
            return 7;
          } })[1] != 7;
        });
      });
      var Ne = y((hl, Qr) => {
        var ws = se();
        Qr.exports = !ws(function() {
          var e = (function() {
          }).bind();
          return typeof e != "function" || e.hasOwnProperty("prototype");
        });
      });
      var ce = y((pl, Kr) => {
        var Ns = Ne(), Oe = Function.prototype.call;
        Kr.exports = Ns ? Oe.bind(Oe) : function() {
          return Oe.apply(Oe, arguments);
        };
      });
      var rt = y((et) => {
        "use strict";
        var Jr = {}.propertyIsEnumerable, Zr = Object.getOwnPropertyDescriptor, Os = Zr && !Jr.call({ 1: 2 }, 1);
        et.f = Os ? function(r) {
          var t = Zr(this, r);
          return !!t && t.enumerable;
        } : Jr;
      });
      var qe = y((dl, tt) => {
        tt.exports = function(e, r) {
          return { enumerable: !(e & 1), configurable: !(e & 2), writable: !(e & 4), value: r };
        };
      });
      var Q = y((El, st) => {
        var ut = Ne(), nt = Function.prototype, qs = nt.bind, er = nt.call, Is = ut && qs.bind(er, er);
        st.exports = ut ? function(e) {
          return e && Is(e);
        } : function(e) {
          return e && function() {
            return er.apply(e, arguments);
          };
        };
      });
      var Ie = y((Cl, it) => {
        var at = Q(), Rs = at({}.toString), xs = at("".slice);
        it.exports = function(e) {
          return xs(Rs(e), 8, -1);
        };
      });
      var ct = y((ml, ot) => {
        var Ps = G(), ks = Q(), Ls = se(), Ms = Ie(), rr = Ps.Object, js = ks("".split);
        ot.exports = Ls(function() {
          return !rr("z").propertyIsEnumerable(0);
        }) ? function(e) {
          return Ms(e) == "String" ? js(e, "") : rr(e);
        } : rr;
      });
      var tr = y((gl, Dt) => {
        var $s = G(), Us = $s.TypeError;
        Dt.exports = function(e) {
          if (e == null)
            throw Us("Can't call method on " + e);
          return e;
        };
      });
      var Re = y((Fl, lt) => {
        var Gs = ct(), Vs = tr();
        lt.exports = function(e) {
          return Gs(Vs(e));
        };
      });
      var K = y((Al, ht) => {
        ht.exports = function(e) {
          return typeof e == "function";
        };
      });
      var De = y((vl, pt) => {
        var Xs = K();
        pt.exports = function(e) {
          return typeof e == "object" ? e !== null : Xs(e);
        };
      });
      var ge = y((_l, ft) => {
        var ur = G(), Hs = K(), zs = function(e) {
          return Hs(e) ? e : void 0;
        };
        ft.exports = function(e, r) {
          return arguments.length < 2 ? zs(ur[e]) : ur[e] && ur[e][r];
        };
      });
      var nr = y((Sl, dt) => {
        var Ws = Q();
        dt.exports = Ws({}.isPrototypeOf);
      });
      var Ct = y((yl, Et) => {
        var Ys = ge();
        Et.exports = Ys("navigator", "userAgent") || "";
      });
      var St = y((Tl, _t) => {
        var vt = G(), sr = Ct(), mt = vt.process, gt = vt.Deno, Ft = mt && mt.versions || gt && gt.version, At = Ft && Ft.v8, te, xe;
        At && (te = At.split("."), xe = te[0] > 0 && te[0] < 4 ? 1 : +(te[0] + te[1]));
        !xe && sr && (te = sr.match(/Edge\/(\d+)/), (!te || te[1] >= 74) && (te = sr.match(/Chrome\/(\d+)/), te && (xe = +te[1])));
        _t.exports = xe;
      });
      var ar = y((Bl, Tt) => {
        var yt = St(), Qs = se();
        Tt.exports = !!Object.getOwnPropertySymbols && !Qs(function() {
          var e = Symbol();
          return !String(e) || !(Object(e) instanceof Symbol) || !Symbol.sham && yt && yt < 41;
        });
      });
      var ir = y((bl, Bt) => {
        var Ks = ar();
        Bt.exports = Ks && !Symbol.sham && typeof Symbol.iterator == "symbol";
      });
      var or = y((wl, bt) => {
        var Js = G(), Zs = ge(), ea = K(), ra = nr(), ta = ir(), ua = Js.Object;
        bt.exports = ta ? function(e) {
          return typeof e == "symbol";
        } : function(e) {
          var r = Zs("Symbol");
          return ea(r) && ra(r.prototype, ua(e));
        };
      });
      var Pe = y((Nl, wt) => {
        var na = G(), sa = na.String;
        wt.exports = function(e) {
          try {
            return sa(e);
          } catch {
            return "Object";
          }
        };
      });
      var Fe = y((Ol, Nt) => {
        var aa = G(), ia = K(), oa = Pe(), ca = aa.TypeError;
        Nt.exports = function(e) {
          if (ia(e))
            return e;
          throw ca(oa(e) + " is not a function");
        };
      });
      var ke = y((ql, Ot) => {
        var Da = Fe();
        Ot.exports = function(e, r) {
          var t = e[r];
          return t == null ? void 0 : Da(t);
        };
      });
      var It = y((Il, qt) => {
        var la = G(), cr = ce(), Dr = K(), lr = De(), ha = la.TypeError;
        qt.exports = function(e, r) {
          var t, s;
          if (r === "string" && Dr(t = e.toString) && !lr(s = cr(t, e)) || Dr(t = e.valueOf) && !lr(s = cr(t, e)) || r !== "string" && Dr(t = e.toString) && !lr(s = cr(t, e)))
            return s;
          throw ha("Can't convert object to primitive value");
        };
      });
      var xt = y((Rl, Rt) => {
        Rt.exports = false;
      });
      var Le = y((xl, kt) => {
        var Pt = G(), pa = Object.defineProperty;
        kt.exports = function(e, r) {
          try {
            pa(Pt, e, { value: r, configurable: true, writable: true });
          } catch {
            Pt[e] = r;
          }
          return r;
        };
      });
      var Me = y((Pl, Mt) => {
        var fa = G(), da = Le(), Lt = "__core-js_shared__", Ea = fa[Lt] || da(Lt, {});
        Mt.exports = Ea;
      });
      var hr = y((kl, $t) => {
        var Ca = xt(), jt = Me();
        ($t.exports = function(e, r) {
          return jt[e] || (jt[e] = r !== void 0 ? r : {});
        })("versions", []).push({ version: "3.22.2", mode: Ca ? "pure" : "global", copyright: "Â© 2014-2022 Denis Pushkarev (zloirock.ru)", license: "https://github.com/zloirock/core-js/blob/v3.22.2/LICENSE", source: "https://github.com/zloirock/core-js" });
      });
      var pr = y((Ll, Ut) => {
        var ma = G(), ga = tr(), Fa = ma.Object;
        Ut.exports = function(e) {
          return Fa(ga(e));
        };
      });
      var ae = y((Ml, Gt) => {
        var Aa = Q(), va = pr(), _a = Aa({}.hasOwnProperty);
        Gt.exports = Object.hasOwn || function(r, t) {
          return _a(va(r), t);
        };
      });
      var fr = y((jl, Vt) => {
        var Sa = Q(), ya = 0, Ta = Math.random(), Ba = Sa(1 .toString);
        Vt.exports = function(e) {
          return "Symbol(" + (e === void 0 ? "" : e) + ")_" + Ba(++ya + Ta, 36);
        };
      });
      var he = y(($l, Yt) => {
        var ba = G(), wa = hr(), Xt = ae(), Na = fr(), Ht = ar(), Wt = ir(), fe = wa("wks"), le = ba.Symbol, zt = le && le.for, Oa = Wt ? le : le && le.withoutSetter || Na;
        Yt.exports = function(e) {
          if (!Xt(fe, e) || !(Ht || typeof fe[e] == "string")) {
            var r = "Symbol." + e;
            Ht && Xt(le, e) ? fe[e] = le[e] : Wt && zt ? fe[e] = zt(r) : fe[e] = Oa(r);
          }
          return fe[e];
        };
      });
      var Zt = y((Ul, Jt) => {
        var qa = G(), Ia = ce(), Qt = De(), Kt = or(), Ra = ke(), xa = It(), Pa = he(), ka = qa.TypeError, La = Pa("toPrimitive");
        Jt.exports = function(e, r) {
          if (!Qt(e) || Kt(e))
            return e;
          var t = Ra(e, La), s;
          if (t) {
            if (r === void 0 && (r = "default"), s = Ia(t, e, r), !Qt(s) || Kt(s))
              return s;
            throw ka("Can't convert object to primitive value");
          }
          return r === void 0 && (r = "number"), xa(e, r);
        };
      });
      var je = y((Gl, eu) => {
        var Ma = Zt(), ja = or();
        eu.exports = function(e) {
          var r = Ma(e, "string");
          return ja(r) ? r : r + "";
        };
      });
      var uu = y((Vl, tu) => {
        var $a = G(), ru = De(), dr = $a.document, Ua = ru(dr) && ru(dr.createElement);
        tu.exports = function(e) {
          return Ua ? dr.createElement(e) : {};
        };
      });
      var Er = y((Xl, nu) => {
        var Ga = oe(), Va = se(), Xa = uu();
        nu.exports = !Ga && !Va(function() {
          return Object.defineProperty(Xa("div"), "a", { get: function() {
            return 7;
          } }).a != 7;
        });
      });
      var Cr = y((au) => {
        var Ha = oe(), za = ce(), Wa = rt(), Ya = qe(), Qa = Re(), Ka = je(), Ja = ae(), Za = Er(), su = Object.getOwnPropertyDescriptor;
        au.f = Ha ? su : function(r, t) {
          if (r = Qa(r), t = Ka(t), Za)
            try {
              return su(r, t);
            } catch {
            }
          if (Ja(r, t))
            return Ya(!za(Wa.f, r, t), r[t]);
        };
      });
      var ou = y((zl, iu) => {
        var ei = oe(), ri = se();
        iu.exports = ei && ri(function() {
          return Object.defineProperty(function() {
          }, "prototype", { value: 42, writable: false }).prototype != 42;
        });
      });
      var de = y((Wl, Du) => {
        var cu = G(), ti = De(), ui = cu.String, ni = cu.TypeError;
        Du.exports = function(e) {
          if (ti(e))
            return e;
          throw ni(ui(e) + " is not an object");
        };
      });
      var Ue = y((hu) => {
        var si = G(), ai = oe(), ii = Er(), oi = ou(), $e = de(), lu = je(), ci = si.TypeError, mr = Object.defineProperty, Di = Object.getOwnPropertyDescriptor, gr = "enumerable", Fr = "configurable", Ar = "writable";
        hu.f = ai ? oi ? function(r, t, s) {
          if ($e(r), t = lu(t), $e(s), typeof r == "function" && t === "prototype" && "value" in s && Ar in s && !s[Ar]) {
            var c = Di(r, t);
            c && c[Ar] && (r[t] = s.value, s = { configurable: Fr in s ? s[Fr] : c[Fr], enumerable: gr in s ? s[gr] : c[gr], writable: false });
          }
          return mr(r, t, s);
        } : mr : function(r, t, s) {
          if ($e(r), t = lu(t), $e(s), ii)
            try {
              return mr(r, t, s);
            } catch {
            }
          if ("get" in s || "set" in s)
            throw ci("Accessors not supported");
          return "value" in s && (r[t] = s.value), r;
        };
      });
      var Ge = y((Ql, pu) => {
        var li = oe(), hi = Ue(), pi = qe();
        pu.exports = li ? function(e, r, t) {
          return hi.f(e, r, pi(1, t));
        } : function(e, r, t) {
          return e[r] = t, e;
        };
      });
      var Ve = y((Kl, fu) => {
        var fi = Q(), di = K(), vr = Me(), Ei = fi(Function.toString);
        di(vr.inspectSource) || (vr.inspectSource = function(e) {
          return Ei(e);
        });
        fu.exports = vr.inspectSource;
      });
      var Cu = y((Jl, Eu) => {
        var Ci = G(), mi = K(), gi = Ve(), du = Ci.WeakMap;
        Eu.exports = mi(du) && /native code/.test(gi(du));
      });
      var Fu = y((Zl, gu) => {
        var Fi = hr(), Ai = fr(), mu = Fi("keys");
        gu.exports = function(e) {
          return mu[e] || (mu[e] = Ai(e));
        };
      });
      var _r = y((e2, Au) => {
        Au.exports = {};
      });
      var Bu = y((r2, Tu) => {
        var vi = Cu(), yu = G(), Sr = Q(), _i = De(), Si = Ge(), yr = ae(), Tr = Me(), yi = Fu(), Ti = _r(), vu = "Object already initialized", br = yu.TypeError, Bi = yu.WeakMap, Xe, Ae, He, bi = function(e) {
          return He(e) ? Ae(e) : Xe(e, {});
        }, wi = function(e) {
          return function(r) {
            var t;
            if (!_i(r) || (t = Ae(r)).type !== e)
              throw br("Incompatible receiver, " + e + " required");
            return t;
          };
        };
        vi || Tr.state ? (ie = Tr.state || (Tr.state = new Bi()), _u = Sr(ie.get), Br = Sr(ie.has), Su = Sr(ie.set), Xe = function(e, r) {
          if (Br(ie, e))
            throw new br(vu);
          return r.facade = e, Su(ie, e, r), r;
        }, Ae = function(e) {
          return _u(ie, e) || {};
        }, He = function(e) {
          return Br(ie, e);
        }) : (pe = yi("state"), Ti[pe] = true, Xe = function(e, r) {
          if (yr(e, pe))
            throw new br(vu);
          return r.facade = e, Si(e, pe, r), r;
        }, Ae = function(e) {
          return yr(e, pe) ? e[pe] : {};
        }, He = function(e) {
          return yr(e, pe);
        });
        var ie, _u, Br, Su, pe;
        Tu.exports = { set: Xe, get: Ae, has: He, enforce: bi, getterFor: wi };
      });
      var Nu = y((t2, wu) => {
        var wr = oe(), Ni = ae(), bu = Function.prototype, Oi = wr && Object.getOwnPropertyDescriptor, Nr = Ni(bu, "name"), qi = Nr && (function() {
        }).name === "something", Ii = Nr && (!wr || wr && Oi(bu, "name").configurable);
        wu.exports = { EXISTS: Nr, PROPER: qi, CONFIGURABLE: Ii };
      });
      var xu = y((u2, Ru) => {
        var Ri = G(), Ou = K(), xi = ae(), qu = Ge(), Pi = Le(), ki = Ve(), Iu = Bu(), Li = Nu().CONFIGURABLE, Mi = Iu.get, ji = Iu.enforce, $i = String(String).split("String");
        (Ru.exports = function(e, r, t, s) {
          var c = s ? !!s.unsafe : false, n = s ? !!s.enumerable : false, a = s ? !!s.noTargetGet : false, p = s && s.name !== void 0 ? s.name : r, D;
          if (Ou(t) && (String(p).slice(0, 7) === "Symbol(" && (p = "[" + String(p).replace(/^Symbol\(([^)]*)\)/, "$1") + "]"), (!xi(t, "name") || Li && t.name !== p) && qu(t, "name", p), D = ji(t), D.source || (D.source = $i.join(typeof p == "string" ? p : ""))), e === Ri) {
            n ? e[r] = t : Pi(r, t);
            return;
          } else
            c ? !a && e[r] && (n = true) : delete e[r];
          n ? e[r] = t : qu(e, r, t);
        })(Function.prototype, "toString", function() {
          return Ou(this) && Mi(this).source || ki(this);
        });
      });
      var Or = y((n2, Pu) => {
        var Ui = Math.ceil, Gi = Math.floor;
        Pu.exports = function(e) {
          var r = +e;
          return r !== r || r === 0 ? 0 : (r > 0 ? Gi : Ui)(r);
        };
      });
      var Lu = y((s2, ku) => {
        var Vi = Or(), Xi = Math.max, Hi = Math.min;
        ku.exports = function(e, r) {
          var t = Vi(e);
          return t < 0 ? Xi(t + r, 0) : Hi(t, r);
        };
      });
      var ju = y((a2, Mu) => {
        var zi = Or(), Wi = Math.min;
        Mu.exports = function(e) {
          return e > 0 ? Wi(zi(e), 9007199254740991) : 0;
        };
      });
      var ve = y((i2, $u) => {
        var Yi = ju();
        $u.exports = function(e) {
          return Yi(e.length);
        };
      });
      var Vu = y((o2, Gu) => {
        var Qi = Re(), Ki = Lu(), Ji = ve(), Uu = function(e) {
          return function(r, t, s) {
            var c = Qi(r), n = Ji(c), a = Ki(s, n), p;
            if (e && t != t) {
              for (; n > a; )
                if (p = c[a++], p != p)
                  return true;
            } else
              for (; n > a; a++)
                if ((e || a in c) && c[a] === t)
                  return e || a || 0;
            return !e && -1;
          };
        };
        Gu.exports = { includes: Uu(true), indexOf: Uu(false) };
      });
      var zu = y((c2, Hu) => {
        var Zi = Q(), qr = ae(), eo = Re(), ro = Vu().indexOf, to = _r(), Xu = Zi([].push);
        Hu.exports = function(e, r) {
          var t = eo(e), s = 0, c = [], n;
          for (n in t)
            !qr(to, n) && qr(t, n) && Xu(c, n);
          for (; r.length > s; )
            qr(t, n = r[s++]) && (~ro(c, n) || Xu(c, n));
          return c;
        };
      });
      var Yu = y((D2, Wu) => {
        Wu.exports = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
      });
      var Ku = y((Qu) => {
        var uo = zu(), no = Yu(), so = no.concat("length", "prototype");
        Qu.f = Object.getOwnPropertyNames || function(r) {
          return uo(r, so);
        };
      });
      var Zu = y((Ju) => {
        Ju.f = Object.getOwnPropertySymbols;
      });
      var rn = y((p2, en) => {
        var ao = ge(), io = Q(), oo = Ku(), co = Zu(), Do = de(), lo = io([].concat);
        en.exports = ao("Reflect", "ownKeys") || function(r) {
          var t = oo.f(Do(r)), s = co.f;
          return s ? lo(t, s(r)) : t;
        };
      });
      var nn = y((f2, un) => {
        var tn = ae(), ho = rn(), po = Cr(), fo = Ue();
        un.exports = function(e, r, t) {
          for (var s = ho(r), c = fo.f, n = po.f, a = 0; a < s.length; a++) {
            var p = s[a];
            !tn(e, p) && !(t && tn(t, p)) && c(e, p, n(r, p));
          }
        };
      });
      var an = y((d2, sn) => {
        var Eo = se(), Co = K(), mo = /#|\.prototype\./, _e = function(e, r) {
          var t = Fo[go(e)];
          return t == vo ? true : t == Ao ? false : Co(r) ? Eo(r) : !!r;
        }, go = _e.normalize = function(e) {
          return String(e).replace(mo, ".").toLowerCase();
        }, Fo = _e.data = {}, Ao = _e.NATIVE = "N", vo = _e.POLYFILL = "P";
        sn.exports = _e;
      });
      var ze = y((E2, on) => {
        var Ir = G(), _o = Cr().f, So = Ge(), yo = xu(), To = Le(), Bo = nn(), bo = an();
        on.exports = function(e, r) {
          var t = e.target, s = e.global, c = e.stat, n, a, p, D, g, i;
          if (s ? a = Ir : c ? a = Ir[t] || To(t, {}) : a = (Ir[t] || {}).prototype, a)
            for (p in r) {
              if (g = r[p], e.noTargetGet ? (i = _o(a, p), D = i && i.value) : D = a[p], n = bo(s ? p : t + (c ? "." : "#") + p, e.forced), !n && D !== void 0) {
                if (typeof g == typeof D)
                  continue;
                Bo(g, D);
              }
              (e.sham || D && D.sham) && So(g, "sham", true), yo(a, p, g, e);
            }
        };
      });
      var cn = y(() => {
        var wo = ze(), No = G();
        wo({ global: true }, { globalThis: No });
      });
      var Dn = y(() => {
        cn();
      });
      var Rr = y((A2, ln) => {
        var Oo = Ie();
        ln.exports = Array.isArray || function(r) {
          return Oo(r) == "Array";
        };
      });
      var xr = y((v2, pn) => {
        var hn = Q(), qo = Fe(), Io = Ne(), Ro = hn(hn.bind);
        pn.exports = function(e, r) {
          return qo(e), r === void 0 ? e : Io ? Ro(e, r) : function() {
            return e.apply(r, arguments);
          };
        };
      });
      var En = y((_2, dn) => {
        "use strict";
        var xo = G(), Po = Rr(), ko = ve(), Lo = xr(), Mo = xo.TypeError, fn = function(e, r, t, s, c, n, a, p) {
          for (var D = c, g = 0, i = a ? Lo(a, p) : false, l, h; g < s; ) {
            if (g in t) {
              if (l = i ? i(t[g], g, r) : t[g], n > 0 && Po(l))
                h = ko(l), D = fn(e, r, l, h, D, n - 1) - 1;
              else {
                if (D >= 9007199254740991)
                  throw Mo("Exceed the acceptable array length");
                e[D] = l;
              }
              D++;
            }
            g++;
          }
          return D;
        };
        dn.exports = fn;
      });
      var gn = y((S2, mn) => {
        var jo = he(), $o = jo("toStringTag"), Cn = {};
        Cn[$o] = "z";
        mn.exports = String(Cn) === "[object z]";
      });
      var Pr = y((y2, Fn) => {
        var Uo = G(), Go = gn(), Vo = K(), We = Ie(), Xo = he(), Ho = Xo("toStringTag"), zo = Uo.Object, Wo = We(/* @__PURE__ */ function() {
          return arguments;
        }()) == "Arguments", Yo = function(e, r) {
          try {
            return e[r];
          } catch {
          }
        };
        Fn.exports = Go ? We : function(e) {
          var r, t, s;
          return e === void 0 ? "Undefined" : e === null ? "Null" : typeof (t = Yo(r = zo(e), Ho)) == "string" ? t : Wo ? We(r) : (s = We(r)) == "Object" && Vo(r.callee) ? "Arguments" : s;
        };
      });
      var Tn = y((T2, yn) => {
        var Qo = Q(), Ko = se(), An = K(), Jo = Pr(), Zo = ge(), ec = Ve(), vn = function() {
        }, rc = [], _n = Zo("Reflect", "construct"), kr = /^\s*(?:class|function)\b/, tc = Qo(kr.exec), uc = !kr.exec(vn), Se = function(r) {
          if (!An(r))
            return false;
          try {
            return _n(vn, rc, r), true;
          } catch {
            return false;
          }
        }, Sn = function(r) {
          if (!An(r))
            return false;
          switch (Jo(r)) {
            case "AsyncFunction":
            case "GeneratorFunction":
            case "AsyncGeneratorFunction":
              return false;
          }
          try {
            return uc || !!tc(kr, ec(r));
          } catch {
            return true;
          }
        };
        Sn.sham = true;
        yn.exports = !_n || Ko(function() {
          var e;
          return Se(Se.call) || !Se(Object) || !Se(function() {
            e = true;
          }) || e;
        }) ? Sn : Se;
      });
      var Nn = y((B2, wn) => {
        var nc = G(), Bn = Rr(), sc = Tn(), ac = De(), ic = he(), oc = ic("species"), bn = nc.Array;
        wn.exports = function(e) {
          var r;
          return Bn(e) && (r = e.constructor, sc(r) && (r === bn || Bn(r.prototype)) ? r = void 0 : ac(r) && (r = r[oc], r === null && (r = void 0))), r === void 0 ? bn : r;
        };
      });
      var qn = y((b2, On) => {
        var cc = Nn();
        On.exports = function(e, r) {
          return new (cc(e))(r === 0 ? 0 : r);
        };
      });
      var In = y(() => {
        "use strict";
        var Dc = ze(), lc = En(), hc = Fe(), pc = pr(), fc = ve(), dc = qn();
        Dc({ target: "Array", proto: true }, { flatMap: function(r) {
          var t = pc(this), s = fc(t), c;
          return hc(r), c = dc(t, 0), c.length = lc(c, t, t, s, 0, 1, r, arguments.length > 1 ? arguments[1] : void 0), c;
        } });
      });
      var Lr = y((O2, Rn) => {
        Rn.exports = {};
      });
      var Pn = y((q2, xn) => {
        var Ec = he(), Cc = Lr(), mc = Ec("iterator"), gc = Array.prototype;
        xn.exports = function(e) {
          return e !== void 0 && (Cc.Array === e || gc[mc] === e);
        };
      });
      var Mr = y((I2, Ln) => {
        var Fc = Pr(), kn = ke(), Ac = Lr(), vc = he(), _c = vc("iterator");
        Ln.exports = function(e) {
          if (e != null)
            return kn(e, _c) || kn(e, "@@iterator") || Ac[Fc(e)];
        };
      });
      var jn = y((R2, Mn) => {
        var Sc = G(), yc = ce(), Tc = Fe(), Bc = de(), bc = Pe(), wc = Mr(), Nc = Sc.TypeError;
        Mn.exports = function(e, r) {
          var t = arguments.length < 2 ? wc(e) : r;
          if (Tc(t))
            return Bc(yc(t, e));
          throw Nc(bc(e) + " is not iterable");
        };
      });
      var Gn = y((x2, Un) => {
        var Oc = ce(), $n = de(), qc = ke();
        Un.exports = function(e, r, t) {
          var s, c;
          $n(e);
          try {
            if (s = qc(e, "return"), !s) {
              if (r === "throw")
                throw t;
              return t;
            }
            s = Oc(s, e);
          } catch (n) {
            c = true, s = n;
          }
          if (r === "throw")
            throw t;
          if (c)
            throw s;
          return $n(s), t;
        };
      });
      var Wn = y((P2, zn) => {
        var Ic = G(), Rc = xr(), xc = ce(), Pc = de(), kc = Pe(), Lc = Pn(), Mc = ve(), Vn = nr(), jc = jn(), $c = Mr(), Xn = Gn(), Uc = Ic.TypeError, Ye = function(e, r) {
          this.stopped = e, this.result = r;
        }, Hn = Ye.prototype;
        zn.exports = function(e, r, t) {
          var s = t && t.that, c = !!(t && t.AS_ENTRIES), n = !!(t && t.IS_ITERATOR), a = !!(t && t.INTERRUPTED), p = Rc(r, s), D, g, i, l, h, C, d, m = function(B) {
            return D && Xn(D, "normal", B), new Ye(true, B);
          }, T = function(B) {
            return c ? (Pc(B), a ? p(B[0], B[1], m) : p(B[0], B[1])) : a ? p(B, m) : p(B);
          };
          if (n)
            D = e;
          else {
            if (g = $c(e), !g)
              throw Uc(kc(e) + " is not iterable");
            if (Lc(g)) {
              for (i = 0, l = Mc(e); l > i; i++)
                if (h = T(e[i]), h && Vn(Hn, h))
                  return h;
              return new Ye(false);
            }
            D = jc(e, g);
          }
          for (C = D.next; !(d = xc(C, D)).done; ) {
            try {
              h = T(d.value);
            } catch (B) {
              Xn(D, "throw", B);
            }
            if (typeof h == "object" && h && Vn(Hn, h))
              return h;
          }
          return new Ye(false);
        };
      });
      var Qn = y((k2, Yn) => {
        "use strict";
        var Gc = je(), Vc = Ue(), Xc = qe();
        Yn.exports = function(e, r, t) {
          var s = Gc(r);
          s in e ? Vc.f(e, s, Xc(0, t)) : e[s] = t;
        };
      });
      var Kn = y(() => {
        var Hc = ze(), zc = Wn(), Wc = Qn();
        Hc({ target: "Object", stat: true }, { fromEntries: function(r) {
          var t = {};
          return zc(r, function(s, c) {
            Wc(t, s, c);
          }, { AS_ENTRIES: true }), t;
        } });
      });
      var il = y((j2, Bs) => {
        var Yc = ["cliName", "cliCategory", "cliDescription"], Jn, Zn, es, rs, ts, us;
        function Qc(e, r) {
          if (e == null)
            return {};
          var t = Kc(e, r), s, c;
          if (Object.getOwnPropertySymbols) {
            var n = Object.getOwnPropertySymbols(e);
            for (c = 0; c < n.length; c++)
              s = n[c], !(r.indexOf(s) >= 0) && (!Object.prototype.propertyIsEnumerable.call(e, s) || (t[s] = e[s]));
          }
          return t;
        }
        function Kc(e, r) {
          if (e == null)
            return {};
          var t = {}, s = Object.keys(e), c, n;
          for (n = 0; n < s.length; n++)
            c = s[n], !(r.indexOf(c) >= 0) && (t[c] = e[c]);
          return t;
        }
        function Ee(e, r) {
          return r || (r = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(r) } }));
        }
        Dn();
        In();
        Kn();
        var Jc = Object.create, Je = Object.defineProperty, Zc = Object.getOwnPropertyDescriptor, $r = Object.getOwnPropertyNames, eD = Object.getPrototypeOf, rD = Object.prototype.hasOwnProperty, Ce = (e, r) => function() {
          return e && (r = (0, e[$r(e)[0]])(e = 0)), r;
        }, I = (e, r) => function() {
          return r || (0, e[$r(e)[0]])((r = { exports: {} }).exports, r), r.exports;
        }, cs = (e, r) => {
          for (var t in r)
            Je(e, t, { get: r[t], enumerable: true });
        }, Ds = (e, r, t, s) => {
          if (r && typeof r == "object" || typeof r == "function")
            for (let c of $r(r))
              !rD.call(e, c) && c !== t && Je(e, c, { get: () => r[c], enumerable: !(s = Zc(r, c)) || s.enumerable });
          return e;
        }, tD = (e, r, t) => (t = e != null ? Jc(eD(e)) : {}, Ds(r || !e || !e.__esModule ? Je(t, "default", { value: e, enumerable: true }) : t, e)), ls = (e) => Ds(Je({}, "__esModule", { value: true }), e), ns, ss, ye, q = Ce({ "<define:process>"() {
          ns = {}, ss = [], ye = { env: ns, argv: ss };
        } }), hs = I({ "node_modules/angular-html-parser/lib/compiler/src/chars.js"(e) {
          "use strict";
          q(), Object.defineProperty(e, "__esModule", { value: true }), e.$EOF = 0, e.$BSPACE = 8, e.$TAB = 9, e.$LF = 10, e.$VTAB = 11, e.$FF = 12, e.$CR = 13, e.$SPACE = 32, e.$BANG = 33, e.$DQ = 34, e.$HASH = 35, e.$$ = 36, e.$PERCENT = 37, e.$AMPERSAND = 38, e.$SQ = 39, e.$LPAREN = 40, e.$RPAREN = 41, e.$STAR = 42, e.$PLUS = 43, e.$COMMA = 44, e.$MINUS = 45, e.$PERIOD = 46, e.$SLASH = 47, e.$COLON = 58, e.$SEMICOLON = 59, e.$LT = 60, e.$EQ = 61, e.$GT = 62, e.$QUESTION = 63, e.$0 = 48, e.$7 = 55, e.$9 = 57, e.$A = 65, e.$E = 69, e.$F = 70, e.$X = 88, e.$Z = 90, e.$LBRACKET = 91, e.$BACKSLASH = 92, e.$RBRACKET = 93, e.$CARET = 94, e.$_ = 95, e.$a = 97, e.$b = 98, e.$e = 101, e.$f = 102, e.$n = 110, e.$r = 114, e.$t = 116, e.$u = 117, e.$v = 118, e.$x = 120, e.$z = 122, e.$LBRACE = 123, e.$BAR = 124, e.$RBRACE = 125, e.$NBSP = 160, e.$PIPE = 124, e.$TILDA = 126, e.$AT = 64, e.$BT = 96;
          function r(p) {
            return p >= e.$TAB && p <= e.$SPACE || p == e.$NBSP;
          }
          e.isWhitespace = r;
          function t(p) {
            return e.$0 <= p && p <= e.$9;
          }
          e.isDigit = t;
          function s(p) {
            return p >= e.$a && p <= e.$z || p >= e.$A && p <= e.$Z;
          }
          e.isAsciiLetter = s;
          function c(p) {
            return p >= e.$a && p <= e.$f || p >= e.$A && p <= e.$F || t(p);
          }
          e.isAsciiHexDigit = c;
          function n(p) {
            return p === e.$LF || p === e.$CR;
          }
          e.isNewLine = n;
          function a(p) {
            return e.$0 <= p && p <= e.$7;
          }
          e.isOctalDigit = a;
        } }), uD = I({ "node_modules/angular-html-parser/lib/compiler/src/aot/static_symbol.js"(e) {
          "use strict";
          q(), Object.defineProperty(e, "__esModule", { value: true });
          var r = class {
            constructor(s, c, n) {
              this.filePath = s, this.name = c, this.members = n;
            }
            assertNoMembers() {
              if (this.members.length)
                throw new Error("Illegal state: symbol without members expected, but got ".concat(JSON.stringify(this), "."));
            }
          };
          e.StaticSymbol = r;
          var t = class {
            constructor() {
              this.cache = /* @__PURE__ */ new Map();
            }
            get(s, c, n) {
              n = n || [];
              let a = n.length ? ".".concat(n.join(".")) : "", p = '"'.concat(s, '".').concat(c).concat(a), D = this.cache.get(p);
              return D || (D = new r(s, c, n), this.cache.set(p, D)), D;
            }
          };
          e.StaticSymbolCache = t;
        } }), nD = I({ "node_modules/angular-html-parser/lib/compiler/src/util.js"(e) {
          "use strict";
          q(), Object.defineProperty(e, "__esModule", { value: true });
          var r = /-+([a-z0-9])/g;
          function t(o) {
            return o.replace(r, function() {
              for (var E = arguments.length, f = new Array(E), F = 0; F < E; F++)
                f[F] = arguments[F];
              return f[1].toUpperCase();
            });
          }
          e.dashCaseToCamelCase = t;
          function s(o, E) {
            return n(o, ":", E);
          }
          e.splitAtColon = s;
          function c(o, E) {
            return n(o, ".", E);
          }
          e.splitAtPeriod = c;
          function n(o, E, f) {
            let F = o.indexOf(E);
            return F == -1 ? f : [o.slice(0, F).trim(), o.slice(F + 1).trim()];
          }
          function a(o, E, f) {
            return Array.isArray(o) ? E.visitArray(o, f) : A(o) ? E.visitStringMap(o, f) : o == null || typeof o == "string" || typeof o == "number" || typeof o == "boolean" ? E.visitPrimitive(o, f) : E.visitOther(o, f);
          }
          e.visitValue = a;
          function p(o) {
            return o != null;
          }
          e.isDefined = p;
          function D(o) {
            return o === void 0 ? null : o;
          }
          e.noUndefined = D;
          var g = class {
            visitArray(o, E) {
              return o.map((f) => a(f, this, E));
            }
            visitStringMap(o, E) {
              let f = {};
              return Object.keys(o).forEach((F) => {
                f[F] = a(o[F], this, E);
              }), f;
            }
            visitPrimitive(o, E) {
              return o;
            }
            visitOther(o, E) {
              return o;
            }
          };
          e.ValueTransformer = g, e.SyncAsync = { assertSync: (o) => {
            if (_(o))
              throw new Error("Illegal state: value cannot be a promise");
            return o;
          }, then: (o, E) => _(o) ? o.then(E) : E(o), all: (o) => o.some(_) ? Promise.all(o) : o };
          function i(o) {
            throw new Error("Internal Error: ".concat(o));
          }
          e.error = i;
          function l(o, E) {
            let f = Error(o);
            return f[h] = true, E && (f[C] = E), f;
          }
          e.syntaxError = l;
          var h = "ngSyntaxError", C = "ngParseErrors";
          function d(o) {
            return o[h];
          }
          e.isSyntaxError = d;
          function m(o) {
            return o[C] || [];
          }
          e.getParseErrors = m;
          function T(o) {
            return o.replace(/([.*+?^=!:${}()|[\]\/\\])/g, "\\$1");
          }
          e.escapeRegExp = T;
          var B = Object.getPrototypeOf({});
          function A(o) {
            return typeof o == "object" && o !== null && Object.getPrototypeOf(o) === B;
          }
          function N(o) {
            let E = "";
            for (let f = 0; f < o.length; f++) {
              let F = o.charCodeAt(f);
              if (F >= 55296 && F <= 56319 && o.length > f + 1) {
                let P = o.charCodeAt(f + 1);
                P >= 56320 && P <= 57343 && (f++, F = (F - 55296 << 10) + P - 56320 + 65536);
              }
              F <= 127 ? E += String.fromCharCode(F) : F <= 2047 ? E += String.fromCharCode(F >> 6 & 31 | 192, F & 63 | 128) : F <= 65535 ? E += String.fromCharCode(F >> 12 | 224, F >> 6 & 63 | 128, F & 63 | 128) : F <= 2097151 && (E += String.fromCharCode(F >> 18 & 7 | 240, F >> 12 & 63 | 128, F >> 6 & 63 | 128, F & 63 | 128));
            }
            return E;
          }
          e.utf8Encode = N;
          function R(o) {
            if (typeof o == "string")
              return o;
            if (o instanceof Array)
              return "[" + o.map(R).join(", ") + "]";
            if (o == null)
              return "" + o;
            if (o.overriddenName)
              return "".concat(o.overriddenName);
            if (o.name)
              return "".concat(o.name);
            if (!o.toString)
              return "object";
            let E = o.toString();
            if (E == null)
              return "" + E;
            let f = E.indexOf(`
`);
            return f === -1 ? E : E.substring(0, f);
          }
          e.stringify = R;
          function $(o) {
            return typeof o == "function" && o.hasOwnProperty("__forward_ref__") ? o() : o;
          }
          e.resolveForwardRef = $;
          function _(o) {
            return !!o && typeof o.then == "function";
          }
          e.isPromise = _;
          var O = class {
            constructor(o) {
              this.full = o;
              let E = o.split(".");
              this.major = E[0], this.minor = E[1], this.patch = E.slice(2).join(".");
            }
          };
          e.Version = O;
          var x = typeof window < "u" && window, k = typeof self < "u" && typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope && self, M = typeof globalThis < "u" && globalThis, u = M || x || k;
          e.global = u;
        } }), sD = I({ "node_modules/angular-html-parser/lib/compiler/src/compile_metadata.js"(e) {
          "use strict";
          q(), Object.defineProperty(e, "__esModule", { value: true });
          var r = uD(), t = nD(), s = /^(?:(?:\[([^\]]+)\])|(?:\(([^\)]+)\)))|(\@[-\w]+)$/;
          function c(f) {
            return f.replace(/\W/g, "_");
          }
          e.sanitizeIdentifier = c;
          var n = 0;
          function a(f) {
            if (!f || !f.reference)
              return null;
            let F = f.reference;
            if (F instanceof r.StaticSymbol)
              return F.name;
            if (F.__anonymousType)
              return F.__anonymousType;
            let P = t.stringify(F);
            return P.indexOf("(") >= 0 ? (P = "anonymous_".concat(n++), F.__anonymousType = P) : P = c(P), P;
          }
          e.identifierName = a;
          function p(f) {
            let F = f.reference;
            return F instanceof r.StaticSymbol ? F.filePath : "./".concat(t.stringify(F));
          }
          e.identifierModuleUrl = p;
          function D(f, F) {
            return "View_".concat(a({ reference: f }), "_").concat(F);
          }
          e.viewClassName = D;
          function g(f) {
            return "RenderType_".concat(a({ reference: f }));
          }
          e.rendererTypeName = g;
          function i(f) {
            return "HostView_".concat(a({ reference: f }));
          }
          e.hostViewClassName = i;
          function l(f) {
            return "".concat(a({ reference: f }), "NgFactory");
          }
          e.componentFactoryName = l;
          var h;
          (function(f) {
            f[f.Pipe = 0] = "Pipe", f[f.Directive = 1] = "Directive", f[f.NgModule = 2] = "NgModule", f[f.Injectable = 3] = "Injectable";
          })(h = e.CompileSummaryKind || (e.CompileSummaryKind = {}));
          function C(f) {
            return f.value != null ? c(f.value) : a(f.identifier);
          }
          e.tokenName = C;
          function d(f) {
            return f.identifier != null ? f.identifier.reference : f.value;
          }
          e.tokenReference = d;
          var m = class {
            constructor() {
              let { moduleUrl: f, styles: F, styleUrls: P } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.moduleUrl = f || null, this.styles = _(F), this.styleUrls = _(P);
            }
          };
          e.CompileStylesheetMetadata = m;
          var T = class {
            constructor(f) {
              let { encapsulation: F, template: P, templateUrl: j, htmlAst: W, styles: X, styleUrls: H, externalStylesheets: z, animations: J, ngContentSelectors: Z, interpolation: ee, isInline: v, preserveWhitespaces: S } = f;
              if (this.encapsulation = F, this.template = P, this.templateUrl = j, this.htmlAst = W, this.styles = _(X), this.styleUrls = _(H), this.externalStylesheets = _(z), this.animations = J ? x(J) : [], this.ngContentSelectors = Z || [], ee && ee.length != 2)
                throw new Error("'interpolation' should have a start and an end symbol.");
              this.interpolation = ee, this.isInline = v, this.preserveWhitespaces = S;
            }
            toSummary() {
              return { ngContentSelectors: this.ngContentSelectors, encapsulation: this.encapsulation, styles: this.styles, animations: this.animations };
            }
          };
          e.CompileTemplateMetadata = T;
          var B = class {
            static create(f) {
              let { isHost: F, type: P, isComponent: j, selector: W, exportAs: X, changeDetection: H, inputs: z, outputs: J, host: Z, providers: ee, viewProviders: v, queries: S, guards: b, viewQueries: w, entryComponents: L, template: U, componentViewType: V, rendererType: Y, componentFactory: ue } = f, Be = {}, be = {}, Vr = {};
              Z != null && Object.keys(Z).forEach((re) => {
                let ne = Z[re], me = re.match(s);
                me === null ? Vr[re] = ne : me[1] != null ? be[me[1]] = ne : me[2] != null && (Be[me[2]] = ne);
              });
              let Xr = {};
              z != null && z.forEach((re) => {
                let ne = t.splitAtColon(re, [re, re]);
                Xr[ne[0]] = ne[1];
              });
              let Hr = {};
              return J != null && J.forEach((re) => {
                let ne = t.splitAtColon(re, [re, re]);
                Hr[ne[0]] = ne[1];
              }), new B({ isHost: F, type: P, isComponent: !!j, selector: W, exportAs: X, changeDetection: H, inputs: Xr, outputs: Hr, hostListeners: Be, hostProperties: be, hostAttributes: Vr, providers: ee, viewProviders: v, queries: S, guards: b, viewQueries: w, entryComponents: L, template: U, componentViewType: V, rendererType: Y, componentFactory: ue });
            }
            constructor(f) {
              let { isHost: F, type: P, isComponent: j, selector: W, exportAs: X, changeDetection: H, inputs: z, outputs: J, hostListeners: Z, hostProperties: ee, hostAttributes: v, providers: S, viewProviders: b, queries: w, guards: L, viewQueries: U, entryComponents: V, template: Y, componentViewType: ue, rendererType: Be, componentFactory: be } = f;
              this.isHost = !!F, this.type = P, this.isComponent = j, this.selector = W, this.exportAs = X, this.changeDetection = H, this.inputs = z, this.outputs = J, this.hostListeners = Z, this.hostProperties = ee, this.hostAttributes = v, this.providers = _(S), this.viewProviders = _(b), this.queries = _(w), this.guards = L, this.viewQueries = _(U), this.entryComponents = _(V), this.template = Y, this.componentViewType = ue, this.rendererType = Be, this.componentFactory = be;
            }
            toSummary() {
              return { summaryKind: h.Directive, type: this.type, isComponent: this.isComponent, selector: this.selector, exportAs: this.exportAs, inputs: this.inputs, outputs: this.outputs, hostListeners: this.hostListeners, hostProperties: this.hostProperties, hostAttributes: this.hostAttributes, providers: this.providers, viewProviders: this.viewProviders, queries: this.queries, guards: this.guards, viewQueries: this.viewQueries, entryComponents: this.entryComponents, changeDetection: this.changeDetection, template: this.template && this.template.toSummary(), componentViewType: this.componentViewType, rendererType: this.rendererType, componentFactory: this.componentFactory };
            }
          };
          e.CompileDirectiveMetadata = B;
          var A = class {
            constructor(f) {
              let { type: F, name: P, pure: j } = f;
              this.type = F, this.name = P, this.pure = !!j;
            }
            toSummary() {
              return { summaryKind: h.Pipe, type: this.type, name: this.name, pure: this.pure };
            }
          };
          e.CompilePipeMetadata = A;
          var N = class {
          };
          e.CompileShallowModuleMetadata = N;
          var R = class {
            constructor(f) {
              let { type: F, providers: P, declaredDirectives: j, exportedDirectives: W, declaredPipes: X, exportedPipes: H, entryComponents: z, bootstrapComponents: J, importedModules: Z, exportedModules: ee, schemas: v, transitiveModule: S, id: b } = f;
              this.type = F || null, this.declaredDirectives = _(j), this.exportedDirectives = _(W), this.declaredPipes = _(X), this.exportedPipes = _(H), this.providers = _(P), this.entryComponents = _(z), this.bootstrapComponents = _(J), this.importedModules = _(Z), this.exportedModules = _(ee), this.schemas = _(v), this.id = b || null, this.transitiveModule = S || null;
            }
            toSummary() {
              let f = this.transitiveModule;
              return { summaryKind: h.NgModule, type: this.type, entryComponents: f.entryComponents, providers: f.providers, modules: f.modules, exportedDirectives: f.exportedDirectives, exportedPipes: f.exportedPipes };
            }
          };
          e.CompileNgModuleMetadata = R;
          var $ = class {
            constructor() {
              this.directivesSet = /* @__PURE__ */ new Set(), this.directives = [], this.exportedDirectivesSet = /* @__PURE__ */ new Set(), this.exportedDirectives = [], this.pipesSet = /* @__PURE__ */ new Set(), this.pipes = [], this.exportedPipesSet = /* @__PURE__ */ new Set(), this.exportedPipes = [], this.modulesSet = /* @__PURE__ */ new Set(), this.modules = [], this.entryComponentsSet = /* @__PURE__ */ new Set(), this.entryComponents = [], this.providers = [];
            }
            addProvider(f, F) {
              this.providers.push({ provider: f, module: F });
            }
            addDirective(f) {
              this.directivesSet.has(f.reference) || (this.directivesSet.add(f.reference), this.directives.push(f));
            }
            addExportedDirective(f) {
              this.exportedDirectivesSet.has(f.reference) || (this.exportedDirectivesSet.add(f.reference), this.exportedDirectives.push(f));
            }
            addPipe(f) {
              this.pipesSet.has(f.reference) || (this.pipesSet.add(f.reference), this.pipes.push(f));
            }
            addExportedPipe(f) {
              this.exportedPipesSet.has(f.reference) || (this.exportedPipesSet.add(f.reference), this.exportedPipes.push(f));
            }
            addModule(f) {
              this.modulesSet.has(f.reference) || (this.modulesSet.add(f.reference), this.modules.push(f));
            }
            addEntryComponent(f) {
              this.entryComponentsSet.has(f.componentType) || (this.entryComponentsSet.add(f.componentType), this.entryComponents.push(f));
            }
          };
          e.TransitiveCompileNgModuleMetadata = $;
          function _(f) {
            return f || [];
          }
          var O = class {
            constructor(f, F) {
              let { useClass: P, useValue: j, useExisting: W, useFactory: X, deps: H, multi: z } = F;
              this.token = f, this.useClass = P || null, this.useValue = j, this.useExisting = W, this.useFactory = X || null, this.dependencies = H || null, this.multi = !!z;
            }
          };
          e.ProviderMeta = O;
          function x(f) {
            return f.reduce((F, P) => {
              let j = Array.isArray(P) ? x(P) : P;
              return F.concat(j);
            }, []);
          }
          e.flatten = x;
          function k(f) {
            return f.replace(/(\w+:\/\/[\w:-]+)?(\/+)?/, "ng:///");
          }
          function M(f, F, P) {
            let j;
            return P.isInline ? F.type.reference instanceof r.StaticSymbol ? j = "".concat(F.type.reference.filePath, ".").concat(F.type.reference.name, ".html") : j = "".concat(a(f), "/").concat(a(F.type), ".html") : j = P.templateUrl, F.type.reference instanceof r.StaticSymbol ? j : k(j);
          }
          e.templateSourceUrl = M;
          function u(f, F) {
            let P = f.moduleUrl.split(/\/\\/g), j = P[P.length - 1];
            return k("css/".concat(F).concat(j, ".ngstyle.js"));
          }
          e.sharedStylesheetJitUrl = u;
          function o(f) {
            return k("".concat(a(f.type), "/module.ngfactory.js"));
          }
          e.ngModuleJitUrl = o;
          function E(f, F) {
            return k("".concat(a(f), "/").concat(a(F.type), ".ngfactory.js"));
          }
          e.templateJitUrl = E;
        } }), Te = I({ "node_modules/angular-html-parser/lib/compiler/src/parse_util.js"(e) {
          "use strict";
          q(), Object.defineProperty(e, "__esModule", { value: true });
          var r = hs(), t = sD(), s = class {
            constructor(i, l, h, C) {
              this.file = i, this.offset = l, this.line = h, this.col = C;
            }
            toString() {
              return this.offset != null ? "".concat(this.file.url, "@").concat(this.line, ":").concat(this.col) : this.file.url;
            }
            moveBy(i) {
              let l = this.file.content, h = l.length, C = this.offset, d = this.line, m = this.col;
              for (; C > 0 && i < 0; )
                if (C--, i++, l.charCodeAt(C) == r.$LF) {
                  d--;
                  let B = l.substr(0, C - 1).lastIndexOf(String.fromCharCode(r.$LF));
                  m = B > 0 ? C - B : C;
                } else
                  m--;
              for (; C < h && i > 0; ) {
                let T = l.charCodeAt(C);
                C++, i--, T == r.$LF ? (d++, m = 0) : m++;
              }
              return new s(this.file, C, d, m);
            }
            getContext(i, l) {
              let h = this.file.content, C = this.offset;
              if (C != null) {
                C > h.length - 1 && (C = h.length - 1);
                let d = C, m = 0, T = 0;
                for (; m < i && C > 0 && (C--, m++, !(h[C] == `
` && ++T == l)); )
                  ;
                for (m = 0, T = 0; m < i && d < h.length - 1 && (d++, m++, !(h[d] == `
` && ++T == l)); )
                  ;
                return { before: h.substring(C, this.offset), after: h.substring(this.offset, d + 1) };
              }
              return null;
            }
          };
          e.ParseLocation = s;
          var c = class {
            constructor(i, l) {
              this.content = i, this.url = l;
            }
          };
          e.ParseSourceFile = c;
          var n = class {
            constructor(i, l) {
              let h = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
              this.start = i, this.end = l, this.details = h;
            }
            toString() {
              return this.start.file.content.substring(this.start.offset, this.end.offset);
            }
          };
          e.ParseSourceSpan = n, e.EMPTY_PARSE_LOCATION = new s(new c("", ""), 0, 0, 0), e.EMPTY_SOURCE_SPAN = new n(e.EMPTY_PARSE_LOCATION, e.EMPTY_PARSE_LOCATION);
          var a;
          (function(i) {
            i[i.WARNING = 0] = "WARNING", i[i.ERROR = 1] = "ERROR";
          })(a = e.ParseErrorLevel || (e.ParseErrorLevel = {}));
          var p = class {
            constructor(i, l) {
              let h = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : a.ERROR;
              this.span = i, this.msg = l, this.level = h;
            }
            contextualMessage() {
              let i = this.span.start.getContext(100, 3);
              return i ? "".concat(this.msg, ' ("').concat(i.before, "[").concat(a[this.level], " ->]").concat(i.after, '")') : this.msg;
            }
            toString() {
              let i = this.span.details ? ", ".concat(this.span.details) : "";
              return "".concat(this.contextualMessage(), ": ").concat(this.span.start).concat(i);
            }
          };
          e.ParseError = p;
          function D(i, l) {
            let h = t.identifierModuleUrl(l), C = h != null ? "in ".concat(i, " ").concat(t.identifierName(l), " in ").concat(h) : "in ".concat(i, " ").concat(t.identifierName(l)), d = new c("", C);
            return new n(new s(d, -1, -1, -1), new s(d, -1, -1, -1));
          }
          e.typeSourceSpan = D;
          function g(i, l, h) {
            let C = "in ".concat(i, " ").concat(l, " in ").concat(h), d = new c("", C);
            return new n(new s(d, -1, -1, -1), new s(d, -1, -1, -1));
          }
          e.r3JitTypeSourceSpan = g;
        } }), aD = I({ "src/utils/front-matter/parse.js"(e, r) {
          "use strict";
          q();
          var t = new RegExp("^(?<startDelimiter>-{3}|\\+{3})(?<language>[^\\n]*)\\n(?:|(?<value>.*?)\\n)(?<endDelimiter>\\k<startDelimiter>|\\.{3})[^\\S\\n]*(?:\\n|$)", "s");
          function s(c) {
            let n = c.match(t);
            if (!n)
              return { content: c };
            let { startDelimiter: a, language: p, value: D = "", endDelimiter: g } = n.groups, i = p.trim() || "yaml";
            if (a === "+++" && (i = "toml"), i !== "yaml" && a !== g)
              return { content: c };
            let [l] = n;
            return { frontMatter: { type: "front-matter", lang: i, value: D, startDelimiter: a, endDelimiter: g, raw: l.replace(/\n$/, "") }, content: l.replace(/[^\n]/g, " ") + c.slice(l.length) };
          }
          r.exports = s;
        } }), ps = I({ "src/utils/get-last.js"(e, r) {
          "use strict";
          q();
          var t = (s) => s[s.length - 1];
          r.exports = t;
        } }), iD = I({ "src/common/parser-create-error.js"(e, r) {
          "use strict";
          q();
          function t(s, c) {
            let n = new SyntaxError(s + " (" + c.start.line + ":" + c.start.column + ")");
            return n.loc = c, n;
          }
          r.exports = t;
        } }), fs = {};
        cs(fs, { default: () => oD });
        function oD(e) {
          if (typeof e != "string")
            throw new TypeError("Expected a string");
          return e.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
        }
        var cD = Ce({ "node_modules/escape-string-regexp/index.js"() {
          q();
        } }), ds = I({ "node_modules/semver/internal/debug.js"(e, r) {
          q();
          var t = typeof ye == "object" && ye.env && ye.env.NODE_DEBUG && /\bsemver\b/i.test(ye.env.NODE_DEBUG) ? function() {
            for (var s = arguments.length, c = new Array(s), n = 0; n < s; n++)
              c[n] = arguments[n];
            return console.error("SEMVER", ...c);
          } : () => {
          };
          r.exports = t;
        } }), Es = I({ "node_modules/semver/internal/constants.js"(e, r) {
          q();
          var t = "2.0.0", s = 256, c = Number.MAX_SAFE_INTEGER || 9007199254740991, n = 16;
          r.exports = { SEMVER_SPEC_VERSION: t, MAX_LENGTH: s, MAX_SAFE_INTEGER: c, MAX_SAFE_COMPONENT_LENGTH: n };
        } }), DD = I({ "node_modules/semver/internal/re.js"(e, r) {
          q();
          var { MAX_SAFE_COMPONENT_LENGTH: t } = Es(), s = ds();
          e = r.exports = {};
          var c = e.re = [], n = e.src = [], a = e.t = {}, p = 0, D = (g, i, l) => {
            let h = p++;
            s(g, h, i), a[g] = h, n[h] = i, c[h] = new RegExp(i, l ? "g" : void 0);
          };
          D("NUMERICIDENTIFIER", "0|[1-9]\\d*"), D("NUMERICIDENTIFIERLOOSE", "[0-9]+"), D("NONNUMERICIDENTIFIER", "\\d*[a-zA-Z-][a-zA-Z0-9-]*"), D("MAINVERSION", "(".concat(n[a.NUMERICIDENTIFIER], ")\\.(").concat(n[a.NUMERICIDENTIFIER], ")\\.(").concat(n[a.NUMERICIDENTIFIER], ")")), D("MAINVERSIONLOOSE", "(".concat(n[a.NUMERICIDENTIFIERLOOSE], ")\\.(").concat(n[a.NUMERICIDENTIFIERLOOSE], ")\\.(").concat(n[a.NUMERICIDENTIFIERLOOSE], ")")), D("PRERELEASEIDENTIFIER", "(?:".concat(n[a.NUMERICIDENTIFIER], "|").concat(n[a.NONNUMERICIDENTIFIER], ")")), D("PRERELEASEIDENTIFIERLOOSE", "(?:".concat(n[a.NUMERICIDENTIFIERLOOSE], "|").concat(n[a.NONNUMERICIDENTIFIER], ")")), D("PRERELEASE", "(?:-(".concat(n[a.PRERELEASEIDENTIFIER], "(?:\\.").concat(n[a.PRERELEASEIDENTIFIER], ")*))")), D("PRERELEASELOOSE", "(?:-?(".concat(n[a.PRERELEASEIDENTIFIERLOOSE], "(?:\\.").concat(n[a.PRERELEASEIDENTIFIERLOOSE], ")*))")), D("BUILDIDENTIFIER", "[0-9A-Za-z-]+"), D("BUILD", "(?:\\+(".concat(n[a.BUILDIDENTIFIER], "(?:\\.").concat(n[a.BUILDIDENTIFIER], ")*))")), D("FULLPLAIN", "v?".concat(n[a.MAINVERSION]).concat(n[a.PRERELEASE], "?").concat(n[a.BUILD], "?")), D("FULL", "^".concat(n[a.FULLPLAIN], "$")), D("LOOSEPLAIN", "[v=\\s]*".concat(n[a.MAINVERSIONLOOSE]).concat(n[a.PRERELEASELOOSE], "?").concat(n[a.BUILD], "?")), D("LOOSE", "^".concat(n[a.LOOSEPLAIN], "$")), D("GTLT", "((?:<|>)?=?)"), D("XRANGEIDENTIFIERLOOSE", "".concat(n[a.NUMERICIDENTIFIERLOOSE], "|x|X|\\*")), D("XRANGEIDENTIFIER", "".concat(n[a.NUMERICIDENTIFIER], "|x|X|\\*")), D("XRANGEPLAIN", "[v=\\s]*(".concat(n[a.XRANGEIDENTIFIER], ")(?:\\.(").concat(n[a.XRANGEIDENTIFIER], ")(?:\\.(").concat(n[a.XRANGEIDENTIFIER], ")(?:").concat(n[a.PRERELEASE], ")?").concat(n[a.BUILD], "?)?)?")), D("XRANGEPLAINLOOSE", "[v=\\s]*(".concat(n[a.XRANGEIDENTIFIERLOOSE], ")(?:\\.(").concat(n[a.XRANGEIDENTIFIERLOOSE], ")(?:\\.(").concat(n[a.XRANGEIDENTIFIERLOOSE], ")(?:").concat(n[a.PRERELEASELOOSE], ")?").concat(n[a.BUILD], "?)?)?")), D("XRANGE", "^".concat(n[a.GTLT], "\\s*").concat(n[a.XRANGEPLAIN], "$")), D("XRANGELOOSE", "^".concat(n[a.GTLT], "\\s*").concat(n[a.XRANGEPLAINLOOSE], "$")), D("COERCE", "(^|[^\\d])(\\d{1,".concat(t, "})(?:\\.(\\d{1,").concat(t, "}))?(?:\\.(\\d{1,").concat(t, "}))?(?:$|[^\\d])")), D("COERCERTL", n[a.COERCE], true), D("LONETILDE", "(?:~>?)"), D("TILDETRIM", "(\\s*)".concat(n[a.LONETILDE], "\\s+"), true), e.tildeTrimReplace = "$1~", D("TILDE", "^".concat(n[a.LONETILDE]).concat(n[a.XRANGEPLAIN], "$")), D("TILDELOOSE", "^".concat(n[a.LONETILDE]).concat(n[a.XRANGEPLAINLOOSE], "$")), D("LONECARET", "(?:\\^)"), D("CARETTRIM", "(\\s*)".concat(n[a.LONECARET], "\\s+"), true), e.caretTrimReplace = "$1^", D("CARET", "^".concat(n[a.LONECARET]).concat(n[a.XRANGEPLAIN], "$")), D("CARETLOOSE", "^".concat(n[a.LONECARET]).concat(n[a.XRANGEPLAINLOOSE], "$")), D("COMPARATORLOOSE", "^".concat(n[a.GTLT], "\\s*(").concat(n[a.LOOSEPLAIN], ")$|^$")), D("COMPARATOR", "^".concat(n[a.GTLT], "\\s*(").concat(n[a.FULLPLAIN], ")$|^$")), D("COMPARATORTRIM", "(\\s*)".concat(n[a.GTLT], "\\s*(").concat(n[a.LOOSEPLAIN], "|").concat(n[a.XRANGEPLAIN], ")"), true), e.comparatorTrimReplace = "$1$2$3", D("HYPHENRANGE", "^\\s*(".concat(n[a.XRANGEPLAIN], ")\\s+-\\s+(").concat(n[a.XRANGEPLAIN], ")\\s*$")), D("HYPHENRANGELOOSE", "^\\s*(".concat(n[a.XRANGEPLAINLOOSE], ")\\s+-\\s+(").concat(n[a.XRANGEPLAINLOOSE], ")\\s*$")), D("STAR", "(<|>)?=?\\s*\\*"), D("GTE0", "^\\s*>=\\s*0\\.0\\.0\\s*$"), D("GTE0PRE", "^\\s*>=\\s*0\\.0\\.0-0\\s*$");
        } }), lD = I({ "node_modules/semver/internal/parse-options.js"(e, r) {
          q();
          var t = ["includePrerelease", "loose", "rtl"], s = (c) => c ? typeof c != "object" ? { loose: true } : t.filter((n) => c[n]).reduce((n, a) => (n[a] = true, n), {}) : {};
          r.exports = s;
        } }), hD = I({ "node_modules/semver/internal/identifiers.js"(e, r) {
          q();
          var t = /^[0-9]+$/, s = (n, a) => {
            let p = t.test(n), D = t.test(a);
            return p && D && (n = +n, a = +a), n === a ? 0 : p && !D ? -1 : D && !p ? 1 : n < a ? -1 : 1;
          }, c = (n, a) => s(a, n);
          r.exports = { compareIdentifiers: s, rcompareIdentifiers: c };
        } }), pD = I({ "node_modules/semver/classes/semver.js"(e, r) {
          q();
          var t = ds(), { MAX_LENGTH: s, MAX_SAFE_INTEGER: c } = Es(), { re: n, t: a } = DD(), p = lD(), { compareIdentifiers: D } = hD(), g = class {
            constructor(i, l) {
              if (l = p(l), i instanceof g) {
                if (i.loose === !!l.loose && i.includePrerelease === !!l.includePrerelease)
                  return i;
                i = i.version;
              } else if (typeof i != "string")
                throw new TypeError("Invalid Version: ".concat(i));
              if (i.length > s)
                throw new TypeError("version is longer than ".concat(s, " characters"));
              t("SemVer", i, l), this.options = l, this.loose = !!l.loose, this.includePrerelease = !!l.includePrerelease;
              let h = i.trim().match(l.loose ? n[a.LOOSE] : n[a.FULL]);
              if (!h)
                throw new TypeError("Invalid Version: ".concat(i));
              if (this.raw = i, this.major = +h[1], this.minor = +h[2], this.patch = +h[3], this.major > c || this.major < 0)
                throw new TypeError("Invalid major version");
              if (this.minor > c || this.minor < 0)
                throw new TypeError("Invalid minor version");
              if (this.patch > c || this.patch < 0)
                throw new TypeError("Invalid patch version");
              h[4] ? this.prerelease = h[4].split(".").map((C) => {
                if (/^[0-9]+$/.test(C)) {
                  let d = +C;
                  if (d >= 0 && d < c)
                    return d;
                }
                return C;
              }) : this.prerelease = [], this.build = h[5] ? h[5].split(".") : [], this.format();
            }
            format() {
              return this.version = "".concat(this.major, ".").concat(this.minor, ".").concat(this.patch), this.prerelease.length && (this.version += "-".concat(this.prerelease.join("."))), this.version;
            }
            toString() {
              return this.version;
            }
            compare(i) {
              if (t("SemVer.compare", this.version, this.options, i), !(i instanceof g)) {
                if (typeof i == "string" && i === this.version)
                  return 0;
                i = new g(i, this.options);
              }
              return i.version === this.version ? 0 : this.compareMain(i) || this.comparePre(i);
            }
            compareMain(i) {
              return i instanceof g || (i = new g(i, this.options)), D(this.major, i.major) || D(this.minor, i.minor) || D(this.patch, i.patch);
            }
            comparePre(i) {
              if (i instanceof g || (i = new g(i, this.options)), this.prerelease.length && !i.prerelease.length)
                return -1;
              if (!this.prerelease.length && i.prerelease.length)
                return 1;
              if (!this.prerelease.length && !i.prerelease.length)
                return 0;
              let l = 0;
              do {
                let h = this.prerelease[l], C = i.prerelease[l];
                if (t("prerelease compare", l, h, C), h === void 0 && C === void 0)
                  return 0;
                if (C === void 0)
                  return 1;
                if (h === void 0)
                  return -1;
                if (h === C)
                  continue;
                return D(h, C);
              } while (++l);
            }
            compareBuild(i) {
              i instanceof g || (i = new g(i, this.options));
              let l = 0;
              do {
                let h = this.build[l], C = i.build[l];
                if (t("prerelease compare", l, h, C), h === void 0 && C === void 0)
                  return 0;
                if (C === void 0)
                  return 1;
                if (h === void 0)
                  return -1;
                if (h === C)
                  continue;
                return D(h, C);
              } while (++l);
            }
            inc(i, l) {
              switch (i) {
                case "premajor":
                  this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc("pre", l);
                  break;
                case "preminor":
                  this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc("pre", l);
                  break;
                case "prepatch":
                  this.prerelease.length = 0, this.inc("patch", l), this.inc("pre", l);
                  break;
                case "prerelease":
                  this.prerelease.length === 0 && this.inc("patch", l), this.inc("pre", l);
                  break;
                case "major":
                  (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) && this.major++, this.minor = 0, this.patch = 0, this.prerelease = [];
                  break;
                case "minor":
                  (this.patch !== 0 || this.prerelease.length === 0) && this.minor++, this.patch = 0, this.prerelease = [];
                  break;
                case "patch":
                  this.prerelease.length === 0 && this.patch++, this.prerelease = [];
                  break;
                case "pre":
                  if (this.prerelease.length === 0)
                    this.prerelease = [0];
                  else {
                    let h = this.prerelease.length;
                    for (; --h >= 0; )
                      typeof this.prerelease[h] == "number" && (this.prerelease[h]++, h = -2);
                    h === -1 && this.prerelease.push(0);
                  }
                  l && (D(this.prerelease[0], l) === 0 ? isNaN(this.prerelease[1]) && (this.prerelease = [l, 0]) : this.prerelease = [l, 0]);
                  break;
                default:
                  throw new Error("invalid increment argument: ".concat(i));
              }
              return this.format(), this.raw = this.version, this;
            }
          };
          r.exports = g;
        } }), Ur = I({ "node_modules/semver/functions/compare.js"(e, r) {
          q();
          var t = pD(), s = (c, n, a) => new t(c, a).compare(new t(n, a));
          r.exports = s;
        } }), fD = I({ "node_modules/semver/functions/lt.js"(e, r) {
          q();
          var t = Ur(), s = (c, n, a) => t(c, n, a) < 0;
          r.exports = s;
        } }), dD = I({ "node_modules/semver/functions/gte.js"(e, r) {
          q();
          var t = Ur(), s = (c, n, a) => t(c, n, a) >= 0;
          r.exports = s;
        } }), ED = I({ "src/utils/arrayify.js"(e, r) {
          "use strict";
          q(), r.exports = (t, s) => Object.entries(t).map((c) => {
            let [n, a] = c;
            return Object.assign({ [s]: n }, a);
          });
        } }), CD = I({ "package.json"(e, r) {
          r.exports = { version: "2.7.1" };
        } }), mD = I({ "node_modules/outdent/lib/index.js"(e, r) {
          "use strict";
          q(), Object.defineProperty(e, "__esModule", { value: true }), e.outdent = void 0;
          function t() {
            for (var A = [], N = 0; N < arguments.length; N++)
              A[N] = arguments[N];
          }
          function s() {
            return typeof WeakMap < "u" ? /* @__PURE__ */ new WeakMap() : c();
          }
          function c() {
            return { add: t, delete: t, get: t, set: t, has: function(A) {
              return false;
            } };
          }
          var n = Object.prototype.hasOwnProperty, a = function(A, N) {
            return n.call(A, N);
          };
          function p(A, N) {
            for (var R in N)
              a(N, R) && (A[R] = N[R]);
            return A;
          }
          var D = /^[ \t]*(?:\r\n|\r|\n)/, g = /(?:\r\n|\r|\n)[ \t]*$/, i = /^(?:[\r\n]|$)/, l = /(?:\r\n|\r|\n)([ \t]*)(?:[^ \t\r\n]|$)/, h = /^[ \t]*[\r\n][ \t\r\n]*$/;
          function C(A, N, R) {
            var $ = 0, _ = A[0].match(l);
            _ && ($ = _[1].length);
            var O = "(\\r\\n|\\r|\\n).{0," + $ + "}", x = new RegExp(O, "g");
            N && (A = A.slice(1));
            var k = R.newline, M = R.trimLeadingNewline, u = R.trimTrailingNewline, o = typeof k == "string", E = A.length, f = A.map(function(F, P) {
              return F = F.replace(x, "$1"), P === 0 && M && (F = F.replace(D, "")), P === E - 1 && u && (F = F.replace(g, "")), o && (F = F.replace(/\r\n|\n|\r/g, function(j) {
                return k;
              })), F;
            });
            return f;
          }
          function d(A, N) {
            for (var R = "", $ = 0, _ = A.length; $ < _; $++)
              R += A[$], $ < _ - 1 && (R += N[$]);
            return R;
          }
          function m(A) {
            return a(A, "raw") && a(A, "length");
          }
          function T(A) {
            var N = s(), R = s();
            function $(O) {
              for (var x = [], k = 1; k < arguments.length; k++)
                x[k - 1] = arguments[k];
              if (m(O)) {
                var M = O, u = (x[0] === $ || x[0] === B) && h.test(M[0]) && i.test(M[1]), o = u ? R : N, E = o.get(M);
                if (E || (E = C(M, u, A), o.set(M, E)), x.length === 0)
                  return E[0];
                var f = d(E, u ? x.slice(1) : x);
                return f;
              } else
                return T(p(p({}, A), O || {}));
            }
            var _ = p($, { string: function(O) {
              return C([O], false, A)[0];
            } });
            return _;
          }
          var B = T({ trimLeadingNewline: true, trimTrailingNewline: true });
          if (e.outdent = B, e.default = B, typeof r < "u")
            try {
              r.exports = B, Object.defineProperty(B, "__esModule", { value: true }), B.default = B, B.outdent = B;
            } catch {
            }
        } }), gD = I({ "src/main/core-options.js"(e, r) {
          "use strict";
          q();
          var { outdent: t } = mD(), s = "Config", c = "Editor", n = "Format", a = "Other", p = "Output", D = "Global", g = "Special", i = { cursorOffset: { since: "1.4.0", category: g, type: "int", default: -1, range: { start: -1, end: Number.POSITIVE_INFINITY, step: 1 }, description: t(Jn || (Jn = Ee([`
      Print (to stderr) where a cursor at the given position would move to after formatting.
      This option cannot be used with --range-start and --range-end.
    `]))), cliCategory: c }, endOfLine: { since: "1.15.0", category: D, type: "choice", default: [{ since: "1.15.0", value: "auto" }, { since: "2.0.0", value: "lf" }], description: "Which end of line characters to apply.", choices: [{ value: "lf", description: "Line Feed only (\\n), common on Linux and macOS as well as inside git repos" }, { value: "crlf", description: "Carriage Return + Line Feed characters (\\r\\n), common on Windows" }, { value: "cr", description: "Carriage Return character only (\\r), used very rarely" }, { value: "auto", description: t(Zn || (Zn = Ee([`
          Maintain existing
          (mixed values within one file are normalised by looking at what's used after the first line)
        `]))) }] }, filepath: { since: "1.4.0", category: g, type: "path", description: "Specify the input filepath. This will be used to do parser inference.", cliName: "stdin-filepath", cliCategory: a, cliDescription: "Path to the file to pretend that stdin comes from." }, insertPragma: { since: "1.8.0", category: g, type: "boolean", default: false, description: "Insert @format pragma into file's first docblock comment.", cliCategory: a }, parser: { since: "0.0.10", category: D, type: "choice", default: [{ since: "0.0.10", value: "babylon" }, { since: "1.13.0", value: void 0 }], description: "Which parser to use.", exception: (l) => typeof l == "string" || typeof l == "function", choices: [{ value: "flow", description: "Flow" }, { value: "babel", since: "1.16.0", description: "JavaScript" }, { value: "babel-flow", since: "1.16.0", description: "Flow" }, { value: "babel-ts", since: "2.0.0", description: "TypeScript" }, { value: "typescript", since: "1.4.0", description: "TypeScript" }, { value: "acorn", since: "2.6.0", description: "JavaScript" }, { value: "espree", since: "2.2.0", description: "JavaScript" }, { value: "meriyah", since: "2.2.0", description: "JavaScript" }, { value: "css", since: "1.7.1", description: "CSS" }, { value: "less", since: "1.7.1", description: "Less" }, { value: "scss", since: "1.7.1", description: "SCSS" }, { value: "json", since: "1.5.0", description: "JSON" }, { value: "json5", since: "1.13.0", description: "JSON5" }, { value: "json-stringify", since: "1.13.0", description: "JSON.stringify" }, { value: "graphql", since: "1.5.0", description: "GraphQL" }, { value: "markdown", since: "1.8.0", description: "Markdown" }, { value: "mdx", since: "1.15.0", description: "MDX" }, { value: "vue", since: "1.10.0", description: "Vue" }, { value: "yaml", since: "1.14.0", description: "YAML" }, { value: "glimmer", since: "2.3.0", description: "Ember / Handlebars" }, { value: "html", since: "1.15.0", description: "HTML" }, { value: "angular", since: "1.15.0", description: "Angular" }, { value: "lwc", since: "1.17.0", description: "Lightning Web Components" }] }, plugins: { since: "1.10.0", type: "path", array: true, default: [{ value: [] }], category: D, description: "Add a plugin. Multiple plugins can be passed as separate `--plugin`s.", exception: (l) => typeof l == "string" || typeof l == "object", cliName: "plugin", cliCategory: s }, pluginSearchDirs: { since: "1.13.0", type: "path", array: true, default: [{ value: [] }], category: D, description: t(es || (es = Ee([`
      Custom directory that contains prettier plugins in node_modules subdirectory.
      Overrides default behavior when plugins are searched relatively to the location of Prettier.
      Multiple values are accepted.
    `]))), exception: (l) => typeof l == "string" || typeof l == "object", cliName: "plugin-search-dir", cliCategory: s }, printWidth: { since: "0.0.0", category: D, type: "int", default: 80, description: "The line length where Prettier will try wrap.", range: { start: 0, end: Number.POSITIVE_INFINITY, step: 1 } }, rangeEnd: { since: "1.4.0", category: g, type: "int", default: Number.POSITIVE_INFINITY, range: { start: 0, end: Number.POSITIVE_INFINITY, step: 1 }, description: t(rs || (rs = Ee([`
      Format code ending at a given character offset (exclusive).
      The range will extend forwards to the end of the selected statement.
      This option cannot be used with --cursor-offset.
    `]))), cliCategory: c }, rangeStart: { since: "1.4.0", category: g, type: "int", default: 0, range: { start: 0, end: Number.POSITIVE_INFINITY, step: 1 }, description: t(ts || (ts = Ee([`
      Format code starting at a given character offset.
      The range will extend backwards to the start of the first line containing the selected statement.
      This option cannot be used with --cursor-offset.
    `]))), cliCategory: c }, requirePragma: { since: "1.7.0", category: g, type: "boolean", default: false, description: t(us || (us = Ee([`
      Require either '@prettier' or '@format' to be present in the file's first docblock comment
      in order for it to be formatted.
    `]))), cliCategory: a }, tabWidth: { type: "int", category: D, default: 2, description: "Number of spaces per indentation level.", range: { start: 0, end: Number.POSITIVE_INFINITY, step: 1 } }, useTabs: { since: "1.0.0", category: D, type: "boolean", default: false, description: "Indent with tabs instead of spaces." }, embeddedLanguageFormatting: { since: "2.1.0", category: D, type: "choice", default: [{ since: "2.1.0", value: "auto" }], description: "Control how Prettier formats quoted code embedded in the file.", choices: [{ value: "auto", description: "Format embedded code if Prettier can automatically identify it." }, { value: "off", description: "Never automatically format embedded code." }] } };
          r.exports = { CATEGORY_CONFIG: s, CATEGORY_EDITOR: c, CATEGORY_FORMAT: n, CATEGORY_OTHER: a, CATEGORY_OUTPUT: p, CATEGORY_GLOBAL: D, CATEGORY_SPECIAL: g, options: i };
        } }), FD = I({ "src/main/support.js"(e, r) {
          "use strict";
          q();
          var t = { compare: Ur(), lt: fD(), gte: dD() }, s = ED(), c = CD().version, n = gD().options;
          function a() {
            let { plugins: D = [], showUnreleased: g = false, showDeprecated: i = false, showInternal: l = false } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, h = c.split("-", 1)[0], C = D.flatMap((A) => A.languages || []).filter(m), d = s(Object.assign({}, ...D.map((A) => {
              let { options: N } = A;
              return N;
            }), n), "name").filter((A) => m(A) && T(A)).sort((A, N) => A.name === N.name ? 0 : A.name < N.name ? -1 : 1).map(B).map((A) => {
              A = Object.assign({}, A), Array.isArray(A.default) && (A.default = A.default.length === 1 ? A.default[0].value : A.default.filter(m).sort((R, $) => t.compare($.since, R.since))[0].value), Array.isArray(A.choices) && (A.choices = A.choices.filter((R) => m(R) && T(R)), A.name === "parser" && p(A, C, D));
              let N = Object.fromEntries(D.filter((R) => R.defaultOptions && R.defaultOptions[A.name] !== void 0).map((R) => [R.name, R.defaultOptions[A.name]]));
              return Object.assign(Object.assign({}, A), {}, { pluginDefaults: N });
            });
            return { languages: C, options: d };
            function m(A) {
              return g || !("since" in A) || A.since && t.gte(h, A.since);
            }
            function T(A) {
              return i || !("deprecated" in A) || A.deprecated && t.lt(h, A.deprecated);
            }
            function B(A) {
              if (l)
                return A;
              let { cliName: N, cliCategory: R, cliDescription: $ } = A;
              return Qc(A, Yc);
            }
          }
          function p(D, g, i) {
            let l = new Set(D.choices.map((h) => h.value));
            for (let h of g)
              if (h.parsers) {
                for (let C of h.parsers)
                  if (!l.has(C)) {
                    l.add(C);
                    let d = i.find((T) => T.parsers && T.parsers[C]), m = h.name;
                    d && d.name && (m += " (plugin: ".concat(d.name, ")")), D.choices.push({ value: C, description: m });
                  }
              }
          }
          r.exports = { getSupportInfo: a };
        } }), AD = I({ "src/utils/is-non-empty-array.js"(e, r) {
          "use strict";
          q();
          function t(s) {
            return Array.isArray(s) && s.length > 0;
          }
          r.exports = t;
        } });
        function vD() {
          let { onlyFirst: e = false } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, r = ["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)", "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");
          return new RegExp(r, e ? void 0 : "g");
        }
        var _D = Ce({ "node_modules/strip-ansi/node_modules/ansi-regex/index.js"() {
          q();
        } });
        function SD(e) {
          if (typeof e != "string")
            throw new TypeError("Expected a `string`, got `".concat(typeof e, "`"));
          return e.replace(vD(), "");
        }
        var yD = Ce({ "node_modules/strip-ansi/index.js"() {
          q(), _D();
        } });
        function TD(e) {
          return Number.isInteger(e) ? e >= 4352 && (e <= 4447 || e === 9001 || e === 9002 || 11904 <= e && e <= 12871 && e !== 12351 || 12880 <= e && e <= 19903 || 19968 <= e && e <= 42182 || 43360 <= e && e <= 43388 || 44032 <= e && e <= 55203 || 63744 <= e && e <= 64255 || 65040 <= e && e <= 65049 || 65072 <= e && e <= 65131 || 65281 <= e && e <= 65376 || 65504 <= e && e <= 65510 || 110592 <= e && e <= 110593 || 127488 <= e && e <= 127569 || 131072 <= e && e <= 262141) : false;
        }
        var BD = Ce({ "node_modules/is-fullwidth-code-point/index.js"() {
          q();
        } }), bD = I({ "node_modules/emoji-regex/index.js"(e, r) {
          "use strict";
          q(), r.exports = function() {
            return /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67)\uDB40\uDC7F|(?:\uD83E\uDDD1\uD83C\uDFFF\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFC-\uDFFF])|\uD83D\uDC68(?:\uD83C\uDFFB(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|[\u2695\u2696\u2708]\uFE0F|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))?|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])\uFE0F|\u200D(?:(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D[\uDC66\uDC67])|\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC)?|(?:\uD83D\uDC69(?:\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69]))|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC69(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83E\uDDD1(?:\u200D(?:\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDE36\u200D\uD83C\uDF2B|\uD83C\uDFF3\uFE0F\u200D\u26A7|\uD83D\uDC3B\u200D\u2744|(?:(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\uD83C\uDFF4\u200D\u2620|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])\u200D[\u2640\u2642]|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u2600-\u2604\u260E\u2611\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26B0\u26B1\u26C8\u26CF\u26D1\u26D3\u26E9\u26F0\u26F1\u26F4\u26F7\u26F8\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u3030\u303D\u3297\u3299]|\uD83C[\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]|\uD83D[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3])\uFE0F|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDE35\u200D\uD83D\uDCAB|\uD83D\uDE2E\u200D\uD83D\uDCA8|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83E\uDDD1(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83D\uDC69(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83C\uDDF4\uD83C\uDDF2|\uD83D\uDC08\u200D\u2B1B|\u2764\uFE0F\u200D(?:\uD83D\uDD25|\uD83E\uDE79)|\uD83D\uDC41\uFE0F|\uD83C\uDFF3\uFE0F|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|[#\*0-9]\uFE0F\u20E3|\u2764\uFE0F|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|\uD83C\uDFF4|(?:[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270C\u270D]|\uD83D[\uDD74\uDD90])(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC08\uDC15\uDC3B\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE2E\uDE35\uDE36\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5]|\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD]|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF]|[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0D\uDD0E\uDD10-\uDD17\uDD1D\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78\uDD7A-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCB\uDDD0\uDDE0-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6]|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26A7\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5-\uDED7\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDD77\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g;
          };
        } }), Cs = {};
        cs(Cs, { default: () => wD });
        function wD(e) {
          if (typeof e != "string" || e.length === 0 || (e = SD(e), e.length === 0))
            return 0;
          e = e.replace((0, ms.default)(), "  ");
          let r = 0;
          for (let t = 0; t < e.length; t++) {
            let s = e.codePointAt(t);
            s <= 31 || s >= 127 && s <= 159 || s >= 768 && s <= 879 || (s > 65535 && t++, r += TD(s) ? 2 : 1);
          }
          return r;
        }
        var ms, ND = Ce({ "node_modules/string-width/index.js"() {
          q(), yD(), BD(), ms = tD(bD());
        } }), OD = I({ "src/utils/get-string-width.js"(e, r) {
          "use strict";
          q();
          var t = (ND(), ls(Cs)).default, s = /[^\x20-\x7F]/;
          function c(n) {
            return n ? s.test(n) ? t(n) : n.length : 0;
          }
          r.exports = c;
        } }), Gr = I({ "src/utils/text/skip.js"(e, r) {
          "use strict";
          q();
          function t(p) {
            return (D, g, i) => {
              let l = i && i.backwards;
              if (g === false)
                return false;
              let { length: h } = D, C = g;
              for (; C >= 0 && C < h; ) {
                let d = D.charAt(C);
                if (p instanceof RegExp) {
                  if (!p.test(d))
                    return C;
                } else if (!p.includes(d))
                  return C;
                l ? C-- : C++;
              }
              return C === -1 || C === h ? C : false;
            };
          }
          var s = t(/\s/), c = t(" 	"), n = t(",; 	"), a = t(/[^\n\r]/);
          r.exports = { skipWhitespace: s, skipSpaces: c, skipToLineEnd: n, skipEverythingButNewLine: a };
        } }), gs = I({ "src/utils/text/skip-inline-comment.js"(e, r) {
          "use strict";
          q();
          function t(s, c) {
            if (c === false)
              return false;
            if (s.charAt(c) === "/" && s.charAt(c + 1) === "*") {
              for (let n = c + 2; n < s.length; ++n)
                if (s.charAt(n) === "*" && s.charAt(n + 1) === "/")
                  return n + 2;
            }
            return c;
          }
          r.exports = t;
        } }), Fs = I({ "src/utils/text/skip-trailing-comment.js"(e, r) {
          "use strict";
          q();
          var { skipEverythingButNewLine: t } = Gr();
          function s(c, n) {
            return n === false ? false : c.charAt(n) === "/" && c.charAt(n + 1) === "/" ? t(c, n) : n;
          }
          r.exports = s;
        } }), As = I({ "src/utils/text/skip-newline.js"(e, r) {
          "use strict";
          q();
          function t(s, c, n) {
            let a = n && n.backwards;
            if (c === false)
              return false;
            let p = s.charAt(c);
            if (a) {
              if (s.charAt(c - 1) === "\r" && p === `
`)
                return c - 2;
              if (p === `
` || p === "\r" || p === "\u2028" || p === "\u2029")
                return c - 1;
            } else {
              if (p === "\r" && s.charAt(c + 1) === `
`)
                return c + 2;
              if (p === `
` || p === "\r" || p === "\u2028" || p === "\u2029")
                return c + 1;
            }
            return c;
          }
          r.exports = t;
        } }), qD = I({ "src/utils/text/get-next-non-space-non-comment-character-index-with-start-index.js"(e, r) {
          "use strict";
          q();
          var t = gs(), s = As(), c = Fs(), { skipSpaces: n } = Gr();
          function a(p, D) {
            let g = null, i = D;
            for (; i !== g; )
              g = i, i = n(p, i), i = t(p, i), i = c(p, i), i = s(p, i);
            return i;
          }
          r.exports = a;
        } }), ID = I({ "src/common/util.js"(e, r) {
          "use strict";
          q();
          var { default: t } = (cD(), ls(fs)), s = ps(), { getSupportInfo: c } = FD(), n = AD(), a = OD(), { skipWhitespace: p, skipSpaces: D, skipToLineEnd: g, skipEverythingButNewLine: i } = Gr(), l = gs(), h = Fs(), C = As(), d = qD(), m = (v) => v[v.length - 2];
          function T(v) {
            return (S, b, w) => {
              let L = w && w.backwards;
              if (b === false)
                return false;
              let { length: U } = S, V = b;
              for (; V >= 0 && V < U; ) {
                let Y = S.charAt(V);
                if (v instanceof RegExp) {
                  if (!v.test(Y))
                    return V;
                } else if (!v.includes(Y))
                  return V;
                L ? V-- : V++;
              }
              return V === -1 || V === U ? V : false;
            };
          }
          function B(v, S) {
            let b = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, w = D(v, b.backwards ? S - 1 : S, b), L = C(v, w, b);
            return w !== L;
          }
          function A(v, S, b) {
            for (let w = S; w < b; ++w)
              if (v.charAt(w) === `
`)
                return true;
            return false;
          }
          function N(v, S, b) {
            let w = b(S) - 1;
            w = D(v, w, { backwards: true }), w = C(v, w, { backwards: true }), w = D(v, w, { backwards: true });
            let L = C(v, w, { backwards: true });
            return w !== L;
          }
          function R(v, S) {
            let b = null, w = S;
            for (; w !== b; )
              b = w, w = g(v, w), w = l(v, w), w = D(v, w);
            return w = h(v, w), w = C(v, w), w !== false && B(v, w);
          }
          function $(v, S, b) {
            return R(v, b(S));
          }
          function _(v, S, b) {
            return d(v, b(S));
          }
          function O(v, S, b) {
            return v.charAt(_(v, S, b));
          }
          function x(v, S) {
            let b = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
            return D(v, b.backwards ? S - 1 : S, b) !== S;
          }
          function k(v, S) {
            let b = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, w = 0;
            for (let L = b; L < v.length; ++L)
              v[L] === "	" ? w = w + S - w % S : w++;
            return w;
          }
          function M(v, S) {
            let b = v.lastIndexOf(`
`);
            return b === -1 ? 0 : k(v.slice(b + 1).match(/^[\t ]*/)[0], S);
          }
          function u(v, S) {
            let b = { quote: '"', regex: /"/g, escaped: "&quot;" }, w = { quote: "'", regex: /'/g, escaped: "&apos;" }, L = S === "'" ? w : b, U = L === w ? b : w, V = L;
            if (v.includes(L.quote) || v.includes(U.quote)) {
              let Y = (v.match(L.regex) || []).length, ue = (v.match(U.regex) || []).length;
              V = Y > ue ? U : L;
            }
            return V;
          }
          function o(v, S) {
            let b = v.slice(1, -1), w = S.parser === "json" || S.parser === "json5" && S.quoteProps === "preserve" && !S.singleQuote ? '"' : S.__isInHtmlAttribute ? "'" : u(b, S.singleQuote ? "'" : '"').quote;
            return E(b, w, !(S.parser === "css" || S.parser === "less" || S.parser === "scss" || S.__embeddedInHtml));
          }
          function E(v, S, b) {
            let w = S === '"' ? "'" : '"', L = /\\(.)|(["'])/gs, U = v.replace(L, (V, Y, ue) => Y === w ? Y : ue === S ? "\\" + ue : ue || (b && /^[^\n\r"'0-7\\bfnrt-vx\u2028\u2029]$/.test(Y) ? Y : "\\" + Y));
            return S + U + S;
          }
          function f(v) {
            return v.toLowerCase().replace(/^([+-]?[\d.]+e)(?:\+|(-))?0*(\d)/, "$1$2$3").replace(/^([+-]?[\d.]+)e[+-]?0+$/, "$1").replace(/^([+-])?\./, "$10.").replace(/(\.\d+?)0+(?=e|$)/, "$1").replace(/\.(?=e|$)/, "");
          }
          function F(v, S) {
            let b = v.match(new RegExp("(".concat(t(S), ")+"), "g"));
            return b === null ? 0 : b.reduce((w, L) => Math.max(w, L.length / S.length), 0);
          }
          function P(v, S) {
            let b = v.match(new RegExp("(".concat(t(S), ")+"), "g"));
            if (b === null)
              return 0;
            let w = /* @__PURE__ */ new Map(), L = 0;
            for (let U of b) {
              let V = U.length / S.length;
              w.set(V, true), V > L && (L = V);
            }
            for (let U = 1; U < L; U++)
              if (!w.get(U))
                return U;
            return L + 1;
          }
          function j(v, S) {
            (v.comments || (v.comments = [])).push(S), S.printed = false, S.nodeDescription = ee(v);
          }
          function W(v, S) {
            S.leading = true, S.trailing = false, j(v, S);
          }
          function X(v, S, b) {
            S.leading = false, S.trailing = false, b && (S.marker = b), j(v, S);
          }
          function H(v, S) {
            S.leading = false, S.trailing = true, j(v, S);
          }
          function z(v, S) {
            let { languages: b } = c({ plugins: S.plugins }), w = b.find((L) => {
              let { name: U } = L;
              return U.toLowerCase() === v;
            }) || b.find((L) => {
              let { aliases: U } = L;
              return Array.isArray(U) && U.includes(v);
            }) || b.find((L) => {
              let { extensions: U } = L;
              return Array.isArray(U) && U.includes(".".concat(v));
            });
            return w && w.parsers[0];
          }
          function J(v) {
            return v && v.type === "front-matter";
          }
          function Z(v) {
            let S = /* @__PURE__ */ new WeakMap();
            return function(b) {
              return S.has(b) || S.set(b, Symbol(v)), S.get(b);
            };
          }
          function ee(v) {
            let S = v.type || v.kind || "(unknown type)", b = String(v.name || v.id && (typeof v.id == "object" ? v.id.name : v.id) || v.key && (typeof v.key == "object" ? v.key.name : v.key) || v.value && (typeof v.value == "object" ? "" : String(v.value)) || v.operator || "");
            return b.length > 20 && (b = b.slice(0, 19) + "â¦"), S + (b ? " " + b : "");
          }
          r.exports = { inferParserByLanguage: z, getStringWidth: a, getMaxContinuousCount: F, getMinNotPresentContinuousCount: P, getPenultimate: m, getLast: s, getNextNonSpaceNonCommentCharacterIndexWithStartIndex: d, getNextNonSpaceNonCommentCharacterIndex: _, getNextNonSpaceNonCommentCharacter: O, skip: T, skipWhitespace: p, skipSpaces: D, skipToLineEnd: g, skipEverythingButNewLine: i, skipInlineComment: l, skipTrailingComment: h, skipNewline: C, isNextLineEmptyAfterIndex: R, isNextLineEmpty: $, isPreviousLineEmpty: N, hasNewline: B, hasNewlineInRange: A, hasSpaces: x, getAlignmentSize: k, getIndentSize: M, getPreferredQuote: u, printString: o, printNumber: f, makeString: E, addLeadingComment: W, addDanglingComment: X, addTrailingComment: H, isFrontMatterNode: J, isNonEmptyArray: n, createGroupIdMapper: Z };
        } }), RD = I({ "vendors/html-tag-names.json"(e, r) {
          r.exports = { htmlTagNames: ["a", "abbr", "acronym", "address", "applet", "area", "article", "aside", "audio", "b", "base", "basefont", "bdi", "bdo", "bgsound", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "command", "content", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "element", "em", "embed", "fieldset", "figcaption", "figure", "font", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "image", "img", "input", "ins", "isindex", "kbd", "keygen", "label", "legend", "li", "link", "listing", "main", "map", "mark", "marquee", "math", "menu", "menuitem", "meta", "meter", "multicol", "nav", "nextid", "nobr", "noembed", "noframes", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "plaintext", "pre", "progress", "q", "rb", "rbc", "rp", "rt", "rtc", "ruby", "s", "samp", "script", "section", "select", "shadow", "slot", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "svg", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "tt", "u", "ul", "var", "video", "wbr", "xmp"] };
        } }), vs = I({ "src/language-html/utils/array-to-map.js"(e, r) {
          "use strict";
          q();
          function t(s) {
            let c = /* @__PURE__ */ Object.create(null);
            for (let n of s)
              c[n] = true;
            return c;
          }
          r.exports = t;
        } }), xD = I({ "src/language-html/utils/html-tag-names.js"(e, r) {
          "use strict";
          q();
          var { htmlTagNames: t } = RD(), s = vs(), c = s(t);
          r.exports = c;
        } }), PD = I({ "vendors/html-element-attributes.json"(e, r) {
          r.exports = { htmlElementAttributes: { "*": ["accesskey", "autocapitalize", "autofocus", "class", "contenteditable", "dir", "draggable", "enterkeyhint", "hidden", "id", "inputmode", "is", "itemid", "itemprop", "itemref", "itemscope", "itemtype", "lang", "nonce", "slot", "spellcheck", "style", "tabindex", "title", "translate"], a: ["charset", "coords", "download", "href", "hreflang", "name", "ping", "referrerpolicy", "rel", "rev", "shape", "target", "type"], applet: ["align", "alt", "archive", "code", "codebase", "height", "hspace", "name", "object", "vspace", "width"], area: ["alt", "coords", "download", "href", "hreflang", "nohref", "ping", "referrerpolicy", "rel", "shape", "target", "type"], audio: ["autoplay", "controls", "crossorigin", "loop", "muted", "preload", "src"], base: ["href", "target"], basefont: ["color", "face", "size"], blockquote: ["cite"], body: ["alink", "background", "bgcolor", "link", "text", "vlink"], br: ["clear"], button: ["disabled", "form", "formaction", "formenctype", "formmethod", "formnovalidate", "formtarget", "name", "type", "value"], canvas: ["height", "width"], caption: ["align"], col: ["align", "char", "charoff", "span", "valign", "width"], colgroup: ["align", "char", "charoff", "span", "valign", "width"], data: ["value"], del: ["cite", "datetime"], details: ["open"], dialog: ["open"], dir: ["compact"], div: ["align"], dl: ["compact"], embed: ["height", "src", "type", "width"], fieldset: ["disabled", "form", "name"], font: ["color", "face", "size"], form: ["accept", "accept-charset", "action", "autocomplete", "enctype", "method", "name", "novalidate", "target"], frame: ["frameborder", "longdesc", "marginheight", "marginwidth", "name", "noresize", "scrolling", "src"], frameset: ["cols", "rows"], h1: ["align"], h2: ["align"], h3: ["align"], h4: ["align"], h5: ["align"], h6: ["align"], head: ["profile"], hr: ["align", "noshade", "size", "width"], html: ["manifest", "version"], iframe: ["align", "allow", "allowfullscreen", "allowpaymentrequest", "allowusermedia", "frameborder", "height", "loading", "longdesc", "marginheight", "marginwidth", "name", "referrerpolicy", "sandbox", "scrolling", "src", "srcdoc", "width"], img: ["align", "alt", "border", "crossorigin", "decoding", "height", "hspace", "ismap", "loading", "longdesc", "name", "referrerpolicy", "sizes", "src", "srcset", "usemap", "vspace", "width"], input: ["accept", "align", "alt", "autocomplete", "checked", "dirname", "disabled", "form", "formaction", "formenctype", "formmethod", "formnovalidate", "formtarget", "height", "ismap", "list", "max", "maxlength", "min", "minlength", "multiple", "name", "pattern", "placeholder", "readonly", "required", "size", "src", "step", "type", "usemap", "value", "width"], ins: ["cite", "datetime"], isindex: ["prompt"], label: ["for", "form"], legend: ["align"], li: ["type", "value"], link: ["as", "charset", "color", "crossorigin", "disabled", "href", "hreflang", "imagesizes", "imagesrcset", "integrity", "media", "referrerpolicy", "rel", "rev", "sizes", "target", "type"], map: ["name"], menu: ["compact"], meta: ["charset", "content", "http-equiv", "media", "name", "scheme"], meter: ["high", "low", "max", "min", "optimum", "value"], object: ["align", "archive", "border", "classid", "codebase", "codetype", "data", "declare", "form", "height", "hspace", "name", "standby", "type", "typemustmatch", "usemap", "vspace", "width"], ol: ["compact", "reversed", "start", "type"], optgroup: ["disabled", "label"], option: ["disabled", "label", "selected", "value"], output: ["for", "form", "name"], p: ["align"], param: ["name", "type", "value", "valuetype"], pre: ["width"], progress: ["max", "value"], q: ["cite"], script: ["async", "charset", "crossorigin", "defer", "integrity", "language", "nomodule", "referrerpolicy", "src", "type"], select: ["autocomplete", "disabled", "form", "multiple", "name", "required", "size"], slot: ["name"], source: ["height", "media", "sizes", "src", "srcset", "type", "width"], style: ["media", "type"], table: ["align", "bgcolor", "border", "cellpadding", "cellspacing", "frame", "rules", "summary", "width"], tbody: ["align", "char", "charoff", "valign"], td: ["abbr", "align", "axis", "bgcolor", "char", "charoff", "colspan", "headers", "height", "nowrap", "rowspan", "scope", "valign", "width"], textarea: ["autocomplete", "cols", "dirname", "disabled", "form", "maxlength", "minlength", "name", "placeholder", "readonly", "required", "rows", "wrap"], tfoot: ["align", "char", "charoff", "valign"], th: ["abbr", "align", "axis", "bgcolor", "char", "charoff", "colspan", "headers", "height", "nowrap", "rowspan", "scope", "valign", "width"], thead: ["align", "char", "charoff", "valign"], time: ["datetime"], tr: ["align", "bgcolor", "char", "charoff", "valign"], track: ["default", "kind", "label", "src", "srclang"], ul: ["compact", "type"], video: ["autoplay", "controls", "crossorigin", "height", "loop", "muted", "playsinline", "poster", "preload", "src", "width"] } };
        } }), kD = I({ "src/language-html/utils/map-object.js"(e, r) {
          "use strict";
          q();
          function t(s, c) {
            let n = /* @__PURE__ */ Object.create(null);
            for (let [a, p] of Object.entries(s))
              n[a] = c(p, a);
            return n;
          }
          r.exports = t;
        } }), LD = I({ "src/language-html/utils/html-elements-attributes.js"(e, r) {
          "use strict";
          q();
          var { htmlElementAttributes: t } = PD(), s = kD(), c = vs(), n = s(t, c);
          r.exports = n;
        } }), MD = I({ "src/language-html/utils/is-unknown-namespace.js"(e, r) {
          "use strict";
          q();
          function t(s) {
            return s.type === "element" && !s.hasExplicitNamespace && !["html", "svg"].includes(s.namespace);
          }
          r.exports = t;
        } }), jD = I({ "src/language-html/pragma.js"(e, r) {
          "use strict";
          q();
          function t(c) {
            return /^\s*<!--\s*@(?:format|prettier)\s*-->/.test(c);
          }
          function s(c) {
            return `<!-- @format -->

` + c.replace(/^\s*\n/, "");
          }
          r.exports = { hasPragma: t, insertPragma: s };
        } }), $D = I({ "src/language-html/ast.js"(e, r) {
          "use strict";
          q();
          var t = { attrs: true, children: true }, s = /* @__PURE__ */ new Set(["parent"]), c = class {
            constructor() {
              let a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              for (let p of /* @__PURE__ */ new Set([...s, ...Object.keys(a)]))
                this.setProperty(p, a[p]);
            }
            setProperty(a, p) {
              if (this[a] !== p) {
                if (a in t && (p = p.map((D) => this.createChild(D))), !s.has(a)) {
                  this[a] = p;
                  return;
                }
                Object.defineProperty(this, a, { value: p, enumerable: false, configurable: true });
              }
            }
            map(a) {
              let p;
              for (let D in t) {
                let g = this[D];
                if (g) {
                  let i = n(g, (l) => l.map(a));
                  p !== g && (p || (p = new c({ parent: this.parent })), p.setProperty(D, i));
                }
              }
              if (p)
                for (let D in this)
                  D in t || (p[D] = this[D]);
              return a(p || this);
            }
            walk(a) {
              for (let p in t) {
                let D = this[p];
                if (D)
                  for (let g = 0; g < D.length; g++)
                    D[g].walk(a);
              }
              a(this);
            }
            createChild(a) {
              let p = a instanceof c ? a.clone() : new c(a);
              return p.setProperty("parent", this), p;
            }
            insertChildBefore(a, p) {
              this.children.splice(this.children.indexOf(a), 0, this.createChild(p));
            }
            removeChild(a) {
              this.children.splice(this.children.indexOf(a), 1);
            }
            replaceChild(a, p) {
              this.children[this.children.indexOf(a)] = this.createChild(p);
            }
            clone() {
              return new c(this);
            }
            get firstChild() {
              var a;
              return (a = this.children) === null || a === void 0 ? void 0 : a[0];
            }
            get lastChild() {
              var a;
              return (a = this.children) === null || a === void 0 ? void 0 : a[this.children.length - 1];
            }
            get prev() {
              var a;
              return (a = this.parent) === null || a === void 0 ? void 0 : a.children[this.parent.children.indexOf(this) - 1];
            }
            get next() {
              var a;
              return (a = this.parent) === null || a === void 0 ? void 0 : a.children[this.parent.children.indexOf(this) + 1];
            }
            get rawName() {
              return this.hasExplicitNamespace ? this.fullName : this.name;
            }
            get fullName() {
              return this.namespace ? this.namespace + ":" + this.name : this.name;
            }
            get attrMap() {
              return Object.fromEntries(this.attrs.map((a) => [a.fullName, a.value]));
            }
          };
          function n(a, p) {
            let D = a.map(p);
            return D.some((g, i) => g !== a[i]) ? D : a;
          }
          r.exports = { Node: c };
        } }), UD = I({ "src/language-html/conditional-comment.js"(e, r) {
          "use strict";
          q();
          var { ParseSourceSpan: t } = Te(), s = [{ regex: /^(\[if([^\]]*)]>)(.*?)<!\s*\[endif]$/s, parse: n }, { regex: /^\[if([^\]]*)]><!$/, parse: a }, { regex: /^<!\s*\[endif]$/, parse: p }];
          function c(D, g) {
            if (D.value)
              for (let { regex: i, parse: l } of s) {
                let h = D.value.match(i);
                if (h)
                  return l(D, g, h);
              }
            return null;
          }
          function n(D, g, i) {
            let [, l, h, C] = i, d = 4 + l.length, m = D.sourceSpan.start.moveBy(d), T = m.moveBy(C.length), [B, A] = (() => {
              try {
                return [true, g(C, m).children];
              } catch {
                let N = { type: "text", value: C, sourceSpan: new t(m, T) };
                return [false, [N]];
              }
            })();
            return { type: "ieConditionalComment", complete: B, children: A, condition: h.trim().replace(/\s+/g, " "), sourceSpan: D.sourceSpan, startSourceSpan: new t(D.sourceSpan.start, m), endSourceSpan: new t(T, D.sourceSpan.end) };
          }
          function a(D, g, i) {
            let [, l] = i;
            return { type: "ieConditionalStartComment", condition: l.trim().replace(/\s+/g, " "), sourceSpan: D.sourceSpan };
          }
          function p(D) {
            return { type: "ieConditionalEndComment", sourceSpan: D.sourceSpan };
          }
          r.exports = { parseIeConditionalComment: c };
        } }), GD = I({ "src/language-html/loc.js"(e, r) {
          "use strict";
          q();
          function t(c) {
            return c.sourceSpan.start.offset;
          }
          function s(c) {
            return c.sourceSpan.end.offset;
          }
          r.exports = { locStart: t, locEnd: s };
        } }), Ze = I({ "node_modules/angular-html-parser/lib/compiler/src/ml_parser/tags.js"(e) {
          "use strict";
          q(), Object.defineProperty(e, "__esModule", { value: true });
          var r;
          (function(D) {
            D[D.RAW_TEXT = 0] = "RAW_TEXT", D[D.ESCAPABLE_RAW_TEXT = 1] = "ESCAPABLE_RAW_TEXT", D[D.PARSABLE_DATA = 2] = "PARSABLE_DATA";
          })(r = e.TagContentType || (e.TagContentType = {}));
          function t(D) {
            if (D[0] != ":")
              return [null, D];
            let g = D.indexOf(":", 1);
            if (g == -1)
              throw new Error('Unsupported format "'.concat(D, '" expecting ":namespace:name"'));
            return [D.slice(1, g), D.slice(g + 1)];
          }
          e.splitNsName = t;
          function s(D) {
            return t(D)[1] === "ng-container";
          }
          e.isNgContainer = s;
          function c(D) {
            return t(D)[1] === "ng-content";
          }
          e.isNgContent = c;
          function n(D) {
            return t(D)[1] === "ng-template";
          }
          e.isNgTemplate = n;
          function a(D) {
            return D === null ? null : t(D)[0];
          }
          e.getNsPrefix = a;
          function p(D, g) {
            return D ? ":".concat(D, ":").concat(g) : g;
          }
          e.mergeNsAndName = p, e.NAMED_ENTITIES = { Aacute: "Ã", aacute: "Ã¡", Abreve: "Ä", abreve: "Ä", ac: "â¾", acd: "â¿", acE: "â¾Ì³", Acirc: "Ã", acirc: "Ã¢", acute: "Â´", Acy: "Ð", acy: "Ð°", AElig: "Ã", aelig: "Ã¦", af: "â¡", Afr: "ð", afr: "ð", Agrave: "Ã", agrave: "Ã ", alefsym: "âµ", aleph: "âµ", Alpha: "Î", alpha: "Î±", Amacr: "Ä", amacr: "Ä", amalg: "â¨¿", AMP: "&", amp: "&", And: "â©", and: "â§", andand: "â©", andd: "â©", andslope: "â©", andv: "â©", ang: "â ", ange: "â¦¤", angle: "â ", angmsd: "â¡", angmsdaa: "â¦¨", angmsdab: "â¦©", angmsdac: "â¦ª", angmsdad: "â¦«", angmsdae: "â¦¬", angmsdaf: "â¦­", angmsdag: "â¦®", angmsdah: "â¦¯", angrt: "â", angrtvb: "â¾", angrtvbd: "â¦", angsph: "â¢", angst: "Ã", angzarr: "â¼", Aogon: "Ä", aogon: "Ä", Aopf: "ð¸", aopf: "ð", ap: "â", apacir: "â©¯", apE: "â©°", ape: "â", apid: "â", apos: "'", ApplyFunction: "â¡", approx: "â", approxeq: "â", Aring: "Ã", aring: "Ã¥", Ascr: "ð", ascr: "ð¶", Assign: "â", ast: "*", asymp: "â", asympeq: "â", Atilde: "Ã", atilde: "Ã£", Auml: "Ã", auml: "Ã¤", awconint: "â³", awint: "â¨", backcong: "â", backepsilon: "Ï¶", backprime: "âµ", backsim: "â½", backsimeq: "â", Backslash: "â", Barv: "â«§", barvee: "â½", Barwed: "â", barwed: "â", barwedge: "â", bbrk: "âµ", bbrktbrk: "â¶", bcong: "â", Bcy: "Ð", bcy: "Ð±", bdquo: "â", becaus: "âµ", Because: "âµ", because: "âµ", bemptyv: "â¦°", bepsi: "Ï¶", bernou: "â¬", Bernoullis: "â¬", Beta: "Î", beta: "Î²", beth: "â¶", between: "â¬", Bfr: "ð", bfr: "ð", bigcap: "â", bigcirc: "â¯", bigcup: "â", bigodot: "â¨", bigoplus: "â¨", bigotimes: "â¨", bigsqcup: "â¨", bigstar: "â", bigtriangledown: "â½", bigtriangleup: "â³", biguplus: "â¨", bigvee: "â", bigwedge: "â", bkarow: "â¤", blacklozenge: "â§«", blacksquare: "âª", blacktriangle: "â´", blacktriangledown: "â¾", blacktriangleleft: "â", blacktriangleright: "â¸", blank: "â£", blk12: "â", blk14: "â", blk34: "â", block: "â", bne: "=â¥", bnequiv: "â¡â¥", bNot: "â«­", bnot: "â", Bopf: "ð¹", bopf: "ð", bot: "â¥", bottom: "â¥", bowtie: "â", boxbox: "â§", boxDL: "â", boxDl: "â", boxdL: "â", boxdl: "â", boxDR: "â", boxDr: "â", boxdR: "â", boxdr: "â", boxH: "â", boxh: "â", boxHD: "â¦", boxHd: "â¤", boxhD: "â¥", boxhd: "â¬", boxHU: "â©", boxHu: "â§", boxhU: "â¨", boxhu: "â´", boxminus: "â", boxplus: "â", boxtimes: "â ", boxUL: "â", boxUl: "â", boxuL: "â", boxul: "â", boxUR: "â", boxUr: "â", boxuR: "â", boxur: "â", boxV: "â", boxv: "â", boxVH: "â¬", boxVh: "â«", boxvH: "âª", boxvh: "â¼", boxVL: "â£", boxVl: "â¢", boxvL: "â¡", boxvl: "â¤", boxVR: "â ", boxVr: "â", boxvR: "â", boxvr: "â", bprime: "âµ", Breve: "Ë", breve: "Ë", brvbar: "Â¦", Bscr: "â¬", bscr: "ð·", bsemi: "â", bsim: "â½", bsime: "â", bsol: "\\", bsolb: "â§", bsolhsub: "â", bull: "â¢", bullet: "â¢", bump: "â", bumpE: "âª®", bumpe: "â", Bumpeq: "â", bumpeq: "â", Cacute: "Ä", cacute: "Ä", Cap: "â", cap: "â©", capand: "â©", capbrcup: "â©", capcap: "â©", capcup: "â©", capdot: "â©", CapitalDifferentialD: "â", caps: "â©ï¸", caret: "â", caron: "Ë", Cayleys: "â­", ccaps: "â©", Ccaron: "Ä", ccaron: "Ä", Ccedil: "Ã", ccedil: "Ã§", Ccirc: "Ä", ccirc: "Ä", Cconint: "â°", ccups: "â©", ccupssm: "â©", Cdot: "Ä", cdot: "Ä", cedil: "Â¸", Cedilla: "Â¸", cemptyv: "â¦²", cent: "Â¢", CenterDot: "Â·", centerdot: "Â·", Cfr: "â­", cfr: "ð ", CHcy: "Ð§", chcy: "Ñ", check: "â", checkmark: "â", Chi: "Î§", chi: "Ï", cir: "â", circ: "Ë", circeq: "â", circlearrowleft: "âº", circlearrowright: "â»", circledast: "â", circledcirc: "â", circleddash: "â", CircleDot: "â", circledR: "Â®", circledS: "â", CircleMinus: "â", CirclePlus: "â", CircleTimes: "â", cirE: "â§", cire: "â", cirfnint: "â¨", cirmid: "â«¯", cirscir: "â§", ClockwiseContourIntegral: "â²", CloseCurlyDoubleQuote: "â", CloseCurlyQuote: "â", clubs: "â£", clubsuit: "â£", Colon: "â·", colon: ":", Colone: "â©´", colone: "â", coloneq: "â", comma: ",", commat: "@", comp: "â", compfn: "â", complement: "â", complexes: "â", cong: "â", congdot: "â©­", Congruent: "â¡", Conint: "â¯", conint: "â®", ContourIntegral: "â®", Copf: "â", copf: "ð", coprod: "â", Coproduct: "â", COPY: "Â©", copy: "Â©", copysr: "â", CounterClockwiseContourIntegral: "â³", crarr: "âµ", Cross: "â¨¯", cross: "â", Cscr: "ð", cscr: "ð¸", csub: "â«", csube: "â«", csup: "â«", csupe: "â«", ctdot: "â¯", cudarrl: "â¤¸", cudarrr: "â¤µ", cuepr: "â", cuesc: "â", cularr: "â¶", cularrp: "â¤½", Cup: "â", cup: "âª", cupbrcap: "â©", CupCap: "â", cupcap: "â©", cupcup: "â©", cupdot: "â", cupor: "â©", cups: "âªï¸", curarr: "â·", curarrm: "â¤¼", curlyeqprec: "â", curlyeqsucc: "â", curlyvee: "â", curlywedge: "â", curren: "Â¤", curvearrowleft: "â¶", curvearrowright: "â·", cuvee: "â", cuwed: "â", cwconint: "â²", cwint: "â±", cylcty: "â­", Dagger: "â¡", dagger: "â ", daleth: "â¸", Darr: "â¡", dArr: "â", darr: "â", dash: "â", Dashv: "â«¤", dashv: "â£", dbkarow: "â¤", dblac: "Ë", Dcaron: "Ä", dcaron: "Ä", Dcy: "Ð", dcy: "Ð´", DD: "â", dd: "â", ddagger: "â¡", ddarr: "â", DDotrahd: "â¤", ddotseq: "â©·", deg: "Â°", Del: "â", Delta: "Î", delta: "Î´", demptyv: "â¦±", dfisht: "â¥¿", Dfr: "ð", dfr: "ð¡", dHar: "â¥¥", dharl: "â", dharr: "â", DiacriticalAcute: "Â´", DiacriticalDot: "Ë", DiacriticalDoubleAcute: "Ë", DiacriticalGrave: "`", DiacriticalTilde: "Ë", diam: "â", Diamond: "â", diamond: "â", diamondsuit: "â¦", diams: "â¦", die: "Â¨", DifferentialD: "â", digamma: "Ï", disin: "â²", div: "Ã·", divide: "Ã·", divideontimes: "â", divonx: "â", DJcy: "Ð", djcy: "Ñ", dlcorn: "â", dlcrop: "â", dollar: "$", Dopf: "ð»", dopf: "ð", Dot: "Â¨", dot: "Ë", DotDot: "â", doteq: "â", doteqdot: "â", DotEqual: "â", dotminus: "â¸", dotplus: "â", dotsquare: "â¡", doublebarwedge: "â", DoubleContourIntegral: "â¯", DoubleDot: "Â¨", DoubleDownArrow: "â", DoubleLeftArrow: "â", DoubleLeftRightArrow: "â", DoubleLeftTee: "â«¤", DoubleLongLeftArrow: "â¸", DoubleLongLeftRightArrow: "âº", DoubleLongRightArrow: "â¹", DoubleRightArrow: "â", DoubleRightTee: "â¨", DoubleUpArrow: "â", DoubleUpDownArrow: "â", DoubleVerticalBar: "â¥", DownArrow: "â", Downarrow: "â", downarrow: "â", DownArrowBar: "â¤", DownArrowUpArrow: "âµ", DownBreve: "Ì", downdownarrows: "â", downharpoonleft: "â", downharpoonright: "â", DownLeftRightVector: "â¥", DownLeftTeeVector: "â¥", DownLeftVector: "â½", DownLeftVectorBar: "â¥", DownRightTeeVector: "â¥", DownRightVector: "â", DownRightVectorBar: "â¥", DownTee: "â¤", DownTeeArrow: "â§", drbkarow: "â¤", drcorn: "â", drcrop: "â", Dscr: "ð", dscr: "ð¹", DScy: "Ð", dscy: "Ñ", dsol: "â§¶", Dstrok: "Ä", dstrok: "Ä", dtdot: "â±", dtri: "â¿", dtrif: "â¾", duarr: "âµ", duhar: "â¥¯", dwangle: "â¦¦", DZcy: "Ð", dzcy: "Ñ", dzigrarr: "â¿", Eacute: "Ã", eacute: "Ã©", easter: "â©®", Ecaron: "Ä", ecaron: "Ä", ecir: "â", Ecirc: "Ã", ecirc: "Ãª", ecolon: "â", Ecy: "Ð­", ecy: "Ñ", eDDot: "â©·", Edot: "Ä", eDot: "â", edot: "Ä", ee: "â", efDot: "â", Efr: "ð", efr: "ð¢", eg: "âª", Egrave: "Ã", egrave: "Ã¨", egs: "âª", egsdot: "âª", el: "âª", Element: "â", elinters: "â§", ell: "â", els: "âª", elsdot: "âª", Emacr: "Ä", emacr: "Ä", empty: "â", emptyset: "â", EmptySmallSquare: "â»", emptyv: "â", EmptyVerySmallSquare: "â«", emsp: "â", emsp13: "â", emsp14: "â", ENG: "Å", eng: "Å", ensp: "â", Eogon: "Ä", eogon: "Ä", Eopf: "ð¼", eopf: "ð", epar: "â", eparsl: "â§£", eplus: "â©±", epsi: "Îµ", Epsilon: "Î", epsilon: "Îµ", epsiv: "Ïµ", eqcirc: "â", eqcolon: "â", eqsim: "â", eqslantgtr: "âª", eqslantless: "âª", Equal: "â©µ", equals: "=", EqualTilde: "â", equest: "â", Equilibrium: "â", equiv: "â¡", equivDD: "â©¸", eqvparsl: "â§¥", erarr: "â¥±", erDot: "â", Escr: "â°", escr: "â¯", esdot: "â", Esim: "â©³", esim: "â", Eta: "Î", eta: "Î·", ETH: "Ã", eth: "Ã°", Euml: "Ã", euml: "Ã«", euro: "â¬", excl: "!", exist: "â", Exists: "â", expectation: "â°", ExponentialE: "â", exponentiale: "â", fallingdotseq: "â", Fcy: "Ð¤", fcy: "Ñ", female: "â", ffilig: "ï¬", fflig: "ï¬", ffllig: "ï¬", Ffr: "ð", ffr: "ð£", filig: "ï¬", FilledSmallSquare: "â¼", FilledVerySmallSquare: "âª", fjlig: "fj", flat: "â­", fllig: "ï¬", fltns: "â±", fnof: "Æ", Fopf: "ð½", fopf: "ð", ForAll: "â", forall: "â", fork: "â", forkv: "â«", Fouriertrf: "â±", fpartint: "â¨", frac12: "Â½", frac13: "â", frac14: "Â¼", frac15: "â", frac16: "â", frac18: "â", frac23: "â", frac25: "â", frac34: "Â¾", frac35: "â", frac38: "â", frac45: "â", frac56: "â", frac58: "â", frac78: "â", frasl: "â", frown: "â¢", Fscr: "â±", fscr: "ð»", gacute: "Çµ", Gamma: "Î", gamma: "Î³", Gammad: "Ï", gammad: "Ï", gap: "âª", Gbreve: "Ä", gbreve: "Ä", Gcedil: "Ä¢", Gcirc: "Ä", gcirc: "Ä", Gcy: "Ð", gcy: "Ð³", Gdot: "Ä ", gdot: "Ä¡", gE: "â§", ge: "â¥", gEl: "âª", gel: "â", geq: "â¥", geqq: "â§", geqslant: "â©¾", ges: "â©¾", gescc: "âª©", gesdot: "âª", gesdoto: "âª", gesdotol: "âª", gesl: "âï¸", gesles: "âª", Gfr: "ð", gfr: "ð¤", Gg: "â", gg: "â«", ggg: "â", gimel: "â·", GJcy: "Ð", gjcy: "Ñ", gl: "â·", gla: "âª¥", glE: "âª", glj: "âª¤", gnap: "âª", gnapprox: "âª", gnE: "â©", gne: "âª", gneq: "âª", gneqq: "â©", gnsim: "â§", Gopf: "ð¾", gopf: "ð", grave: "`", GreaterEqual: "â¥", GreaterEqualLess: "â", GreaterFullEqual: "â§", GreaterGreater: "âª¢", GreaterLess: "â·", GreaterSlantEqual: "â©¾", GreaterTilde: "â³", Gscr: "ð¢", gscr: "â", gsim: "â³", gsime: "âª", gsiml: "âª", GT: ">", Gt: "â«", gt: ">", gtcc: "âª§", gtcir: "â©º", gtdot: "â", gtlPar: "â¦", gtquest: "â©¼", gtrapprox: "âª", gtrarr: "â¥¸", gtrdot: "â", gtreqless: "â", gtreqqless: "âª", gtrless: "â·", gtrsim: "â³", gvertneqq: "â©ï¸", gvnE: "â©ï¸", Hacek: "Ë", hairsp: "â", half: "Â½", hamilt: "â", HARDcy: "Ðª", hardcy: "Ñ", hArr: "â", harr: "â", harrcir: "â¥", harrw: "â­", Hat: "^", hbar: "â", Hcirc: "Ä¤", hcirc: "Ä¥", hearts: "â¥", heartsuit: "â¥", hellip: "â¦", hercon: "â¹", Hfr: "â", hfr: "ð¥", HilbertSpace: "â", hksearow: "â¤¥", hkswarow: "â¤¦", hoarr: "â¿", homtht: "â»", hookleftarrow: "â©", hookrightarrow: "âª", Hopf: "â", hopf: "ð", horbar: "â", HorizontalLine: "â", Hscr: "â", hscr: "ð½", hslash: "â", Hstrok: "Ä¦", hstrok: "Ä§", HumpDownHump: "â", HumpEqual: "â", hybull: "â", hyphen: "â", Iacute: "Ã", iacute: "Ã­", ic: "â£", Icirc: "Ã", icirc: "Ã®", Icy: "Ð", icy: "Ð¸", Idot: "Ä°", IEcy: "Ð", iecy: "Ðµ", iexcl: "Â¡", iff: "â", Ifr: "â", ifr: "ð¦", Igrave: "Ã", igrave: "Ã¬", ii: "â", iiiint: "â¨", iiint: "â­", iinfin: "â§", iiota: "â©", IJlig: "Ä²", ijlig: "Ä³", Im: "â", Imacr: "Äª", imacr: "Ä«", image: "â", ImaginaryI: "â", imagline: "â", imagpart: "â", imath: "Ä±", imof: "â·", imped: "Æµ", Implies: "â", in: "â", incare: "â", infin: "â", infintie: "â§", inodot: "Ä±", Int: "â¬", int: "â«", intcal: "âº", integers: "â¤", Integral: "â«", intercal: "âº", Intersection: "â", intlarhk: "â¨", intprod: "â¨¼", InvisibleComma: "â£", InvisibleTimes: "â¢", IOcy: "Ð", iocy: "Ñ", Iogon: "Ä®", iogon: "Ä¯", Iopf: "ð", iopf: "ð", Iota: "Î", iota: "Î¹", iprod: "â¨¼", iquest: "Â¿", Iscr: "â", iscr: "ð¾", isin: "â", isindot: "âµ", isinE: "â¹", isins: "â´", isinsv: "â³", isinv: "â", it: "â¢", Itilde: "Ä¨", itilde: "Ä©", Iukcy: "Ð", iukcy: "Ñ", Iuml: "Ã", iuml: "Ã¯", Jcirc: "Ä´", jcirc: "Äµ", Jcy: "Ð", jcy: "Ð¹", Jfr: "ð", jfr: "ð§", jmath: "È·", Jopf: "ð", jopf: "ð", Jscr: "ð¥", jscr: "ð¿", Jsercy: "Ð", jsercy: "Ñ", Jukcy: "Ð", jukcy: "Ñ", Kappa: "Î", kappa: "Îº", kappav: "Ï°", Kcedil: "Ä¶", kcedil: "Ä·", Kcy: "Ð", kcy: "Ðº", Kfr: "ð", kfr: "ð¨", kgreen: "Ä¸", KHcy: "Ð¥", khcy: "Ñ", KJcy: "Ð", kjcy: "Ñ", Kopf: "ð", kopf: "ð", Kscr: "ð¦", kscr: "ð", lAarr: "â", Lacute: "Ä¹", lacute: "Äº", laemptyv: "â¦´", lagran: "â", Lambda: "Î", lambda: "Î»", Lang: "âª", lang: "â¨", langd: "â¦", langle: "â¨", lap: "âª", Laplacetrf: "â", laquo: "Â«", Larr: "â", lArr: "â", larr: "â", larrb: "â¤", larrbfs: "â¤", larrfs: "â¤", larrhk: "â©", larrlp: "â«", larrpl: "â¤¹", larrsim: "â¥³", larrtl: "â¢", lat: "âª«", lAtail: "â¤", latail: "â¤", late: "âª­", lates: "âª­ï¸", lBarr: "â¤", lbarr: "â¤", lbbrk: "â²", lbrace: "{", lbrack: "[", lbrke: "â¦", lbrksld: "â¦", lbrkslu: "â¦", Lcaron: "Ä½", lcaron: "Ä¾", Lcedil: "Ä»", lcedil: "Ä¼", lceil: "â", lcub: "{", Lcy: "Ð", lcy: "Ð»", ldca: "â¤¶", ldquo: "â", ldquor: "â", ldrdhar: "â¥§", ldrushar: "â¥", ldsh: "â²", lE: "â¦", le: "â¤", LeftAngleBracket: "â¨", LeftArrow: "â", Leftarrow: "â", leftarrow: "â", LeftArrowBar: "â¤", LeftArrowRightArrow: "â", leftarrowtail: "â¢", LeftCeiling: "â", LeftDoubleBracket: "â¦", LeftDownTeeVector: "â¥¡", LeftDownVector: "â", LeftDownVectorBar: "â¥", LeftFloor: "â", leftharpoondown: "â½", leftharpoonup: "â¼", leftleftarrows: "â", LeftRightArrow: "â", Leftrightarrow: "â", leftrightarrow: "â", leftrightarrows: "â", leftrightharpoons: "â", leftrightsquigarrow: "â­", LeftRightVector: "â¥", LeftTee: "â£", LeftTeeArrow: "â¤", LeftTeeVector: "â¥", leftthreetimes: "â", LeftTriangle: "â²", LeftTriangleBar: "â§", LeftTriangleEqual: "â´", LeftUpDownVector: "â¥", LeftUpTeeVector: "â¥ ", LeftUpVector: "â¿", LeftUpVectorBar: "â¥", LeftVector: "â¼", LeftVectorBar: "â¥", lEg: "âª", leg: "â", leq: "â¤", leqq: "â¦", leqslant: "â©½", les: "â©½", lescc: "âª¨", lesdot: "â©¿", lesdoto: "âª", lesdotor: "âª", lesg: "âï¸", lesges: "âª", lessapprox: "âª", lessdot: "â", lesseqgtr: "â", lesseqqgtr: "âª", LessEqualGreater: "â", LessFullEqual: "â¦", LessGreater: "â¶", lessgtr: "â¶", LessLess: "âª¡", lesssim: "â²", LessSlantEqual: "â©½", LessTilde: "â²", lfisht: "â¥¼", lfloor: "â", Lfr: "ð", lfr: "ð©", lg: "â¶", lgE: "âª", lHar: "â¥¢", lhard: "â½", lharu: "â¼", lharul: "â¥ª", lhblk: "â", LJcy: "Ð", ljcy: "Ñ", Ll: "â", ll: "âª", llarr: "â", llcorner: "â", Lleftarrow: "â", llhard: "â¥«", lltri: "âº", Lmidot: "Ä¿", lmidot: "Å", lmoust: "â°", lmoustache: "â°", lnap: "âª", lnapprox: "âª", lnE: "â¨", lne: "âª", lneq: "âª", lneqq: "â¨", lnsim: "â¦", loang: "â¬", loarr: "â½", lobrk: "â¦", LongLeftArrow: "âµ", Longleftarrow: "â¸", longleftarrow: "âµ", LongLeftRightArrow: "â·", Longleftrightarrow: "âº", longleftrightarrow: "â·", longmapsto: "â¼", LongRightArrow: "â¶", Longrightarrow: "â¹", longrightarrow: "â¶", looparrowleft: "â«", looparrowright: "â¬", lopar: "â¦", Lopf: "ð", lopf: "ð", loplus: "â¨­", lotimes: "â¨´", lowast: "â", lowbar: "_", LowerLeftArrow: "â", LowerRightArrow: "â", loz: "â", lozenge: "â", lozf: "â§«", lpar: "(", lparlt: "â¦", lrarr: "â", lrcorner: "â", lrhar: "â", lrhard: "â¥­", lrm: "â", lrtri: "â¿", lsaquo: "â¹", Lscr: "â", lscr: "ð", Lsh: "â°", lsh: "â°", lsim: "â²", lsime: "âª", lsimg: "âª", lsqb: "[", lsquo: "â", lsquor: "â", Lstrok: "Å", lstrok: "Å", LT: "<", Lt: "âª", lt: "<", ltcc: "âª¦", ltcir: "â©¹", ltdot: "â", lthree: "â", ltimes: "â", ltlarr: "â¥¶", ltquest: "â©»", ltri: "â", ltrie: "â´", ltrif: "â", ltrPar: "â¦", lurdshar: "â¥", luruhar: "â¥¦", lvertneqq: "â¨ï¸", lvnE: "â¨ï¸", macr: "Â¯", male: "â", malt: "â ", maltese: "â ", Map: "â¤", map: "â¦", mapsto: "â¦", mapstodown: "â§", mapstoleft: "â¤", mapstoup: "â¥", marker: "â®", mcomma: "â¨©", Mcy: "Ð", mcy: "Ð¼", mdash: "â", mDDot: "âº", measuredangle: "â¡", MediumSpace: "â", Mellintrf: "â³", Mfr: "ð", mfr: "ðª", mho: "â§", micro: "Âµ", mid: "â£", midast: "*", midcir: "â«°", middot: "Â·", minus: "â", minusb: "â", minusd: "â¸", minusdu: "â¨ª", MinusPlus: "â", mlcp: "â«", mldr: "â¦", mnplus: "â", models: "â§", Mopf: "ð", mopf: "ð", mp: "â", Mscr: "â³", mscr: "ð", mstpos: "â¾", Mu: "Î", mu: "Î¼", multimap: "â¸", mumap: "â¸", nabla: "â", Nacute: "Å", nacute: "Å", nang: "â â", nap: "â", napE: "â©°Ì¸", napid: "âÌ¸", napos: "Å", napprox: "â", natur: "â®", natural: "â®", naturals: "â", nbsp: "Â ", nbump: "âÌ¸", nbumpe: "âÌ¸", ncap: "â©", Ncaron: "Å", ncaron: "Å", Ncedil: "Å", ncedil: "Å", ncong: "â", ncongdot: "â©­Ì¸", ncup: "â©", Ncy: "Ð", ncy: "Ð½", ndash: "â", ne: "â ", nearhk: "â¤¤", neArr: "â", nearr: "â", nearrow: "â", nedot: "âÌ¸", NegativeMediumSpace: "â", NegativeThickSpace: "â", NegativeThinSpace: "â", NegativeVeryThinSpace: "â", nequiv: "â¢", nesear: "â¤¨", nesim: "âÌ¸", NestedGreaterGreater: "â«", NestedLessLess: "âª", NewLine: `
`, nexist: "â", nexists: "â", Nfr: "ð", nfr: "ð«", ngE: "â§Ì¸", nge: "â±", ngeq: "â±", ngeqq: "â§Ì¸", ngeqslant: "â©¾Ì¸", nges: "â©¾Ì¸", nGg: "âÌ¸", ngsim: "âµ", nGt: "â«â", ngt: "â¯", ngtr: "â¯", nGtv: "â«Ì¸", nhArr: "â", nharr: "â®", nhpar: "â«²", ni: "â", nis: "â¼", nisd: "âº", niv: "â", NJcy: "Ð", njcy: "Ñ", nlArr: "â", nlarr: "â", nldr: "â¥", nlE: "â¦Ì¸", nle: "â°", nLeftarrow: "â", nleftarrow: "â", nLeftrightarrow: "â", nleftrightarrow: "â®", nleq: "â°", nleqq: "â¦Ì¸", nleqslant: "â©½Ì¸", nles: "â©½Ì¸", nless: "â®", nLl: "âÌ¸", nlsim: "â´", nLt: "âªâ", nlt: "â®", nltri: "âª", nltrie: "â¬", nLtv: "âªÌ¸", nmid: "â¤", NoBreak: "â ", NonBreakingSpace: "Â ", Nopf: "â", nopf: "ð", Not: "â«¬", not: "Â¬", NotCongruent: "â¢", NotCupCap: "â­", NotDoubleVerticalBar: "â¦", NotElement: "â", NotEqual: "â ", NotEqualTilde: "âÌ¸", NotExists: "â", NotGreater: "â¯", NotGreaterEqual: "â±", NotGreaterFullEqual: "â§Ì¸", NotGreaterGreater: "â«Ì¸", NotGreaterLess: "â¹", NotGreaterSlantEqual: "â©¾Ì¸", NotGreaterTilde: "âµ", NotHumpDownHump: "âÌ¸", NotHumpEqual: "âÌ¸", notin: "â", notindot: "âµÌ¸", notinE: "â¹Ì¸", notinva: "â", notinvb: "â·", notinvc: "â¶", NotLeftTriangle: "âª", NotLeftTriangleBar: "â§Ì¸", NotLeftTriangleEqual: "â¬", NotLess: "â®", NotLessEqual: "â°", NotLessGreater: "â¸", NotLessLess: "âªÌ¸", NotLessSlantEqual: "â©½Ì¸", NotLessTilde: "â´", NotNestedGreaterGreater: "âª¢Ì¸", NotNestedLessLess: "âª¡Ì¸", notni: "â", notniva: "â", notnivb: "â¾", notnivc: "â½", NotPrecedes: "â", NotPrecedesEqual: "âª¯Ì¸", NotPrecedesSlantEqual: "â ", NotReverseElement: "â", NotRightTriangle: "â«", NotRightTriangleBar: "â§Ì¸", NotRightTriangleEqual: "â­", NotSquareSubset: "âÌ¸", NotSquareSubsetEqual: "â¢", NotSquareSuperset: "âÌ¸", NotSquareSupersetEqual: "â£", NotSubset: "ââ", NotSubsetEqual: "â", NotSucceeds: "â", NotSucceedsEqual: "âª°Ì¸", NotSucceedsSlantEqual: "â¡", NotSucceedsTilde: "â¿Ì¸", NotSuperset: "ââ", NotSupersetEqual: "â", NotTilde: "â", NotTildeEqual: "â", NotTildeFullEqual: "â", NotTildeTilde: "â", NotVerticalBar: "â¤", npar: "â¦", nparallel: "â¦", nparsl: "â«½â¥", npart: "âÌ¸", npolint: "â¨", npr: "â", nprcue: "â ", npre: "âª¯Ì¸", nprec: "â", npreceq: "âª¯Ì¸", nrArr: "â", nrarr: "â", nrarrc: "â¤³Ì¸", nrarrw: "âÌ¸", nRightarrow: "â", nrightarrow: "â", nrtri: "â«", nrtrie: "â­", nsc: "â", nsccue: "â¡", nsce: "âª°Ì¸", Nscr: "ð©", nscr: "ð", nshortmid: "â¤", nshortparallel: "â¦", nsim: "â", nsime: "â", nsimeq: "â", nsmid: "â¤", nspar: "â¦", nsqsube: "â¢", nsqsupe: "â£", nsub: "â", nsubE: "â«Ì¸", nsube: "â", nsubset: "ââ", nsubseteq: "â", nsubseteqq: "â«Ì¸", nsucc: "â", nsucceq: "âª°Ì¸", nsup: "â", nsupE: "â«Ì¸", nsupe: "â", nsupset: "ââ", nsupseteq: "â", nsupseteqq: "â«Ì¸", ntgl: "â¹", Ntilde: "Ã", ntilde: "Ã±", ntlg: "â¸", ntriangleleft: "âª", ntrianglelefteq: "â¬", ntriangleright: "â«", ntrianglerighteq: "â­", Nu: "Î", nu: "Î½", num: "#", numero: "â", numsp: "â", nvap: "ââ", nVDash: "â¯", nVdash: "â®", nvDash: "â­", nvdash: "â¬", nvge: "â¥â", nvgt: ">â", nvHarr: "â¤", nvinfin: "â§", nvlArr: "â¤", nvle: "â¤â", nvlt: "<â", nvltrie: "â´â", nvrArr: "â¤", nvrtrie: "âµâ", nvsim: "â¼â", nwarhk: "â¤£", nwArr: "â", nwarr: "â", nwarrow: "â", nwnear: "â¤§", Oacute: "Ã", oacute: "Ã³", oast: "â", ocir: "â", Ocirc: "Ã", ocirc: "Ã´", Ocy: "Ð", ocy: "Ð¾", odash: "â", Odblac: "Å", odblac: "Å", odiv: "â¨¸", odot: "â", odsold: "â¦¼", OElig: "Å", oelig: "Å", ofcir: "â¦¿", Ofr: "ð", ofr: "ð¬", ogon: "Ë", Ograve: "Ã", ograve: "Ã²", ogt: "â§", ohbar: "â¦µ", ohm: "Î©", oint: "â®", olarr: "âº", olcir: "â¦¾", olcross: "â¦»", oline: "â¾", olt: "â§", Omacr: "Å", omacr: "Å", Omega: "Î©", omega: "Ï", Omicron: "Î", omicron: "Î¿", omid: "â¦¶", ominus: "â", Oopf: "ð", oopf: "ð ", opar: "â¦·", OpenCurlyDoubleQuote: "â", OpenCurlyQuote: "â", operp: "â¦¹", oplus: "â", Or: "â©", or: "â¨", orarr: "â»", ord: "â©", order: "â´", orderof: "â´", ordf: "Âª", ordm: "Âº", origof: "â¶", oror: "â©", orslope: "â©", orv: "â©", oS: "â", Oscr: "ðª", oscr: "â´", Oslash: "Ã", oslash: "Ã¸", osol: "â", Otilde: "Ã", otilde: "Ãµ", Otimes: "â¨·", otimes: "â", otimesas: "â¨¶", Ouml: "Ã", ouml: "Ã¶", ovbar: "â½", OverBar: "â¾", OverBrace: "â", OverBracket: "â´", OverParenthesis: "â", par: "â¥", para: "Â¶", parallel: "â¥", parsim: "â«³", parsl: "â«½", part: "â", PartialD: "â", Pcy: "Ð", pcy: "Ð¿", percnt: "%", period: ".", permil: "â°", perp: "â¥", pertenk: "â±", Pfr: "ð", pfr: "ð­", Phi: "Î¦", phi: "Ï", phiv: "Ï", phmmat: "â³", phone: "â", Pi: "Î ", pi: "Ï", pitchfork: "â", piv: "Ï", planck: "â", planckh: "â", plankv: "â", plus: "+", plusacir: "â¨£", plusb: "â", pluscir: "â¨¢", plusdo: "â", plusdu: "â¨¥", pluse: "â©²", PlusMinus: "Â±", plusmn: "Â±", plussim: "â¨¦", plustwo: "â¨§", pm: "Â±", Poincareplane: "â", pointint: "â¨", Popf: "â", popf: "ð¡", pound: "Â£", Pr: "âª»", pr: "âº", prap: "âª·", prcue: "â¼", prE: "âª³", pre: "âª¯", prec: "âº", precapprox: "âª·", preccurlyeq: "â¼", Precedes: "âº", PrecedesEqual: "âª¯", PrecedesSlantEqual: "â¼", PrecedesTilde: "â¾", preceq: "âª¯", precnapprox: "âª¹", precneqq: "âªµ", precnsim: "â¨", precsim: "â¾", Prime: "â³", prime: "â²", primes: "â", prnap: "âª¹", prnE: "âªµ", prnsim: "â¨", prod: "â", Product: "â", profalar: "â®", profline: "â", profsurf: "â", prop: "â", Proportion: "â·", Proportional: "â", propto: "â", prsim: "â¾", prurel: "â°", Pscr: "ð«", pscr: "ð", Psi: "Î¨", psi: "Ï", puncsp: "â", Qfr: "ð", qfr: "ð®", qint: "â¨", Qopf: "â", qopf: "ð¢", qprime: "â", Qscr: "ð¬", qscr: "ð", quaternions: "â", quatint: "â¨", quest: "?", questeq: "â", QUOT: '"', quot: '"', rAarr: "â", race: "â½Ì±", Racute: "Å", racute: "Å", radic: "â", raemptyv: "â¦³", Rang: "â«", rang: "â©", rangd: "â¦", range: "â¦¥", rangle: "â©", raquo: "Â»", Rarr: "â ", rArr: "â", rarr: "â", rarrap: "â¥µ", rarrb: "â¥", rarrbfs: "â¤ ", rarrc: "â¤³", rarrfs: "â¤", rarrhk: "âª", rarrlp: "â¬", rarrpl: "â¥", rarrsim: "â¥´", Rarrtl: "â¤", rarrtl: "â£", rarrw: "â", rAtail: "â¤", ratail: "â¤", ratio: "â¶", rationals: "â", RBarr: "â¤", rBarr: "â¤", rbarr: "â¤", rbbrk: "â³", rbrace: "}", rbrack: "]", rbrke: "â¦", rbrksld: "â¦", rbrkslu: "â¦", Rcaron: "Å", rcaron: "Å", Rcedil: "Å", rcedil: "Å", rceil: "â", rcub: "}", Rcy: "Ð ", rcy: "Ñ", rdca: "â¤·", rdldhar: "â¥©", rdquo: "â", rdquor: "â", rdsh: "â³", Re: "â", real: "â", realine: "â", realpart: "â", reals: "â", rect: "â­", REG: "Â®", reg: "Â®", ReverseElement: "â", ReverseEquilibrium: "â", ReverseUpEquilibrium: "â¥¯", rfisht: "â¥½", rfloor: "â", Rfr: "â", rfr: "ð¯", rHar: "â¥¤", rhard: "â", rharu: "â", rharul: "â¥¬", Rho: "Î¡", rho: "Ï", rhov: "Ï±", RightAngleBracket: "â©", RightArrow: "â", Rightarrow: "â", rightarrow: "â", RightArrowBar: "â¥", RightArrowLeftArrow: "â", rightarrowtail: "â£", RightCeiling: "â", RightDoubleBracket: "â§", RightDownTeeVector: "â¥", RightDownVector: "â", RightDownVectorBar: "â¥", RightFloor: "â", rightharpoondown: "â", rightharpoonup: "â", rightleftarrows: "â", rightleftharpoons: "â", rightrightarrows: "â", rightsquigarrow: "â", RightTee: "â¢", RightTeeArrow: "â¦", RightTeeVector: "â¥", rightthreetimes: "â", RightTriangle: "â³", RightTriangleBar: "â§", RightTriangleEqual: "âµ", RightUpDownVector: "â¥", RightUpTeeVector: "â¥", RightUpVector: "â¾", RightUpVectorBar: "â¥", RightVector: "â", RightVectorBar: "â¥", ring: "Ë", risingdotseq: "â", rlarr: "â", rlhar: "â", rlm: "â", rmoust: "â±", rmoustache: "â±", rnmid: "â«®", roang: "â­", roarr: "â¾", robrk: "â§", ropar: "â¦", Ropf: "â", ropf: "ð£", roplus: "â¨®", rotimes: "â¨µ", RoundImplies: "â¥°", rpar: ")", rpargt: "â¦", rppolint: "â¨", rrarr: "â", Rrightarrow: "â", rsaquo: "âº", Rscr: "â", rscr: "ð", Rsh: "â±", rsh: "â±", rsqb: "]", rsquo: "â", rsquor: "â", rthree: "â", rtimes: "â", rtri: "â¹", rtrie: "âµ", rtrif: "â¸", rtriltri: "â§", RuleDelayed: "â§´", ruluhar: "â¥¨", rx: "â", Sacute: "Å", sacute: "Å", sbquo: "â", Sc: "âª¼", sc: "â»", scap: "âª¸", Scaron: "Å ", scaron: "Å¡", sccue: "â½", scE: "âª´", sce: "âª°", Scedil: "Å", scedil: "Å", Scirc: "Å", scirc: "Å", scnap: "âªº", scnE: "âª¶", scnsim: "â©", scpolint: "â¨", scsim: "â¿", Scy: "Ð¡", scy: "Ñ", sdot: "â", sdotb: "â¡", sdote: "â©¦", searhk: "â¤¥", seArr: "â", searr: "â", searrow: "â", sect: "Â§", semi: ";", seswar: "â¤©", setminus: "â", setmn: "â", sext: "â¶", Sfr: "ð", sfr: "ð°", sfrown: "â¢", sharp: "â¯", SHCHcy: "Ð©", shchcy: "Ñ", SHcy: "Ð¨", shcy: "Ñ", ShortDownArrow: "â", ShortLeftArrow: "â", shortmid: "â£", shortparallel: "â¥", ShortRightArrow: "â", ShortUpArrow: "â", shy: "Â­", Sigma: "Î£", sigma: "Ï", sigmaf: "Ï", sigmav: "Ï", sim: "â¼", simdot: "â©ª", sime: "â", simeq: "â", simg: "âª", simgE: "âª ", siml: "âª", simlE: "âª", simne: "â", simplus: "â¨¤", simrarr: "â¥²", slarr: "â", SmallCircle: "â", smallsetminus: "â", smashp: "â¨³", smeparsl: "â§¤", smid: "â£", smile: "â£", smt: "âªª", smte: "âª¬", smtes: "âª¬ï¸", SOFTcy: "Ð¬", softcy: "Ñ", sol: "/", solb: "â§", solbar: "â¿", Sopf: "ð", sopf: "ð¤", spades: "â ", spadesuit: "â ", spar: "â¥", sqcap: "â", sqcaps: "âï¸", sqcup: "â", sqcups: "âï¸", Sqrt: "â", sqsub: "â", sqsube: "â", sqsubset: "â", sqsubseteq: "â", sqsup: "â", sqsupe: "â", sqsupset: "â", sqsupseteq: "â", squ: "â¡", Square: "â¡", square: "â¡", SquareIntersection: "â", SquareSubset: "â", SquareSubsetEqual: "â", SquareSuperset: "â", SquareSupersetEqual: "â", SquareUnion: "â", squarf: "âª", squf: "âª", srarr: "â", Sscr: "ð®", sscr: "ð", ssetmn: "â", ssmile: "â£", sstarf: "â", Star: "â", star: "â", starf: "â", straightepsilon: "Ïµ", straightphi: "Ï", strns: "Â¯", Sub: "â", sub: "â", subdot: "âª½", subE: "â«", sube: "â", subedot: "â«", submult: "â«", subnE: "â«", subne: "â", subplus: "âª¿", subrarr: "â¥¹", Subset: "â", subset: "â", subseteq: "â", subseteqq: "â«", SubsetEqual: "â", subsetneq: "â", subsetneqq: "â«", subsim: "â«", subsub: "â«", subsup: "â«", succ: "â»", succapprox: "âª¸", succcurlyeq: "â½", Succeeds: "â»", SucceedsEqual: "âª°", SucceedsSlantEqual: "â½", SucceedsTilde: "â¿", succeq: "âª°", succnapprox: "âªº", succneqq: "âª¶", succnsim: "â©", succsim: "â¿", SuchThat: "â", Sum: "â", sum: "â", sung: "âª", Sup: "â", sup: "â", sup1: "Â¹", sup2: "Â²", sup3: "Â³", supdot: "âª¾", supdsub: "â«", supE: "â«", supe: "â", supedot: "â«", Superset: "â", SupersetEqual: "â", suphsol: "â", suphsub: "â«", suplarr: "â¥»", supmult: "â«", supnE: "â«", supne: "â", supplus: "â«", Supset: "â", supset: "â", supseteq: "â", supseteqq: "â«", supsetneq: "â", supsetneqq: "â«", supsim: "â«", supsub: "â«", supsup: "â«", swarhk: "â¤¦", swArr: "â", swarr: "â", swarrow: "â", swnwar: "â¤ª", szlig: "Ã", Tab: "	", target: "â", Tau: "Î¤", tau: "Ï", tbrk: "â´", Tcaron: "Å¤", tcaron: "Å¥", Tcedil: "Å¢", tcedil: "Å£", Tcy: "Ð¢", tcy: "Ñ", tdot: "â", telrec: "â", Tfr: "ð", tfr: "ð±", there4: "â´", Therefore: "â´", therefore: "â´", Theta: "Î", theta: "Î¸", thetasym: "Ï", thetav: "Ï", thickapprox: "â", thicksim: "â¼", ThickSpace: "ââ", thinsp: "â", ThinSpace: "â", thkap: "â", thksim: "â¼", THORN: "Ã", thorn: "Ã¾", Tilde: "â¼", tilde: "Ë", TildeEqual: "â", TildeFullEqual: "â", TildeTilde: "â", times: "Ã", timesb: "â ", timesbar: "â¨±", timesd: "â¨°", tint: "â­", toea: "â¤¨", top: "â¤", topbot: "â¶", topcir: "â«±", Topf: "ð", topf: "ð¥", topfork: "â«", tosa: "â¤©", tprime: "â´", TRADE: "â¢", trade: "â¢", triangle: "âµ", triangledown: "â¿", triangleleft: "â", trianglelefteq: "â´", triangleq: "â", triangleright: "â¹", trianglerighteq: "âµ", tridot: "â¬", trie: "â", triminus: "â¨º", TripleDot: "â", triplus: "â¨¹", trisb: "â§", tritime: "â¨»", trpezium: "â¢", Tscr: "ð¯", tscr: "ð", TScy: "Ð¦", tscy: "Ñ", TSHcy: "Ð", tshcy: "Ñ", Tstrok: "Å¦", tstrok: "Å§", twixt: "â¬", twoheadleftarrow: "â", twoheadrightarrow: "â ", Uacute: "Ã", uacute: "Ãº", Uarr: "â", uArr: "â", uarr: "â", Uarrocir: "â¥", Ubrcy: "Ð", ubrcy: "Ñ", Ubreve: "Å¬", ubreve: "Å­", Ucirc: "Ã", ucirc: "Ã»", Ucy: "Ð£", ucy: "Ñ", udarr: "â", Udblac: "Å°", udblac: "Å±", udhar: "â¥®", ufisht: "â¥¾", Ufr: "ð", ufr: "ð²", Ugrave: "Ã", ugrave: "Ã¹", uHar: "â¥£", uharl: "â¿", uharr: "â¾", uhblk: "â", ulcorn: "â", ulcorner: "â", ulcrop: "â", ultri: "â¸", Umacr: "Åª", umacr: "Å«", uml: "Â¨", UnderBar: "_", UnderBrace: "â", UnderBracket: "âµ", UnderParenthesis: "â", Union: "â", UnionPlus: "â", Uogon: "Å²", uogon: "Å³", Uopf: "ð", uopf: "ð¦", UpArrow: "â", Uparrow: "â", uparrow: "â", UpArrowBar: "â¤", UpArrowDownArrow: "â", UpDownArrow: "â", Updownarrow: "â", updownarrow: "â", UpEquilibrium: "â¥®", upharpoonleft: "â¿", upharpoonright: "â¾", uplus: "â", UpperLeftArrow: "â", UpperRightArrow: "â", Upsi: "Ï", upsi: "Ï", upsih: "Ï", Upsilon: "Î¥", upsilon: "Ï", UpTee: "â¥", UpTeeArrow: "â¥", upuparrows: "â", urcorn: "â", urcorner: "â", urcrop: "â", Uring: "Å®", uring: "Å¯", urtri: "â¹", Uscr: "ð°", uscr: "ð", utdot: "â°", Utilde: "Å¨", utilde: "Å©", utri: "âµ", utrif: "â´", uuarr: "â", Uuml: "Ã", uuml: "Ã¼", uwangle: "â¦§", vangrt: "â¦", varepsilon: "Ïµ", varkappa: "Ï°", varnothing: "â", varphi: "Ï", varpi: "Ï", varpropto: "â", vArr: "â", varr: "â", varrho: "Ï±", varsigma: "Ï", varsubsetneq: "âï¸", varsubsetneqq: "â«ï¸", varsupsetneq: "âï¸", varsupsetneqq: "â«ï¸", vartheta: "Ï", vartriangleleft: "â²", vartriangleright: "â³", Vbar: "â««", vBar: "â«¨", vBarv: "â«©", Vcy: "Ð", vcy: "Ð²", VDash: "â«", Vdash: "â©", vDash: "â¨", vdash: "â¢", Vdashl: "â«¦", Vee: "â", vee: "â¨", veebar: "â»", veeeq: "â", vellip: "â®", Verbar: "â", verbar: "|", Vert: "â", vert: "|", VerticalBar: "â£", VerticalLine: "|", VerticalSeparator: "â", VerticalTilde: "â", VeryThinSpace: "â", Vfr: "ð", vfr: "ð³", vltri: "â²", vnsub: "ââ", vnsup: "ââ", Vopf: "ð", vopf: "ð§", vprop: "â", vrtri: "â³", Vscr: "ð±", vscr: "ð", vsubnE: "â«ï¸", vsubne: "âï¸", vsupnE: "â«ï¸", vsupne: "âï¸", Vvdash: "âª", vzigzag: "â¦", Wcirc: "Å´", wcirc: "Åµ", wedbar: "â©", Wedge: "â", wedge: "â§", wedgeq: "â", weierp: "â", Wfr: "ð", wfr: "ð´", Wopf: "ð", wopf: "ð¨", wp: "â", wr: "â", wreath: "â", Wscr: "ð²", wscr: "ð", xcap: "â", xcirc: "â¯", xcup: "â", xdtri: "â½", Xfr: "ð", xfr: "ðµ", xhArr: "âº", xharr: "â·", Xi: "Î", xi: "Î¾", xlArr: "â¸", xlarr: "âµ", xmap: "â¼", xnis: "â»", xodot: "â¨", Xopf: "ð", xopf: "ð©", xoplus: "â¨", xotime: "â¨", xrArr: "â¹", xrarr: "â¶", Xscr: "ð³", xscr: "ð", xsqcup: "â¨", xuplus: "â¨", xutri: "â³", xvee: "â", xwedge: "â", Yacute: "Ã", yacute: "Ã½", YAcy: "Ð¯", yacy: "Ñ", Ycirc: "Å¶", ycirc: "Å·", Ycy: "Ð«", ycy: "Ñ", yen: "Â¥", Yfr: "ð", yfr: "ð¶", YIcy: "Ð", yicy: "Ñ", Yopf: "ð", yopf: "ðª", Yscr: "ð´", yscr: "ð", YUcy: "Ð®", yucy: "Ñ", Yuml: "Å¸", yuml: "Ã¿", Zacute: "Å¹", zacute: "Åº", Zcaron: "Å½", zcaron: "Å¾", Zcy: "Ð", zcy: "Ð·", Zdot: "Å»", zdot: "Å¼", zeetrf: "â¨", ZeroWidthSpace: "â", Zeta: "Î", zeta: "Î¶", Zfr: "â¨", zfr: "ð·", ZHcy: "Ð", zhcy: "Ð¶", zigrarr: "â", Zopf: "â¤", zopf: "ð«", Zscr: "ðµ", zscr: "ð", zwj: "â", zwnj: "â" }, e.NGSP_UNICODE = "î", e.NAMED_ENTITIES.ngsp = e.NGSP_UNICODE;
        } }), _s = I({ "node_modules/angular-html-parser/lib/compiler/src/ml_parser/html_tags.js"(e) {
          "use strict";
          q(), Object.defineProperty(e, "__esModule", { value: true });
          var r = Ze(), t = class {
            constructor() {
              let { closedByChildren: a, implicitNamespacePrefix: p, contentType: D = r.TagContentType.PARSABLE_DATA, closedByParent: g = false, isVoid: i = false, ignoreFirstLf: l = false } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.closedByChildren = {}, this.closedByParent = false, this.canSelfClose = false, a && a.length > 0 && a.forEach((h) => this.closedByChildren[h] = true), this.isVoid = i, this.closedByParent = g || i, this.implicitNamespacePrefix = p || null, this.contentType = D, this.ignoreFirstLf = l;
            }
            isClosedByChild(a) {
              return this.isVoid || a.toLowerCase() in this.closedByChildren;
            }
          };
          e.HtmlTagDefinition = t;
          var s, c;
          function n(a) {
            return c || (s = new t(), c = { base: new t({ isVoid: true }), meta: new t({ isVoid: true }), area: new t({ isVoid: true }), embed: new t({ isVoid: true }), link: new t({ isVoid: true }), img: new t({ isVoid: true }), input: new t({ isVoid: true }), param: new t({ isVoid: true }), hr: new t({ isVoid: true }), br: new t({ isVoid: true }), source: new t({ isVoid: true }), track: new t({ isVoid: true }), wbr: new t({ isVoid: true }), p: new t({ closedByChildren: ["address", "article", "aside", "blockquote", "div", "dl", "fieldset", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "header", "hgroup", "hr", "main", "nav", "ol", "p", "pre", "section", "table", "ul"], closedByParent: true }), thead: new t({ closedByChildren: ["tbody", "tfoot"] }), tbody: new t({ closedByChildren: ["tbody", "tfoot"], closedByParent: true }), tfoot: new t({ closedByChildren: ["tbody"], closedByParent: true }), tr: new t({ closedByChildren: ["tr"], closedByParent: true }), td: new t({ closedByChildren: ["td", "th"], closedByParent: true }), th: new t({ closedByChildren: ["td", "th"], closedByParent: true }), col: new t({ isVoid: true }), svg: new t({ implicitNamespacePrefix: "svg" }), math: new t({ implicitNamespacePrefix: "math" }), li: new t({ closedByChildren: ["li"], closedByParent: true }), dt: new t({ closedByChildren: ["dt", "dd"] }), dd: new t({ closedByChildren: ["dt", "dd"], closedByParent: true }), rb: new t({ closedByChildren: ["rb", "rt", "rtc", "rp"], closedByParent: true }), rt: new t({ closedByChildren: ["rb", "rt", "rtc", "rp"], closedByParent: true }), rtc: new t({ closedByChildren: ["rb", "rtc", "rp"], closedByParent: true }), rp: new t({ closedByChildren: ["rb", "rt", "rtc", "rp"], closedByParent: true }), optgroup: new t({ closedByChildren: ["optgroup"], closedByParent: true }), option: new t({ closedByChildren: ["option", "optgroup"], closedByParent: true }), pre: new t({ ignoreFirstLf: true }), listing: new t({ ignoreFirstLf: true }), style: new t({ contentType: r.TagContentType.RAW_TEXT }), script: new t({ contentType: r.TagContentType.RAW_TEXT }), title: new t({ contentType: r.TagContentType.ESCAPABLE_RAW_TEXT }), textarea: new t({ contentType: r.TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }) }), c[a] || s;
          }
          e.getHtmlTagDefinition = n;
        } }), VD = I({ "node_modules/angular-html-parser/lib/compiler/src/ast_path.js"(e) {
          "use strict";
          q(), Object.defineProperty(e, "__esModule", { value: true });
          var r = class {
            constructor(t) {
              let s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1;
              this.path = t, this.position = s;
            }
            get empty() {
              return !this.path || !this.path.length;
            }
            get head() {
              return this.path[0];
            }
            get tail() {
              return this.path[this.path.length - 1];
            }
            parentOf(t) {
              return t && this.path[this.path.indexOf(t) - 1];
            }
            childOf(t) {
              return this.path[this.path.indexOf(t) + 1];
            }
            first(t) {
              for (let s = this.path.length - 1; s >= 0; s--) {
                let c = this.path[s];
                if (c instanceof t)
                  return c;
              }
            }
            push(t) {
              this.path.push(t);
            }
            pop() {
              return this.path.pop();
            }
          };
          e.AstPath = r;
        } }), Ss = I({ "node_modules/angular-html-parser/lib/compiler/src/ml_parser/ast.js"(e) {
          "use strict";
          q(), Object.defineProperty(e, "__esModule", { value: true });
          var r = VD(), t = class {
            constructor(d, m, T) {
              this.value = d, this.sourceSpan = m, this.i18n = T, this.type = "text";
            }
            visit(d, m) {
              return d.visitText(this, m);
            }
          };
          e.Text = t;
          var s = class {
            constructor(d, m) {
              this.value = d, this.sourceSpan = m, this.type = "cdata";
            }
            visit(d, m) {
              return d.visitCdata(this, m);
            }
          };
          e.CDATA = s;
          var c = class {
            constructor(d, m, T, B, A, N) {
              this.switchValue = d, this.type = m, this.cases = T, this.sourceSpan = B, this.switchValueSourceSpan = A, this.i18n = N;
            }
            visit(d, m) {
              return d.visitExpansion(this, m);
            }
          };
          e.Expansion = c;
          var n = class {
            constructor(d, m, T, B, A) {
              this.value = d, this.expression = m, this.sourceSpan = T, this.valueSourceSpan = B, this.expSourceSpan = A;
            }
            visit(d, m) {
              return d.visitExpansionCase(this, m);
            }
          };
          e.ExpansionCase = n;
          var a = class {
            constructor(d, m, T) {
              let B = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null, A = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : null, N = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : null;
              this.name = d, this.value = m, this.sourceSpan = T, this.valueSpan = B, this.nameSpan = A, this.i18n = N, this.type = "attribute";
            }
            visit(d, m) {
              return d.visitAttribute(this, m);
            }
          };
          e.Attribute = a;
          var p = class {
            constructor(d, m, T, B) {
              let A = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : null, N = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : null, R = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : null, $ = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : null;
              this.name = d, this.attrs = m, this.children = T, this.sourceSpan = B, this.startSourceSpan = A, this.endSourceSpan = N, this.nameSpan = R, this.i18n = $, this.type = "element";
            }
            visit(d, m) {
              return d.visitElement(this, m);
            }
          };
          e.Element = p;
          var D = class {
            constructor(d, m) {
              this.value = d, this.sourceSpan = m, this.type = "comment";
            }
            visit(d, m) {
              return d.visitComment(this, m);
            }
          };
          e.Comment = D;
          var g = class {
            constructor(d, m) {
              this.value = d, this.sourceSpan = m, this.type = "docType";
            }
            visit(d, m) {
              return d.visitDocType(this, m);
            }
          };
          e.DocType = g;
          function i(d, m) {
            let T = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, B = [], A = d.visit ? (N) => d.visit(N, T) || N.visit(d, T) : (N) => N.visit(d, T);
            return m.forEach((N) => {
              let R = A(N);
              R && B.push(R);
            }), B;
          }
          e.visitAll = i;
          var l = class {
            constructor() {
            }
            visitElement(d, m) {
              this.visitChildren(m, (T) => {
                T(d.attrs), T(d.children);
              });
            }
            visitAttribute(d, m) {
            }
            visitText(d, m) {
            }
            visitCdata(d, m) {
            }
            visitComment(d, m) {
            }
            visitDocType(d, m) {
            }
            visitExpansion(d, m) {
              return this.visitChildren(m, (T) => {
                T(d.cases);
              });
            }
            visitExpansionCase(d, m) {
            }
            visitChildren(d, m) {
              let T = [], B = this;
              function A(N) {
                N && T.push(i(B, N, d));
              }
              return m(A), Array.prototype.concat.apply([], T);
            }
          };
          e.RecursiveVisitor = l;
          function h(d) {
            let m = d.sourceSpan.start.offset, T = d.sourceSpan.end.offset;
            return d instanceof p && (d.endSourceSpan ? T = d.endSourceSpan.end.offset : d.children && d.children.length && (T = h(d.children[d.children.length - 1]).end)), { start: m, end: T };
          }
          function C(d, m) {
            let T = [], B = new class extends l {
              visit(A, N) {
                let R = h(A);
                if (R.start <= m && m < R.end)
                  T.push(A);
                else
                  return true;
              }
            }();
            return i(B, d), new r.AstPath(T, m);
          }
          e.findNode = C;
        } }), XD = I({ "node_modules/angular-html-parser/lib/compiler/src/assertions.js"(e) {
          "use strict";
          q(), Object.defineProperty(e, "__esModule", { value: true });
          function r(c, n) {
            if (n != null) {
              if (!Array.isArray(n))
                throw new Error("Expected '".concat(c, "' to be an array of strings."));
              for (let a = 0; a < n.length; a += 1)
                if (typeof n[a] != "string")
                  throw new Error("Expected '".concat(c, "' to be an array of strings."));
            }
          }
          e.assertArrayOfStrings = r;
          var t = [/^\s*$/, /[<>]/, /^[{}]$/, /&(#|[a-z])/i, /^\/\//];
          function s(c, n) {
            if (n != null && !(Array.isArray(n) && n.length == 2))
              throw new Error("Expected '".concat(c, "' to be an array, [start, end]."));
            if (n != null) {
              let a = n[0], p = n[1];
              t.forEach((D) => {
                if (D.test(a) || D.test(p))
                  throw new Error("['".concat(a, "', '").concat(p, "'] contains unusable interpolation symbol."));
              });
            }
          }
          e.assertInterpolationSymbols = s;
        } }), HD = I({ "node_modules/angular-html-parser/lib/compiler/src/ml_parser/interpolation_config.js"(e) {
          "use strict";
          q(), Object.defineProperty(e, "__esModule", { value: true });
          var r = XD(), t = class {
            constructor(s, c) {
              this.start = s, this.end = c;
            }
            static fromArray(s) {
              return s ? (r.assertInterpolationSymbols("interpolation", s), new t(s[0], s[1])) : e.DEFAULT_INTERPOLATION_CONFIG;
            }
          };
          e.InterpolationConfig = t, e.DEFAULT_INTERPOLATION_CONFIG = new t("{{", "}}");
        } }), zD = I({ "node_modules/angular-html-parser/lib/compiler/src/ml_parser/lexer.js"(e) {
          "use strict";
          q(), Object.defineProperty(e, "__esModule", { value: true });
          var r = hs(), t = Te(), s = HD(), c = Ze(), n;
          (function(u) {
            u[u.TAG_OPEN_START = 0] = "TAG_OPEN_START", u[u.TAG_OPEN_END = 1] = "TAG_OPEN_END", u[u.TAG_OPEN_END_VOID = 2] = "TAG_OPEN_END_VOID", u[u.TAG_CLOSE = 3] = "TAG_CLOSE", u[u.TEXT = 4] = "TEXT", u[u.ESCAPABLE_RAW_TEXT = 5] = "ESCAPABLE_RAW_TEXT", u[u.RAW_TEXT = 6] = "RAW_TEXT", u[u.COMMENT_START = 7] = "COMMENT_START", u[u.COMMENT_END = 8] = "COMMENT_END", u[u.CDATA_START = 9] = "CDATA_START", u[u.CDATA_END = 10] = "CDATA_END", u[u.ATTR_NAME = 11] = "ATTR_NAME", u[u.ATTR_QUOTE = 12] = "ATTR_QUOTE", u[u.ATTR_VALUE = 13] = "ATTR_VALUE", u[u.DOC_TYPE_START = 14] = "DOC_TYPE_START", u[u.DOC_TYPE_END = 15] = "DOC_TYPE_END", u[u.EXPANSION_FORM_START = 16] = "EXPANSION_FORM_START", u[u.EXPANSION_CASE_VALUE = 17] = "EXPANSION_CASE_VALUE", u[u.EXPANSION_CASE_EXP_START = 18] = "EXPANSION_CASE_EXP_START", u[u.EXPANSION_CASE_EXP_END = 19] = "EXPANSION_CASE_EXP_END", u[u.EXPANSION_FORM_END = 20] = "EXPANSION_FORM_END", u[u.EOF = 21] = "EOF";
          })(n = e.TokenType || (e.TokenType = {}));
          var a = class {
            constructor(u, o, E) {
              this.type = u, this.parts = o, this.sourceSpan = E;
            }
          };
          e.Token = a;
          var p = class extends t.ParseError {
            constructor(u, o, E) {
              super(E, u), this.tokenType = o;
            }
          };
          e.TokenError = p;
          var D = class {
            constructor(u, o) {
              this.tokens = u, this.errors = o;
            }
          };
          e.TokenizeResult = D;
          function g(u, o, E) {
            let f = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
            return new d(new t.ParseSourceFile(u, o), E, f).tokenize();
          }
          e.tokenize = g;
          var i = /\r\n?/g;
          function l(u) {
            let o = u === r.$EOF ? "EOF" : String.fromCharCode(u);
            return 'Unexpected character "'.concat(o, '"');
          }
          function h(u) {
            return 'Unknown entity "'.concat(u, '" - use the "&#<decimal>;" or  "&#x<hex>;" syntax');
          }
          var C = class {
            constructor(u) {
              this.error = u;
            }
          }, d = class {
            constructor(u, o, E) {
              this._getTagContentType = o, this._currentTokenStart = null, this._currentTokenType = null, this._expansionCaseStack = [], this._inInterpolation = false, this._fullNameStack = [], this.tokens = [], this.errors = [], this._tokenizeIcu = E.tokenizeExpansionForms || false, this._interpolationConfig = E.interpolationConfig || s.DEFAULT_INTERPOLATION_CONFIG, this._leadingTriviaCodePoints = E.leadingTriviaChars && E.leadingTriviaChars.map((F) => F.codePointAt(0) || 0), this._canSelfClose = E.canSelfClose || false, this._allowHtmComponentClosingTags = E.allowHtmComponentClosingTags || false;
              let f = E.range || { endPos: u.content.length, startPos: 0, startLine: 0, startCol: 0 };
              this._cursor = E.escapedString ? new k(u, f) : new x(u, f);
              try {
                this._cursor.init();
              } catch (F) {
                this.handleError(F);
              }
            }
            _processCarriageReturns(u) {
              return u.replace(i, `
`);
            }
            tokenize() {
              for (; this._cursor.peek() !== r.$EOF; ) {
                let u = this._cursor.clone();
                try {
                  if (this._attemptCharCode(r.$LT))
                    if (this._attemptCharCode(r.$BANG))
                      this._attemptStr("[CDATA[") ? this._consumeCdata(u) : this._attemptStr("--") ? this._consumeComment(u) : this._attemptStrCaseInsensitive("doctype") ? this._consumeDocType(u) : this._consumeBogusComment(u);
                    else if (this._attemptCharCode(r.$SLASH))
                      this._consumeTagClose(u);
                    else {
                      let o = this._cursor.clone();
                      this._attemptCharCode(r.$QUESTION) ? (this._cursor = o, this._consumeBogusComment(u)) : this._consumeTagOpen(u);
                    }
                  else
                    this._tokenizeIcu && this._tokenizeExpansionForm() || this._consumeText();
                } catch (o) {
                  this.handleError(o);
                }
              }
              return this._beginToken(n.EOF), this._endToken([]), new D(O(this.tokens), this.errors);
            }
            _tokenizeExpansionForm() {
              if (this.isExpansionFormStart())
                return this._consumeExpansionFormStart(), true;
              if (R(this._cursor.peek()) && this._isInExpansionForm())
                return this._consumeExpansionCaseStart(), true;
              if (this._cursor.peek() === r.$RBRACE) {
                if (this._isInExpansionCase())
                  return this._consumeExpansionCaseEnd(), true;
                if (this._isInExpansionForm())
                  return this._consumeExpansionFormEnd(), true;
              }
              return false;
            }
            _beginToken(u) {
              let o = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this._cursor.clone();
              this._currentTokenStart = o, this._currentTokenType = u;
            }
            _endToken(u) {
              let o = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this._cursor.clone();
              if (this._currentTokenStart === null)
                throw new p("Programming error - attempted to end a token when there was no start to the token", this._currentTokenType, this._cursor.getSpan(o));
              if (this._currentTokenType === null)
                throw new p("Programming error - attempted to end a token which has no token type", null, this._cursor.getSpan(this._currentTokenStart));
              let E = new a(this._currentTokenType, u, this._cursor.getSpan(this._currentTokenStart, this._leadingTriviaCodePoints));
              return this.tokens.push(E), this._currentTokenStart = null, this._currentTokenType = null, E;
            }
            _createError(u, o) {
              this._isInExpansionForm() && (u += ` (Do you have an unescaped "{" in your template? Use "{{ '{' }}") to escape it.)`);
              let E = new p(u, this._currentTokenType, o);
              return this._currentTokenStart = null, this._currentTokenType = null, new C(E);
            }
            handleError(u) {
              if (u instanceof M && (u = this._createError(u.msg, this._cursor.getSpan(u.cursor))), u instanceof C)
                this.errors.push(u.error);
              else
                throw u;
            }
            _attemptCharCode(u) {
              return this._cursor.peek() === u ? (this._cursor.advance(), true) : false;
            }
            _attemptCharCodeCaseInsensitive(u) {
              return $(this._cursor.peek(), u) ? (this._cursor.advance(), true) : false;
            }
            _requireCharCode(u) {
              let o = this._cursor.clone();
              if (!this._attemptCharCode(u))
                throw this._createError(l(this._cursor.peek()), this._cursor.getSpan(o));
            }
            _attemptStr(u) {
              let o = u.length;
              if (this._cursor.charsLeft() < o)
                return false;
              let E = this._cursor.clone();
              for (let f = 0; f < o; f++)
                if (!this._attemptCharCode(u.charCodeAt(f)))
                  return this._cursor = E, false;
              return true;
            }
            _attemptStrCaseInsensitive(u) {
              for (let o = 0; o < u.length; o++)
                if (!this._attemptCharCodeCaseInsensitive(u.charCodeAt(o)))
                  return false;
              return true;
            }
            _requireStr(u) {
              let o = this._cursor.clone();
              if (!this._attemptStr(u))
                throw this._createError(l(this._cursor.peek()), this._cursor.getSpan(o));
            }
            _requireStrCaseInsensitive(u) {
              let o = this._cursor.clone();
              if (!this._attemptStrCaseInsensitive(u))
                throw this._createError(l(this._cursor.peek()), this._cursor.getSpan(o));
            }
            _attemptCharCodeUntilFn(u) {
              for (; !u(this._cursor.peek()); )
                this._cursor.advance();
            }
            _requireCharCodeUntilFn(u, o) {
              let E = this._cursor.clone();
              if (this._attemptCharCodeUntilFn(u), this._cursor.clone().diff(E) < o)
                throw this._createError(l(this._cursor.peek()), this._cursor.getSpan(E));
            }
            _attemptUntilChar(u) {
              for (; this._cursor.peek() !== u; )
                this._cursor.advance();
            }
            _readChar(u) {
              if (u && this._cursor.peek() === r.$AMPERSAND)
                return this._decodeEntity();
              {
                let o = String.fromCodePoint(this._cursor.peek());
                return this._cursor.advance(), o;
              }
            }
            _decodeEntity() {
              let u = this._cursor.clone();
              if (this._cursor.advance(), this._attemptCharCode(r.$HASH)) {
                let o = this._attemptCharCode(r.$x) || this._attemptCharCode(r.$X), E = this._cursor.clone();
                if (this._attemptCharCodeUntilFn(A), this._cursor.peek() != r.$SEMICOLON)
                  throw this._createError(l(this._cursor.peek()), this._cursor.getSpan());
                let f = this._cursor.getChars(E);
                this._cursor.advance();
                try {
                  let F = parseInt(f, o ? 16 : 10);
                  return String.fromCharCode(F);
                } catch {
                  throw this._createError(h(this._cursor.getChars(u)), this._cursor.getSpan());
                }
              } else {
                let o = this._cursor.clone();
                if (this._attemptCharCodeUntilFn(N), this._cursor.peek() != r.$SEMICOLON)
                  return this._cursor = o, "&";
                let E = this._cursor.getChars(o);
                this._cursor.advance();
                let f = c.NAMED_ENTITIES[E];
                if (!f)
                  throw this._createError(h(E), this._cursor.getSpan(u));
                return f;
              }
            }
            _consumeRawText(u, o) {
              this._beginToken(u ? n.ESCAPABLE_RAW_TEXT : n.RAW_TEXT);
              let E = [];
              for (; ; ) {
                let f = this._cursor.clone(), F = o();
                if (this._cursor = f, F)
                  break;
                E.push(this._readChar(u));
              }
              return this._endToken([this._processCarriageReturns(E.join(""))]);
            }
            _consumeComment(u) {
              this._beginToken(n.COMMENT_START, u), this._endToken([]), this._consumeRawText(false, () => this._attemptStr("-->")), this._beginToken(n.COMMENT_END), this._requireStr("-->"), this._endToken([]);
            }
            _consumeBogusComment(u) {
              this._beginToken(n.COMMENT_START, u), this._endToken([]), this._consumeRawText(false, () => this._cursor.peek() === r.$GT), this._beginToken(n.COMMENT_END), this._cursor.advance(), this._endToken([]);
            }
            _consumeCdata(u) {
              this._beginToken(n.CDATA_START, u), this._endToken([]), this._consumeRawText(false, () => this._attemptStr("]]>")), this._beginToken(n.CDATA_END), this._requireStr("]]>"), this._endToken([]);
            }
            _consumeDocType(u) {
              this._beginToken(n.DOC_TYPE_START, u), this._endToken([]), this._consumeRawText(false, () => this._cursor.peek() === r.$GT), this._beginToken(n.DOC_TYPE_END), this._cursor.advance(), this._endToken([]);
            }
            _consumePrefixAndName() {
              let u = this._cursor.clone(), o = "";
              for (; this._cursor.peek() !== r.$COLON && !B(this._cursor.peek()); )
                this._cursor.advance();
              let E;
              this._cursor.peek() === r.$COLON ? (o = this._cursor.getChars(u), this._cursor.advance(), E = this._cursor.clone()) : E = u, this._requireCharCodeUntilFn(T, o === "" ? 0 : 1);
              let f = this._cursor.getChars(E);
              return [o, f];
            }
            _consumeTagOpen(u) {
              let o, E, f, F = this.tokens.length, P = this._cursor.clone(), j = [];
              try {
                if (!r.isAsciiLetter(this._cursor.peek()))
                  throw this._createError(l(this._cursor.peek()), this._cursor.getSpan(u));
                for (f = this._consumeTagOpenStart(u), E = f.parts[0], o = f.parts[1], this._attemptCharCodeUntilFn(m); this._cursor.peek() !== r.$SLASH && this._cursor.peek() !== r.$GT; ) {
                  let [X, H] = this._consumeAttributeName();
                  if (this._attemptCharCodeUntilFn(m), this._attemptCharCode(r.$EQ)) {
                    this._attemptCharCodeUntilFn(m);
                    let z = this._consumeAttributeValue();
                    j.push({ prefix: X, name: H, value: z });
                  } else
                    j.push({ prefix: X, name: H });
                  this._attemptCharCodeUntilFn(m);
                }
                this._consumeTagOpenEnd();
              } catch (X) {
                if (X instanceof C) {
                  this._cursor = P, f && (this.tokens.length = F), this._beginToken(n.TEXT, u), this._endToken(["<"]);
                  return;
                }
                throw X;
              }
              if (this._canSelfClose && this.tokens[this.tokens.length - 1].type === n.TAG_OPEN_END_VOID)
                return;
              let W = this._getTagContentType(o, E, this._fullNameStack.length > 0, j);
              this._handleFullNameStackForTagOpen(E, o), W === c.TagContentType.RAW_TEXT ? this._consumeRawTextWithTagClose(E, o, false) : W === c.TagContentType.ESCAPABLE_RAW_TEXT && this._consumeRawTextWithTagClose(E, o, true);
            }
            _consumeRawTextWithTagClose(u, o, E) {
              let f = this._consumeRawText(E, () => !this._attemptCharCode(r.$LT) || !this._attemptCharCode(r.$SLASH) || (this._attemptCharCodeUntilFn(m), !this._attemptStrCaseInsensitive(u ? "".concat(u, ":").concat(o) : o)) ? false : (this._attemptCharCodeUntilFn(m), this._attemptCharCode(r.$GT)));
              this._beginToken(n.TAG_CLOSE), this._requireCharCodeUntilFn((F) => F === r.$GT, 3), this._cursor.advance(), this._endToken([u, o]), this._handleFullNameStackForTagClose(u, o);
            }
            _consumeTagOpenStart(u) {
              this._beginToken(n.TAG_OPEN_START, u);
              let o = this._consumePrefixAndName();
              return this._endToken(o);
            }
            _consumeAttributeName() {
              let u = this._cursor.peek();
              if (u === r.$SQ || u === r.$DQ)
                throw this._createError(l(u), this._cursor.getSpan());
              this._beginToken(n.ATTR_NAME);
              let o = this._consumePrefixAndName();
              return this._endToken(o), o;
            }
            _consumeAttributeValue() {
              let u;
              if (this._cursor.peek() === r.$SQ || this._cursor.peek() === r.$DQ) {
                this._beginToken(n.ATTR_QUOTE);
                let o = this._cursor.peek();
                this._cursor.advance(), this._endToken([String.fromCodePoint(o)]), this._beginToken(n.ATTR_VALUE);
                let E = [];
                for (; this._cursor.peek() !== o; )
                  E.push(this._readChar(true));
                u = this._processCarriageReturns(E.join("")), this._endToken([u]), this._beginToken(n.ATTR_QUOTE), this._cursor.advance(), this._endToken([String.fromCodePoint(o)]);
              } else {
                this._beginToken(n.ATTR_VALUE);
                let o = this._cursor.clone();
                this._requireCharCodeUntilFn(T, 1), u = this._processCarriageReturns(this._cursor.getChars(o)), this._endToken([u]);
              }
              return u;
            }
            _consumeTagOpenEnd() {
              let u = this._attemptCharCode(r.$SLASH) ? n.TAG_OPEN_END_VOID : n.TAG_OPEN_END;
              this._beginToken(u), this._requireCharCode(r.$GT), this._endToken([]);
            }
            _consumeTagClose(u) {
              if (this._beginToken(n.TAG_CLOSE, u), this._attemptCharCodeUntilFn(m), this._allowHtmComponentClosingTags && this._attemptCharCode(r.$SLASH))
                this._attemptCharCodeUntilFn(m), this._requireCharCode(r.$GT), this._endToken([]);
              else {
                let [o, E] = this._consumePrefixAndName();
                this._attemptCharCodeUntilFn(m), this._requireCharCode(r.$GT), this._endToken([o, E]), this._handleFullNameStackForTagClose(o, E);
              }
            }
            _consumeExpansionFormStart() {
              this._beginToken(n.EXPANSION_FORM_START), this._requireCharCode(r.$LBRACE), this._endToken([]), this._expansionCaseStack.push(n.EXPANSION_FORM_START), this._beginToken(n.RAW_TEXT);
              let u = this._readUntil(r.$COMMA);
              this._endToken([u]), this._requireCharCode(r.$COMMA), this._attemptCharCodeUntilFn(m), this._beginToken(n.RAW_TEXT);
              let o = this._readUntil(r.$COMMA);
              this._endToken([o]), this._requireCharCode(r.$COMMA), this._attemptCharCodeUntilFn(m);
            }
            _consumeExpansionCaseStart() {
              this._beginToken(n.EXPANSION_CASE_VALUE);
              let u = this._readUntil(r.$LBRACE).trim();
              this._endToken([u]), this._attemptCharCodeUntilFn(m), this._beginToken(n.EXPANSION_CASE_EXP_START), this._requireCharCode(r.$LBRACE), this._endToken([]), this._attemptCharCodeUntilFn(m), this._expansionCaseStack.push(n.EXPANSION_CASE_EXP_START);
            }
            _consumeExpansionCaseEnd() {
              this._beginToken(n.EXPANSION_CASE_EXP_END), this._requireCharCode(r.$RBRACE), this._endToken([]), this._attemptCharCodeUntilFn(m), this._expansionCaseStack.pop();
            }
            _consumeExpansionFormEnd() {
              this._beginToken(n.EXPANSION_FORM_END), this._requireCharCode(r.$RBRACE), this._endToken([]), this._expansionCaseStack.pop();
            }
            _consumeText() {
              let u = this._cursor.clone();
              this._beginToken(n.TEXT, u);
              let o = [];
              do
                this._interpolationConfig && this._attemptStr(this._interpolationConfig.start) ? (o.push(this._interpolationConfig.start), this._inInterpolation = true) : this._interpolationConfig && this._inInterpolation && this._attemptStr(this._interpolationConfig.end) ? (o.push(this._interpolationConfig.end), this._inInterpolation = false) : o.push(this._readChar(true));
              while (!this._isTextEnd());
              this._endToken([this._processCarriageReturns(o.join(""))]);
            }
            _isTextEnd() {
              return !!(this._cursor.peek() === r.$LT || this._cursor.peek() === r.$EOF || this._tokenizeIcu && !this._inInterpolation && (this.isExpansionFormStart() || this._cursor.peek() === r.$RBRACE && this._isInExpansionCase()));
            }
            _readUntil(u) {
              let o = this._cursor.clone();
              return this._attemptUntilChar(u), this._cursor.getChars(o);
            }
            _isInExpansionCase() {
              return this._expansionCaseStack.length > 0 && this._expansionCaseStack[this._expansionCaseStack.length - 1] === n.EXPANSION_CASE_EXP_START;
            }
            _isInExpansionForm() {
              return this._expansionCaseStack.length > 0 && this._expansionCaseStack[this._expansionCaseStack.length - 1] === n.EXPANSION_FORM_START;
            }
            isExpansionFormStart() {
              if (this._cursor.peek() !== r.$LBRACE)
                return false;
              if (this._interpolationConfig) {
                let u = this._cursor.clone(), o = this._attemptStr(this._interpolationConfig.start);
                return this._cursor = u, !o;
              }
              return true;
            }
            _handleFullNameStackForTagOpen(u, o) {
              let E = c.mergeNsAndName(u, o);
              (this._fullNameStack.length === 0 || this._fullNameStack[this._fullNameStack.length - 1] === E) && this._fullNameStack.push(E);
            }
            _handleFullNameStackForTagClose(u, o) {
              let E = c.mergeNsAndName(u, o);
              this._fullNameStack.length !== 0 && this._fullNameStack[this._fullNameStack.length - 1] === E && this._fullNameStack.pop();
            }
          };
          function m(u) {
            return !r.isWhitespace(u) || u === r.$EOF;
          }
          function T(u) {
            return r.isWhitespace(u) || u === r.$GT || u === r.$SLASH || u === r.$SQ || u === r.$DQ || u === r.$EQ;
          }
          function B(u) {
            return (u < r.$a || r.$z < u) && (u < r.$A || r.$Z < u) && (u < r.$0 || u > r.$9);
          }
          function A(u) {
            return u == r.$SEMICOLON || u == r.$EOF || !r.isAsciiHexDigit(u);
          }
          function N(u) {
            return u == r.$SEMICOLON || u == r.$EOF || !r.isAsciiLetter(u);
          }
          function R(u) {
            return u === r.$EQ || r.isAsciiLetter(u) || r.isDigit(u);
          }
          function $(u, o) {
            return _(u) == _(o);
          }
          function _(u) {
            return u >= r.$a && u <= r.$z ? u - r.$a + r.$A : u;
          }
          function O(u) {
            let o = [], E;
            for (let f = 0; f < u.length; f++) {
              let F = u[f];
              E && E.type == n.TEXT && F.type == n.TEXT ? (E.parts[0] += F.parts[0], E.sourceSpan.end = F.sourceSpan.end) : (E = F, o.push(E));
            }
            return o;
          }
          var x = class {
            constructor(u, o) {
              if (u instanceof x)
                this.file = u.file, this.input = u.input, this.end = u.end, this.state = Object.assign({}, u.state);
              else {
                if (!o)
                  throw new Error("Programming error: the range argument must be provided with a file argument.");
                this.file = u, this.input = u.content, this.end = o.endPos, this.state = { peek: -1, offset: o.startPos, line: o.startLine, column: o.startCol };
              }
            }
            clone() {
              return new x(this);
            }
            peek() {
              return this.state.peek;
            }
            charsLeft() {
              return this.end - this.state.offset;
            }
            diff(u) {
              return this.state.offset - u.state.offset;
            }
            advance() {
              this.advanceState(this.state);
            }
            init() {
              this.updatePeek(this.state);
            }
            getSpan(u, o) {
              if (u = u || this, o)
                for (u = u.clone(); this.diff(u) > 0 && o.indexOf(u.peek()) !== -1; )
                  u.advance();
              return new t.ParseSourceSpan(new t.ParseLocation(u.file, u.state.offset, u.state.line, u.state.column), new t.ParseLocation(this.file, this.state.offset, this.state.line, this.state.column));
            }
            getChars(u) {
              return this.input.substring(u.state.offset, this.state.offset);
            }
            charAt(u) {
              return this.input.charCodeAt(u);
            }
            advanceState(u) {
              if (u.offset >= this.end)
                throw this.state = u, new M('Unexpected character "EOF"', this);
              let o = this.charAt(u.offset);
              o === r.$LF ? (u.line++, u.column = 0) : r.isNewLine(o) || u.column++, u.offset++, this.updatePeek(u);
            }
            updatePeek(u) {
              u.peek = u.offset >= this.end ? r.$EOF : this.charAt(u.offset);
            }
          }, k = class extends x {
            constructor(u, o) {
              u instanceof k ? (super(u), this.internalState = Object.assign({}, u.internalState)) : (super(u, o), this.internalState = this.state);
            }
            advance() {
              this.state = this.internalState, super.advance(), this.processEscapeSequence();
            }
            init() {
              super.init(), this.processEscapeSequence();
            }
            clone() {
              return new k(this);
            }
            getChars(u) {
              let o = u.clone(), E = "";
              for (; o.internalState.offset < this.internalState.offset; )
                E += String.fromCodePoint(o.peek()), o.advance();
              return E;
            }
            processEscapeSequence() {
              let u = () => this.internalState.peek;
              if (u() === r.$BACKSLASH)
                if (this.internalState = Object.assign({}, this.state), this.advanceState(this.internalState), u() === r.$n)
                  this.state.peek = r.$LF;
                else if (u() === r.$r)
                  this.state.peek = r.$CR;
                else if (u() === r.$v)
                  this.state.peek = r.$VTAB;
                else if (u() === r.$t)
                  this.state.peek = r.$TAB;
                else if (u() === r.$b)
                  this.state.peek = r.$BSPACE;
                else if (u() === r.$f)
                  this.state.peek = r.$FF;
                else if (u() === r.$u)
                  if (this.advanceState(this.internalState), u() === r.$LBRACE) {
                    this.advanceState(this.internalState);
                    let o = this.clone(), E = 0;
                    for (; u() !== r.$RBRACE; )
                      this.advanceState(this.internalState), E++;
                    this.state.peek = this.decodeHexDigits(o, E);
                  } else {
                    let o = this.clone();
                    this.advanceState(this.internalState), this.advanceState(this.internalState), this.advanceState(this.internalState), this.state.peek = this.decodeHexDigits(o, 4);
                  }
                else if (u() === r.$x) {
                  this.advanceState(this.internalState);
                  let o = this.clone();
                  this.advanceState(this.internalState), this.state.peek = this.decodeHexDigits(o, 2);
                } else if (r.isOctalDigit(u())) {
                  let o = "", E = 0, f = this.clone();
                  for (; r.isOctalDigit(u()) && E < 3; )
                    f = this.clone(), o += String.fromCodePoint(u()), this.advanceState(this.internalState), E++;
                  this.state.peek = parseInt(o, 8), this.internalState = f.internalState;
                } else
                  r.isNewLine(this.internalState.peek) ? (this.advanceState(this.internalState), this.state = this.internalState) : this.state.peek = this.internalState.peek;
            }
            decodeHexDigits(u, o) {
              let E = this.input.substr(u.internalState.offset, o), f = parseInt(E, 16);
              if (isNaN(f))
                throw u.state = u.internalState, new M("Invalid hexadecimal escape sequence", u);
              return f;
            }
          }, M = class {
            constructor(u, o) {
              this.msg = u, this.cursor = o;
            }
          };
          e.CursorError = M;
        } }), as = I({ "node_modules/angular-html-parser/lib/compiler/src/ml_parser/parser.js"(e) {
          "use strict";
          q(), Object.defineProperty(e, "__esModule", { value: true });
          var r = Te(), t = Ss(), s = zD(), c = Ze(), n = class extends r.ParseError {
            constructor(i, l, h) {
              super(l, h), this.elementName = i;
            }
            static create(i, l, h) {
              return new n(i, l, h);
            }
          };
          e.TreeError = n;
          var a = class {
            constructor(i, l) {
              this.rootNodes = i, this.errors = l;
            }
          };
          e.ParseTreeResult = a;
          var p = class {
            constructor(i) {
              this.getTagDefinition = i;
            }
            parse(i, l, h) {
              let C = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false, d = arguments.length > 4 ? arguments[4] : void 0, m = (x) => function(k) {
                for (var M = arguments.length, u = new Array(M > 1 ? M - 1 : 0), o = 1; o < M; o++)
                  u[o - 1] = arguments[o];
                return x(k.toLowerCase(), ...u);
              }, T = C ? this.getTagDefinition : m(this.getTagDefinition), B = (x) => T(x).contentType, A = C ? d : m(d), N = d ? (x, k, M, u) => {
                let o = A(x, k, M, u);
                return o !== void 0 ? o : B(x);
              } : B, R = s.tokenize(i, l, N, h), $ = h && h.canSelfClose || false, _ = h && h.allowHtmComponentClosingTags || false, O = new D(R.tokens, T, $, _, C).build();
              return new a(O.rootNodes, R.errors.concat(O.errors));
            }
          };
          e.Parser = p;
          var D = class {
            constructor(i, l, h, C, d) {
              this.tokens = i, this.getTagDefinition = l, this.canSelfClose = h, this.allowHtmComponentClosingTags = C, this.isTagNameCaseSensitive = d, this._index = -1, this._rootNodes = [], this._errors = [], this._elementStack = [], this._advance();
            }
            build() {
              for (; this._peek.type !== s.TokenType.EOF; )
                this._peek.type === s.TokenType.TAG_OPEN_START ? this._consumeStartTag(this._advance()) : this._peek.type === s.TokenType.TAG_CLOSE ? (this._closeVoidElement(), this._consumeEndTag(this._advance())) : this._peek.type === s.TokenType.CDATA_START ? (this._closeVoidElement(), this._consumeCdata(this._advance())) : this._peek.type === s.TokenType.COMMENT_START ? (this._closeVoidElement(), this._consumeComment(this._advance())) : this._peek.type === s.TokenType.TEXT || this._peek.type === s.TokenType.RAW_TEXT || this._peek.type === s.TokenType.ESCAPABLE_RAW_TEXT ? (this._closeVoidElement(), this._consumeText(this._advance())) : this._peek.type === s.TokenType.EXPANSION_FORM_START ? this._consumeExpansion(this._advance()) : this._peek.type === s.TokenType.DOC_TYPE_START ? this._consumeDocType(this._advance()) : this._advance();
              return new a(this._rootNodes, this._errors);
            }
            _advance() {
              let i = this._peek;
              return this._index < this.tokens.length - 1 && this._index++, this._peek = this.tokens[this._index], i;
            }
            _advanceIf(i) {
              return this._peek.type === i ? this._advance() : null;
            }
            _consumeCdata(i) {
              let l = this._advance(), h = this._getText(l), C = this._advanceIf(s.TokenType.CDATA_END);
              this._addToParent(new t.CDATA(h, new r.ParseSourceSpan(i.sourceSpan.start, (C || l).sourceSpan.end)));
            }
            _consumeComment(i) {
              let l = this._advanceIf(s.TokenType.RAW_TEXT), h = this._advanceIf(s.TokenType.COMMENT_END), C = l != null ? l.parts[0].trim() : null, d = new r.ParseSourceSpan(i.sourceSpan.start, (h || l || i).sourceSpan.end);
              this._addToParent(new t.Comment(C, d));
            }
            _consumeDocType(i) {
              let l = this._advanceIf(s.TokenType.RAW_TEXT), h = this._advanceIf(s.TokenType.DOC_TYPE_END), C = l != null ? l.parts[0].trim() : null, d = new r.ParseSourceSpan(i.sourceSpan.start, (h || l || i).sourceSpan.end);
              this._addToParent(new t.DocType(C, d));
            }
            _consumeExpansion(i) {
              let l = this._advance(), h = this._advance(), C = [];
              for (; this._peek.type === s.TokenType.EXPANSION_CASE_VALUE; ) {
                let m = this._parseExpansionCase();
                if (!m)
                  return;
                C.push(m);
              }
              if (this._peek.type !== s.TokenType.EXPANSION_FORM_END) {
                this._errors.push(n.create(null, this._peek.sourceSpan, "Invalid ICU message. Missing '}'."));
                return;
              }
              let d = new r.ParseSourceSpan(i.sourceSpan.start, this._peek.sourceSpan.end);
              this._addToParent(new t.Expansion(l.parts[0], h.parts[0], C, d, l.sourceSpan)), this._advance();
            }
            _parseExpansionCase() {
              let i = this._advance();
              if (this._peek.type !== s.TokenType.EXPANSION_CASE_EXP_START)
                return this._errors.push(n.create(null, this._peek.sourceSpan, "Invalid ICU message. Missing '{'.")), null;
              let l = this._advance(), h = this._collectExpansionExpTokens(l);
              if (!h)
                return null;
              let C = this._advance();
              h.push(new s.Token(s.TokenType.EOF, [], C.sourceSpan));
              let d = new D(h, this.getTagDefinition, this.canSelfClose, this.allowHtmComponentClosingTags, this.isTagNameCaseSensitive).build();
              if (d.errors.length > 0)
                return this._errors = this._errors.concat(d.errors), null;
              let m = new r.ParseSourceSpan(i.sourceSpan.start, C.sourceSpan.end), T = new r.ParseSourceSpan(l.sourceSpan.start, C.sourceSpan.end);
              return new t.ExpansionCase(i.parts[0], d.rootNodes, m, i.sourceSpan, T);
            }
            _collectExpansionExpTokens(i) {
              let l = [], h = [s.TokenType.EXPANSION_CASE_EXP_START];
              for (; ; ) {
                if ((this._peek.type === s.TokenType.EXPANSION_FORM_START || this._peek.type === s.TokenType.EXPANSION_CASE_EXP_START) && h.push(this._peek.type), this._peek.type === s.TokenType.EXPANSION_CASE_EXP_END)
                  if (g(h, s.TokenType.EXPANSION_CASE_EXP_START)) {
                    if (h.pop(), h.length == 0)
                      return l;
                  } else
                    return this._errors.push(n.create(null, i.sourceSpan, "Invalid ICU message. Missing '}'.")), null;
                if (this._peek.type === s.TokenType.EXPANSION_FORM_END)
                  if (g(h, s.TokenType.EXPANSION_FORM_START))
                    h.pop();
                  else
                    return this._errors.push(n.create(null, i.sourceSpan, "Invalid ICU message. Missing '}'.")), null;
                if (this._peek.type === s.TokenType.EOF)
                  return this._errors.push(n.create(null, i.sourceSpan, "Invalid ICU message. Missing '}'.")), null;
                l.push(this._advance());
              }
            }
            _getText(i) {
              let l = i.parts[0];
              if (l.length > 0 && l[0] == `
`) {
                let h = this._getParentElement();
                h != null && h.children.length == 0 && this.getTagDefinition(h.name).ignoreFirstLf && (l = l.substring(1));
              }
              return l;
            }
            _consumeText(i) {
              let l = this._getText(i);
              l.length > 0 && this._addToParent(new t.Text(l, i.sourceSpan));
            }
            _closeVoidElement() {
              let i = this._getParentElement();
              i && this.getTagDefinition(i.name).isVoid && this._elementStack.pop();
            }
            _consumeStartTag(i) {
              let l = i.parts[0], h = i.parts[1], C = [];
              for (; this._peek.type === s.TokenType.ATTR_NAME; )
                C.push(this._consumeAttr(this._advance()));
              let d = this._getElementFullName(l, h, this._getParentElement()), m = false;
              if (this._peek.type === s.TokenType.TAG_OPEN_END_VOID) {
                this._advance(), m = true;
                let R = this.getTagDefinition(d);
                this.canSelfClose || R.canSelfClose || c.getNsPrefix(d) !== null || R.isVoid || this._errors.push(n.create(d, i.sourceSpan, 'Only void and foreign elements can be self closed "'.concat(i.parts[1], '"')));
              } else
                this._peek.type === s.TokenType.TAG_OPEN_END && (this._advance(), m = false);
              let T = this._peek.sourceSpan.start, B = new r.ParseSourceSpan(i.sourceSpan.start, T), A = new r.ParseSourceSpan(i.sourceSpan.start.moveBy(1), i.sourceSpan.end), N = new t.Element(d, C, [], B, B, void 0, A);
              this._pushElement(N), m && (this._popElement(d), N.endSourceSpan = B);
            }
            _pushElement(i) {
              let l = this._getParentElement();
              l && this.getTagDefinition(l.name).isClosedByChild(i.name) && this._elementStack.pop(), this._addToParent(i), this._elementStack.push(i);
            }
            _consumeEndTag(i) {
              let l = this.allowHtmComponentClosingTags && i.parts.length === 0 ? null : this._getElementFullName(i.parts[0], i.parts[1], this._getParentElement());
              if (this._getParentElement() && (this._getParentElement().endSourceSpan = i.sourceSpan), l && this.getTagDefinition(l).isVoid)
                this._errors.push(n.create(l, i.sourceSpan, 'Void elements do not have end tags "'.concat(i.parts[1], '"')));
              else if (!this._popElement(l)) {
                let h = 'Unexpected closing tag "'.concat(l, '". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags');
                this._errors.push(n.create(l, i.sourceSpan, h));
              }
            }
            _popElement(i) {
              for (let l = this._elementStack.length - 1; l >= 0; l--) {
                let h = this._elementStack[l];
                if (!i || (c.getNsPrefix(h.name) ? h.name == i : h.name.toLowerCase() == i.toLowerCase()))
                  return this._elementStack.splice(l, this._elementStack.length - l), true;
                if (!this.getTagDefinition(h.name).closedByParent)
                  return false;
              }
              return false;
            }
            _consumeAttr(i) {
              let l = c.mergeNsAndName(i.parts[0], i.parts[1]), h = i.sourceSpan.end, C = "", d, m;
              if (this._peek.type === s.TokenType.ATTR_QUOTE && (m = this._advance().sourceSpan.start), this._peek.type === s.TokenType.ATTR_VALUE) {
                let T = this._advance();
                C = T.parts[0], h = T.sourceSpan.end, d = T.sourceSpan;
              }
              return this._peek.type === s.TokenType.ATTR_QUOTE && (h = this._advance().sourceSpan.end, d = new r.ParseSourceSpan(m, h)), new t.Attribute(l, C, new r.ParseSourceSpan(i.sourceSpan.start, h), d, i.sourceSpan);
            }
            _getParentElement() {
              return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;
            }
            _getParentElementSkippingContainers() {
              let i = null;
              for (let l = this._elementStack.length - 1; l >= 0; l--) {
                if (!c.isNgContainer(this._elementStack[l].name))
                  return { parent: this._elementStack[l], container: i };
                i = this._elementStack[l];
              }
              return { parent: null, container: i };
            }
            _addToParent(i) {
              let l = this._getParentElement();
              l != null ? l.children.push(i) : this._rootNodes.push(i);
            }
            _insertBeforeContainer(i, l, h) {
              if (!l)
                this._addToParent(h), this._elementStack.push(h);
              else {
                if (i) {
                  let C = i.children.indexOf(l);
                  i.children[C] = h;
                } else
                  this._rootNodes.push(h);
                h.children.push(l), this._elementStack.splice(this._elementStack.indexOf(l), 0, h);
              }
            }
            _getElementFullName(i, l, h) {
              return i === "" && (i = this.getTagDefinition(l).implicitNamespacePrefix || "", i === "" && h != null && (i = c.getNsPrefix(h.name))), c.mergeNsAndName(i, l);
            }
          };
          function g(i, l) {
            return i.length > 0 && i[i.length - 1] === l;
          }
        } }), WD = I({ "node_modules/angular-html-parser/lib/compiler/src/ml_parser/html_parser.js"(e) {
          "use strict";
          q(), Object.defineProperty(e, "__esModule", { value: true });
          var r = _s(), t = as(), s = as();
          e.ParseTreeResult = s.ParseTreeResult, e.TreeError = s.TreeError;
          var c = class extends t.Parser {
            constructor() {
              super(r.getHtmlTagDefinition);
            }
            parse(n, a, p) {
              let D = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false, g = arguments.length > 4 ? arguments[4] : void 0;
              return super.parse(n, a, p, D, g);
            }
          };
          e.HtmlParser = c;
        } }), ys = I({ "node_modules/angular-html-parser/lib/angular-html-parser/src/index.js"(e) {
          "use strict";
          q(), Object.defineProperty(e, "__esModule", { value: true });
          var r = WD(), t = Ze();
          e.TagContentType = t.TagContentType;
          var s = null, c = () => (s || (s = new r.HtmlParser()), s);
          function n(a) {
            let p = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, { canSelfClose: D = false, allowHtmComponentClosingTags: g = false, isTagNameCaseSensitive: i = false, getTagContentType: l } = p;
            return c().parse(a, "angular-html-parser", { tokenizeExpansionForms: false, interpolationConfig: void 0, canSelfClose: D, allowHtmComponentClosingTags: g }, i, l);
          }
          e.parse = n;
        } });
        q();
        var { ParseSourceSpan: Qe, ParseLocation: is, ParseSourceFile: YD } = Te(), QD = aD(), KD = ps(), JD = iD(), { inferParserByLanguage: ZD } = ID(), el = xD(), jr = LD(), os = MD(), { hasPragma: rl } = jD(), { Node: tl } = $D(), { parseIeConditionalComment: ul } = UD(), { locStart: nl, locEnd: sl } = GD();
        function al(e, r, t) {
          let { recognizeSelfClosing: s, normalizeTagName: c, normalizeAttributeName: n, allowHtmComponentClosingTags: a, isTagNameCaseSensitive: p, getTagContentType: D } = r, g = ys(), { RecursiveVisitor: i, visitAll: l } = Ss(), { ParseSourceSpan: h } = Te(), { getHtmlTagDefinition: C } = _s(), { rootNodes: d, errors: m } = g.parse(e, { canSelfClose: s, allowHtmComponentClosingTags: a, isTagNameCaseSensitive: p, getTagContentType: D });
          if (t.parser === "vue")
            if (d.some((O) => O.type === "docType" && O.value === "html" || O.type === "element" && O.name.toLowerCase() === "html")) {
              s = true, c = true, n = true, a = true, p = false;
              let O = g.parse(e, { canSelfClose: s, allowHtmComponentClosingTags: a, isTagNameCaseSensitive: p });
              d = O.rootNodes, m = O.errors;
            } else {
              let O = (x) => {
                if (!x || x.type !== "element" || x.name !== "template")
                  return false;
                let k = x.attrs.find((u) => u.name === "lang"), M = k && k.value;
                return !M || ZD(M, t) === "html";
              };
              if (d.some(O)) {
                let x, k = () => g.parse(e, { canSelfClose: s, allowHtmComponentClosingTags: a, isTagNameCaseSensitive: p }), M = () => x || (x = k()), u = (o) => M().rootNodes.find((E) => {
                  let { startSourceSpan: f } = E;
                  return f && f.start.offset === o.startSourceSpan.start.offset;
                });
                for (let o = 0; o < d.length; o++) {
                  let E = d[o], { endSourceSpan: f, startSourceSpan: F } = E;
                  if (f === null)
                    m = M().errors, d[o] = u(E) || E;
                  else if (O(E)) {
                    let j = M(), W = F.end.offset, X = f.start.offset;
                    for (let H of j.errors) {
                      let { offset: z } = H.span.start;
                      if (W < z && z < X) {
                        m = [H];
                        break;
                      }
                    }
                    d[o] = u(E) || E;
                  }
                }
              }
            }
          if (m.length > 0) {
            let { msg: _, span: { start: O, end: x } } = m[0];
            throw JD(_, { start: { line: O.line + 1, column: O.col + 1 }, end: { line: x.line + 1, column: x.col + 1 } });
          }
          let T = (_) => {
            let O = _.name.startsWith(":") ? _.name.slice(1).split(":")[0] : null, x = _.nameSpan.toString(), k = O !== null && x.startsWith("".concat(O, ":")), M = k ? x.slice(O.length + 1) : x;
            _.name = M, _.namespace = O, _.hasExplicitNamespace = k;
          }, B = (_) => {
            switch (_.type) {
              case "element":
                T(_);
                for (let O of _.attrs)
                  T(O), O.valueSpan ? (O.value = O.valueSpan.toString(), /["']/.test(O.value[0]) && (O.value = O.value.slice(1, -1))) : O.value = null;
                break;
              case "comment":
                _.value = _.sourceSpan.toString().slice(4, -3);
                break;
              case "text":
                _.value = _.sourceSpan.toString();
                break;
            }
          }, A = (_, O) => {
            let x = _.toLowerCase();
            return O(x) ? x : _;
          }, N = (_) => {
            if (_.type === "element" && (c && (!_.namespace || _.namespace === _.tagDefinition.implicitNamespacePrefix || os(_)) && (_.name = A(_.name, (O) => O in el)), n)) {
              let O = jr[_.name] || /* @__PURE__ */ Object.create(null);
              for (let x of _.attrs)
                x.namespace || (x.name = A(x.name, (k) => _.name in jr && (k in jr["*"] || k in O)));
            }
          }, R = (_) => {
            _.sourceSpan && _.endSourceSpan && (_.sourceSpan = new h(_.sourceSpan.start, _.endSourceSpan.end));
          }, $ = (_) => {
            if (_.type === "element") {
              let O = C(p ? _.name : _.name.toLowerCase());
              !_.namespace || _.namespace === O.implicitNamespacePrefix || os(_) ? _.tagDefinition = O : _.tagDefinition = C("");
            }
          };
          return l(new class extends i {
            visit(_) {
              B(_), $(_), N(_), R(_);
            }
          }(), d), d;
        }
        function Ts(e, r, t) {
          let s = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : true, { frontMatter: c, content: n } = s ? QD(e) : { frontMatter: null, content: e }, a = new YD(e, r.filepath), p = new is(a, 0, 0, 0), D = p.moveBy(e.length), g = { type: "root", sourceSpan: new Qe(p, D), children: al(n, t, r) };
          if (c) {
            let h = new is(a, 0, 0, 0), C = h.moveBy(c.raw.length);
            c.sourceSpan = new Qe(h, C), g.children.unshift(c);
          }
          let i = new tl(g), l = (h, C) => {
            let { offset: d } = C, m = e.slice(0, d).replace(/[^\n\r]/g, " "), B = Ts(m + h, r, t, false);
            B.sourceSpan = new Qe(C, KD(B.children).sourceSpan.end);
            let A = B.children[0];
            return A.length === d ? B.children.shift() : (A.sourceSpan = new Qe(A.sourceSpan.start.moveBy(d), A.sourceSpan.end), A.value = A.value.slice(d)), B;
          };
          return i.walk((h) => {
            if (h.type === "comment") {
              let C = ul(h, l);
              C && h.parent.replaceChild(h, C);
            }
          }), i;
        }
        function Ke() {
          let { name: e, recognizeSelfClosing: r = false, normalizeTagName: t = false, normalizeAttributeName: s = false, allowHtmComponentClosingTags: c = false, isTagNameCaseSensitive: n = false, getTagContentType: a } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          return { parse: (p, D, g) => Ts(p, Object.assign({ parser: e }, g), { recognizeSelfClosing: r, normalizeTagName: t, normalizeAttributeName: s, allowHtmComponentClosingTags: c, isTagNameCaseSensitive: n, getTagContentType: a }), hasPragma: rl, astFormat: "html", locStart: nl, locEnd: sl };
        }
        Bs.exports = { parsers: { html: Ke({ name: "html", recognizeSelfClosing: true, normalizeTagName: true, normalizeAttributeName: true, allowHtmComponentClosingTags: true }), angular: Ke({ name: "angular" }), vue: Ke({ name: "vue", recognizeSelfClosing: true, isTagNameCaseSensitive: true, getTagContentType: (e, r, t, s) => {
          if (e.toLowerCase() !== "html" && !t && (e !== "template" || s.some((c) => {
            let { name: n, value: a } = c;
            return n === "lang" && a !== "html" && a !== "" && a !== void 0;
          })))
            return ys().TagContentType.RAW_TEXT;
        } }), lwc: Ke({ name: "lwc" }) } };
      });
      return il();
    });
  }
});
export default require_parser_html();
//# sourceMappingURL=prettier_parser-html.js.map
